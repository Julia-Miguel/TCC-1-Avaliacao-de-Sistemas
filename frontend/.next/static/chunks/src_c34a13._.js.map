{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,wCAAmC;QACjC,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;QAClD;IACF;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/auth/AdminAuthGuard.tsx"],"sourcesContent":["// frontend/src/components/auth/AdminAuthGuard.tsx\r\n'use client';\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/contexts/AuthContext'; // Ajuste o caminho se o AuthContext estiver em outro lugar\r\n\r\nexport default function AdminAuthGuard({ children }: Readonly<{ children: React.ReactNode }>) {\r\n  const { loggedInAdmin, isLoadingAuth } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Não faz nada enquanto o estado de autenticação ainda está carregando do localStorage\r\n    if (isLoadingAuth) {\r\n      return;\r\n    }\r\n\r\n    // Se não estiver logado E o carregamento inicial do auth já terminou, redireciona\r\n    if (!loggedInAdmin && !isLoadingAuth) {\r\n      router.push('/empresas/login'); // Ou para /admin/login se preferir um ponto de entrada único\r\n    }\r\n  }, [loggedInAdmin, isLoadingAuth, router]);\r\n\r\n  // Se ainda estiver carregando o estado de autenticação ou se não estiver logado (e o redirecionamento vai acontecer),\r\n  // pode mostrar um loader ou nada para evitar flash de conteúdo.\r\n  if (isLoadingAuth || !loggedInAdmin) {\r\n    return <div className=\"page-container center-content\"><p>Verificando autorização...</p></div>;\r\n    // Ou return null; para não mostrar nada até o redirecionamento ocorrer.\r\n  }\r\n\r\n  // Se estiver logado, renderiza a página protegida\r\n  return <>{children}</>;\r\n}"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAElD;AACA;AACA,mOAAkD,2DAA2D;;;AAH7G;;;;AAKe,SAAS,eAAe,EAAE,QAAQ,EAA2C;;IAC1F,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,uFAAuF;YACvF,IAAI,eAAe;gBACjB;YACF;YAEA,kFAAkF;YAClF,IAAI,CAAC,iBAAiB,CAAC,eAAe;gBACpC,OAAO,IAAI,CAAC,oBAAoB,6DAA6D;YAC/F;QACF;mCAAG;QAAC;QAAe;QAAe;KAAO;IAEzC,sHAAsH;IACtH,gEAAgE;IAChE,IAAI,iBAAiB,CAAC,eAAe;QACnC,qBAAO,6LAAC;YAAI,WAAU;sBAAgC,cAAA,6LAAC;0BAAE;;;;;;;;;;;IACzD,wEAAwE;IAC1E;IAEA,kDAAkD;IAClD,qBAAO;kBAAG;;AACZ;GAzBwB;;QACmB,kIAAA,CAAA,UAAO;QACjC,qIAAA,CAAA,YAAS;;;KAFF"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/questionarios/%5Bid%5D/page.tsx"],"sourcesContent":["// frontend/src/app/questionarios/[id]/page.tsx\r\n'use client';\r\n\r\nimport { useEffect, useState, Suspense, useMemo } from \"react\";\r\nimport api from \"@/services/api\";\r\nimport { useRouter, useParams } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport \"../../globals.css\";\r\nimport AdminAuthGuard from '@/components/auth/AdminAuthGuard';\r\nimport { PlusIcon, Trash2, ChevronDown, ChevronUp, Users, CalendarDays, ListChecks } from \"lucide-react\"; // Adicionado ícones\r\n\r\n// --- Interfaces (mantidas como antes) ---\r\ninterface Opcao {\r\n    id?: number;\r\n    texto: string;\r\n    tempId?: string;\r\n}\r\ninterface PerguntaAninhada {\r\n    id?: number;\r\n    enunciado: string;\r\n    tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n    opcoes: Opcao[];\r\n    tempId?: string;\r\n}\r\ninterface QuePerg {\r\n    perguntaId?: number;\r\n    questionarioId: number;\r\n    pergunta: PerguntaAninhada;\r\n    id?: number;\r\n}\r\ninterface QuestionarioData {\r\n    id: number;\r\n    titulo: string;\r\n}\r\ninterface RespostaDetalhada {\r\n    id: number;\r\n    resposta: string;\r\n    pergunta: {\r\n        id: number;\r\n        enunciado: string;\r\n        tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n        opcoes: Opcao[];\r\n    };\r\n}\r\ninterface Respondente {\r\n    id: number;\r\n    status: string;\r\n    isFinalizado: boolean;\r\n    usuario?: { id: number; nome?: string | null; email: string };\r\n    anonymousSessionId?: string | null;\r\n    respostas: RespostaDetalhada[];\r\n    created_at: string;\r\n}\r\ninterface AvaliacaoComDetalhes {\r\n    id: number;\r\n    semestre: string;\r\n    requerLoginCliente: boolean;\r\n    usuarios: Respondente[];\r\n    _count?: { usuarios: number };\r\n    created_at: string; // Adicionado para ordenação se necessário\r\n}\r\n// --- Fim das Interfaces ---\r\n\r\n// Componente exportado da página (sem mudanças)\r\nexport default function EditQuestionarioPage() {\r\n    return (\r\n        <Suspense fallback={<div className=\"page-container center-content\"><p>Carregando...</p></div>}>\r\n            <AdminAuthGuard>\r\n                <EditQuestionarioFormContent />\r\n            </AdminAuthGuard>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nfunction EditQuestionarioFormContent() {\r\n    const router = useRouter();\r\n    const params = useParams();\r\n    const questionarioId = Number(params.id);\r\n\r\n    const [titulo, setTitulo] = useState(\"\");\r\n    const [quePergs, setQuePergs] = useState<QuePerg[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const [viewMode, setViewMode] = useState<'editar' | 'respostas'>('editar');\r\n    const [avaliacoesComRespostas, setAvaliacoesComRespostas] = useState<AvaliacaoComDetalhes[]>([]);\r\n    const [isLoadingRespostas, setIsLoadingRespostas] = useState(false);\r\n    const [selectedAvaliacaoId, setSelectedAvaliacaoId] = useState<number | null>(null);\r\n\r\n    // NOVO: Estado para controlar quais semestres estão expandidos (opcional, para UI com colapso)\r\n    const [semestresExpandidos, setSemestresExpandidos] = useState<Set<string>>(new Set());\r\n\r\n    // --- Lógica de carregamento inicial (sem mudanças significativas) ---\r\n    useEffect(() => {\r\n        if (!questionarioId) {\r\n            setError(\"ID do Questionário não encontrado na URL.\");\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        setError(null);\r\n        const loadData = async () => {\r\n            try {\r\n                const respQuestionario = await api.get<QuestionarioData>(`/questionarios/${questionarioId}`);\r\n                setTitulo(respQuestionario.data.titulo);\r\n                const respQuePerg = await api.get<QuePerg[]>(`/quePerg?questionarioId=${questionarioId}`);\r\n                const sanitizedQuePergs = respQuePerg.data.map(qp => ({\r\n                    ...qp,\r\n                    pergunta: {\r\n                        ...qp.pergunta,\r\n                        opcoes: (qp.pergunta.opcoes || []).map(opt => ({ ...opt }))\r\n                    }\r\n                }));\r\n                setQuePergs(sanitizedQuePergs);\r\n            } catch (err: any) { /* ... (tratamento de erro existente) ... */\r\n                console.error(\"Erro ao carregar dados do questionário:\", err);\r\n                if (err.response && (err.response.status === 401 || err.response.status === 403)) {\r\n                    setError(\"Acesso não autorizado ou negado. Faça o login novamente.\");\r\n                } else if (err.response && err.response.status === 404) {\r\n                    setError(\"Questionário não encontrado. Verifique o ID ou se ele pertence à sua empresa.\");\r\n                } else {\r\n                    setError(\"Não foi possível carregar os dados para edição. Tente novamente.\");\r\n                }\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        loadData();\r\n    }, [questionarioId]);\r\n\r\n    // --- Lógica para buscar respostas quando o modo de visualização muda ---\r\n    useEffect(() => {\r\n        if (viewMode === 'respostas' && questionarioId) {\r\n            setIsLoadingRespostas(true);\r\n            setError(null);\r\n            api.get<AvaliacaoComDetalhes[]>(`/questionarios/${questionarioId}/avaliacoes-com-respostas`) // Endpoint ajustado conforme backend\r\n                .then(response => {\r\n                    setAvaliacoesComRespostas(response.data);\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Erro ao buscar avaliações com respostas:\", err);\r\n                    setError(\"Erro ao buscar dados das respostas.\");\r\n                })\r\n                .finally(() => {\r\n                    setIsLoadingRespostas(false);\r\n                });\r\n        }\r\n    }, [viewMode, questionarioId]);\r\n\r\n    // --- Funções de manipulação de perguntas e opções (sem mudanças) ---\r\n    const handlePerguntaChange = (qIndex: number, novoEnunciado: string) => { /* ... seu código ... */\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) =>\r\n                index === qIndex\r\n                    ? { ...qp, pergunta: { ...qp.pergunta, enunciado: novoEnunciado } }\r\n                    : qp\r\n            )\r\n        );\r\n    };\r\n    const handleTipoChange = (qIndex: number, novoTipo: 'TEXTO' | 'MULTIPLA_ESCOLHA') => { /* ... seu código ... */\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) => {\r\n                if (index === qIndex) {\r\n                    const perguntaAtual = qp.pergunta;\r\n                    const novasOpcoes = novoTipo === 'TEXTO'\r\n                        ? []\r\n                        : (perguntaAtual.opcoes.length === 0 ? [{ texto: '', tempId: `temp-opt-${Date.now()}` }] : perguntaAtual.opcoes.map(o => ({ ...o })));\r\n                    return { ...qp, pergunta: { ...perguntaAtual, tipos: novoTipo, opcoes: novasOpcoes } };\r\n                }\r\n                return qp;\r\n            })\r\n        );\r\n    };\r\n    const handleOptionChange = (qIndex: number, oIndex: number, novoTexto: string) => { /* ... seu código ... */\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) => {\r\n                if (index === qIndex) {\r\n                    const novasOpcoes = qp.pergunta.opcoes.map((opt, optIdx) =>\r\n                        optIdx === oIndex ? { ...opt, texto: novoTexto } : opt\r\n                    );\r\n                    return { ...qp, pergunta: { ...qp.pergunta, opcoes: novasOpcoes } };\r\n                }\r\n                return qp;\r\n            })\r\n        );\r\n    };\r\n    const addOptionToList = (qIndex: number) => { /* ... seu código ... */\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) => {\r\n                if (index === qIndex) {\r\n                    const novasOpcoes = [...qp.pergunta.opcoes, { texto: '', tempId: `temp-opt-${Date.now()}-${qp.pergunta.opcoes.length}` }];\r\n                    return { ...qp, pergunta: { ...qp.pergunta, opcoes: novasOpcoes } };\r\n                }\r\n                return qp;\r\n            })\r\n        );\r\n    };\r\n    const removeOption = (qIndex: number, oIndex: number) => { /* ... seu código ... */\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) => {\r\n                if (index === qIndex) {\r\n                    const novasOpcoes = qp.pergunta.opcoes.filter((_, optIdx) => optIdx !== oIndex);\r\n                    return { ...qp, pergunta: { ...qp.pergunta, opcoes: novasOpcoes } };\r\n                }\r\n                return qp;\r\n            })\r\n        );\r\n    };\r\n    const handleAddNewPergunta = () => { /* ... seu código ... */\r\n        const novaPerguntaDefault: PerguntaAninhada = {\r\n            tempId: `temp-perg-${Date.now()}`,\r\n            enunciado: \"\",\r\n            tipos: \"TEXTO\",\r\n            opcoes: []\r\n        };\r\n        const novoQuePerg: QuePerg = {\r\n            questionarioId: questionarioId,\r\n            pergunta: novaPerguntaDefault\r\n        };\r\n        setQuePergs(prevQuePergs => [...prevQuePergs, novoQuePerg]);\r\n    };\r\n    const handleSaveChanges = async (event: React.FormEvent<HTMLFormElement>) => { /* ... seu código ... */\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            await api.put(`/questionarios`, {\r\n                id: questionarioId,\r\n                titulo: titulo\r\n            });\r\n\r\n            const promisesPerguntas = quePergs.map(async (qp) => {\r\n                let perguntaData = qp.pergunta;\r\n                let perguntaSalvaOuAtualizada: PerguntaAninhada;\r\n\r\n                if (perguntaData.id) {\r\n                    const updatePayload = {\r\n                        id: perguntaData.id,\r\n                        enunciado: perguntaData.enunciado,\r\n                        tipos: perguntaData.tipos,\r\n                        opcoes: perguntaData.tipos === 'MULTIPLA_ESCOLHA' ? perguntaData.opcoes.map(opt => ({ texto: opt.texto })) : []\r\n                    };\r\n                    const response = await api.put(`/perguntas`, updatePayload);\r\n                    perguntaSalvaOuAtualizada = response.data;\r\n                } else {\r\n                    const createPayload = {\r\n                        enunciado: perguntaData.enunciado,\r\n                        tipos: perguntaData.tipos,\r\n                        opcoes: perguntaData.tipos === 'MULTIPLA_ESCOLHA' ? perguntaData.opcoes.map(opt => opt.texto) : []\r\n                    };\r\n                    const response = await api.post(`/perguntas`, createPayload);\r\n                    perguntaSalvaOuAtualizada = response.data;\r\n\r\n                    if (perguntaSalvaOuAtualizada.id) { // Garante que temos ID antes de associar\r\n                        await api.post('/queperg', {\r\n                            questionario_id: questionarioId,\r\n                            pergunta_id: perguntaSalvaOuAtualizada.id\r\n                        });\r\n                    } else {\r\n                        throw new Error(\"Nova pergunta criada não retornou um ID.\");\r\n                    }\r\n                }\r\n                return perguntaSalvaOuAtualizada;\r\n            });\r\n\r\n            await Promise.all(promisesPerguntas);\r\n\r\n            alert(\"Questionário e perguntas atualizados com sucesso!\");\r\n            router.push(\"/questionarios\");\r\n\r\n        } catch (err: any) {\r\n            console.error('Erro ao salvar:', err.response?.data || err.message);\r\n            setError(err.response?.data?.message || 'Erro ao salvar as alterações!');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    // NOVO: Agrupamento e ordenação das avaliações por semestre\r\n    const avaliacoesAgrupadasPorSemestre = useMemo(() => {\r\n        if (viewMode !== 'respostas' || avaliacoesComRespostas.length === 0) {\r\n            return {};\r\n        }\r\n        const agrupado: { [semestre: string]: AvaliacaoComDetalhes[] } = {};\r\n        avaliacoesComRespostas.forEach(av => {\r\n            if (!agrupado[av.semestre]) {\r\n                agrupado[av.semestre] = [];\r\n            }\r\n            agrupado[av.semestre].push(av);\r\n        });\r\n\r\n        // Ordenar os semestres (mais recentes primeiro)\r\n        const semestresOrdenados = Object.keys(agrupado).sort((a, b) => {\r\n            const [anoA, periodoA] = a.split('/').map(Number);\r\n            const [anoB, periodoB] = b.split('/').map(Number);\r\n            if (anoA !== anoB) return anoB - anoA;\r\n            return periodoB - periodoA;\r\n        });\r\n\r\n        const agrupadoOrdenado: { [semestre: string]: AvaliacaoComDetalhes[] } = {};\r\n        semestresOrdenados.forEach(sem => {\r\n            // Ordenar avaliações dentro de cada semestre pela data de criação (mais recente primeiro)\r\n            agrupado[sem].sort((evalA, evalB) => new Date(evalB.created_at).getTime() - new Date(evalA.created_at).getTime());\r\n            agrupadoOrdenado[sem] = agrupado[sem];\r\n        });\r\n\r\n        return agrupadoOrdenado;\r\n    }, [viewMode, avaliacoesComRespostas]);\r\n\r\n    // Função para alternar a expansão de um semestre\r\n    const toggleSemestreExpandido = (semestre: string) => {\r\n        setSemestresExpandidos(prev => {\r\n            const novoSet = new Set(prev);\r\n            if (novoSet.has(semestre)) {\r\n                novoSet.delete(semestre);\r\n            } else {\r\n                novoSet.add(semestre);\r\n            }\r\n            return novoSet;\r\n        });\r\n    };\r\n\r\n\r\n    const selectedAvaliacaoDetalhes = useMemo(() => {\r\n        if (!selectedAvaliacaoId) return null;\r\n        return avaliacoesComRespostas.find(av => av.id === selectedAvaliacaoId);\r\n    }, [selectedAvaliacaoId, avaliacoesComRespostas]);\r\n\r\n    // --- Renderização do Loading e Erro Inicial ---\r\n    if (isLoading && quePergs.length === 0 && !titulo) { /* ... (sem mudança) ... */\r\n        return <div className=\"page-container center-content\"><p>Carregando dados do questionário...</p></div>;\r\n    }\r\n    if (error && quePergs.length === 0 && !titulo) { /* ... (sem mudança) ... */\r\n        return (\r\n            <div className=\"page-container center-content\">\r\n                <p style={{ color: 'red' }}>{error}</p>\r\n                <Link href=\"/questionarios\" className=\"btn btn-secondary\" style={{ marginTop: '1rem' }}>\r\n                    Voltar para Lista de Questionários\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <div className=\"mb-6 flex space-x-2 border-b border-border pb-2\">\r\n                <button\r\n                    onClick={() => { setViewMode('editar'); setSelectedAvaliacaoId(null); }}\r\n                    className={`btn ${viewMode === 'editar' ? 'btn-primary' : 'btn-outline'}`}\r\n                >\r\n                    Configurar Perguntas\r\n                </button>\r\n                <button\r\n                    onClick={() => { setViewMode('respostas'); setSelectedAvaliacaoId(null); }}\r\n                    className={`btn ${viewMode === 'respostas' ? 'btn-primary' : 'btn-outline'}`}\r\n                >\r\n                    Visualizar Respostas\r\n                </button>\r\n            </div>\r\n\r\n            {viewMode === 'editar' && (\r\n                <form onSubmit={handleSaveChanges} className=\"editor-form-card\">\r\n                    {/* ... (Conteúdo do formulário de edição como antes) ... */}\r\n                    <div className=\"form-header\"> {/* Estilo do cabeçalho do card */}\r\n                        <h3>Editando Questionário: {titulo || \"Carregando Título...\"}</h3>\r\n                        <div className=\"form-header-actions\">\r\n                            <button type=\"button\" onClick={() => router.push(\"/questionarios\")} className=\"btn btn-secondary\" disabled={isLoading}>Cancelar</button>\r\n                            <button type=\"submit\" className=\"btn btn-primary\" disabled={isLoading}>\r\n                                {isLoading ? \"Salvando...\" : \"Salvar Alterações\"}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"display-section\">\r\n                        <label htmlFor=\"titulo-input\" className=\"form-label\">Título do Questionário</label> {/* Usando form-label */}\r\n                        <input\r\n                            id=\"titulo-input\"\r\n                            type=\"text\"\r\n                            value={titulo}\r\n                            onChange={(e) => setTitulo(e.target.value)}\r\n                            className=\"input-edit-mode title-input\" // Sua classe ou a global para inputs\r\n                            disabled={isLoading}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"display-section\">\r\n                        <label className=\"form-label\">Perguntas do Questionário</label> {/* Usando form-label */}\r\n                        <div className=\"perguntas-edit-list\">\r\n                            {quePergs.map((qp, qIndex) => (\r\n                                <div key={qp.pergunta.id || qp.pergunta.tempId} className=\"pergunta-editor-item\">\r\n                                    <label htmlFor={`enunciado-pergunta-${qIndex}`} className=\"form-label sr-only\">Enunciado da Pergunta {qIndex + 1}</label>\r\n                                    <textarea\r\n                                        id={`enunciado-pergunta-${qIndex}`}\r\n                                        value={qp.pergunta.enunciado}\r\n                                        onChange={(e) => handlePerguntaChange(qIndex, e.target.value)}\r\n                                        className=\"input-edit-mode question-textarea\" // Sua classe ou a global para textareas\r\n                                        rows={2}\r\n                                        placeholder={`Enunciado da Pergunta ${qIndex + 1}`}\r\n                                        disabled={isLoading}\r\n                                        required\r\n                                    />\r\n                                    <div className=\"pergunta-meta-editor\">\r\n                                        <label htmlFor={`tipo-pergunta-${qIndex}`} className=\"form-label\">Tipo</label>\r\n                                        <select\r\n                                            id={`tipo-pergunta-${qIndex}`}\r\n                                            value={qp.pergunta.tipos}\r\n                                            onChange={(e) => handleTipoChange(qIndex, e.target.value as 'TEXTO' | 'MULTIPLA_ESCOLHA')}\r\n                                            className=\"select-tipo-pergunta\" // Sua classe ou a global para selects\r\n                                            disabled={isLoading}\r\n                                        >\r\n                                            <option value=\"TEXTO\">Texto</option>\r\n                                            <option value=\"MULTIPLA_ESCOLHA\">Múltipla Escolha</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    {qp.pergunta.tipos === 'MULTIPLA_ESCOLHA' && (\r\n                                        <div className=\"opcoes-editor-container\">\r\n                                            <label className=\"form-label\">Opções de Resposta</label>\r\n                                            {qp.pergunta.opcoes.map((opt, oIndex) => (\r\n                                                <div key={opt.id || opt.tempId || `q${qIndex}-o${oIndex}`} className=\"opcao-editor-item\">\r\n                                                    <label htmlFor={`opcao-q${qIndex}-o${oIndex}`} className=\"sr-only\">Opção {oIndex + 1}</label>\r\n                                                    <input\r\n                                                        id={`opcao-q${qIndex}-o${oIndex}`}\r\n                                                        type=\"text\"\r\n                                                        value={opt.texto}\r\n                                                        onChange={(e) => handleOptionChange(qIndex, oIndex, e.target.value)}\r\n                                                        placeholder={`Texto da Opção ${oIndex + 1}`}\r\n                                                        className=\"input-edit-mode\" // Sua classe ou a global para inputs\r\n                                                        disabled={isLoading}\r\n                                                        required={qp.pergunta.tipos === 'MULTIPLA_ESCOLHA'} // Obrigatório se for múltipla escolha\r\n                                                    />\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        onClick={() => removeOption(qIndex, oIndex)}\r\n                                                        className=\"btn-remover-opcao\" // Estilo para este botão específico\r\n                                                        title=\"Remover Opção\"\r\n                                                        disabled={isLoading}\r\n                                                    >\r\n                                                        <Trash2 size={18} />\r\n                                                    </button>\r\n                                                </div>\r\n                                            ))}\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => addOptionToList(qIndex)}\r\n                                                className=\"btn btn-outline btn-sm mt-2 flex items-center self-start\" // Usando classes de botão genéricas\r\n                                                disabled={isLoading}\r\n                                            >\r\n                                                <PlusIcon size={16} className=\"mr-1\" /> Adicionar Opção\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleAddNewPergunta}\r\n                                className=\"btn btn-primary mt-4 flex items-center\" // Botão primário para ação principal\r\n                                style={{ padding: '0.75rem 1.5rem', fontSize: '1rem' }} // Estilo inline mantido, pode virar classe\r\n                                disabled={isLoading}\r\n                            >\r\n                                <PlusIcon size={20} className=\"mr-2\" /> Adicionar Nova Pergunta\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {/* // --- SEÇÃO DE VISUALIZAÇÃO DE RESPOSTAS MODIFICADA --- */}\r\n            {viewMode === 'respostas' && (\r\n                <div className=\"respostas-view-container mt-6\"> {/* Adiciona margem no topo */}\r\n                    <h3 className=\"text-xl sm:text-2xl font-semibold text-foreground mb-6\">\r\n                        Respostas para o Questionário: <span className=\"text-primary\">{titulo}</span>\r\n                    </h3>\r\n\r\n                    {isLoadingRespostas && <div className=\"text-center py-10\"><p className=\"text-text-muted\">Carregando respostas...</p></div>}\r\n                    {error && !isLoadingRespostas && <div className=\"text-center py-10\"><p className=\"text-red-600 dark:text-red-400\">{error}</p></div>}\r\n\r\n                    {!isLoadingRespostas && Object.keys(avaliacoesAgrupadasPorSemestre).length === 0 && !error && (\r\n                        <div className=\"text-center py-10 px-4 bg-card-background dark:bg-gray-800 rounded-lg shadow border border-border\">\r\n                            <ListChecks className=\"mx-auto h-12 w-12 text-text-muted\" strokeWidth={1.5} />\r\n                            <p className=\"mt-4 text-text-muted\">\r\n                                Nenhuma avaliação utilizando este questionário foi encontrada ou nenhuma resposta foi submetida ainda.\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Se uma avaliação específica está selecionada, mostra os detalhes dela */}\r\n                    {selectedAvaliacaoDetalhes && (\r\n                        <div className=\"bg-card-background dark:bg-gray-800 p-4 sm:p-6 rounded-lg shadow border border-border\">\r\n                            <button\r\n                                onClick={() => setSelectedAvaliacaoId(null)}\r\n                                className=\"btn btn-outline btn-sm mb-6 inline-flex items-center\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\"><path d=\"M19 12H5M12 19l-7-7 7-7\" /></svg>\r\n                                Voltar para Lista de Avaliações\r\n                            </button>\r\n                            <h4 className=\"text-xl font-semibold text-primary mb-1\">\r\n                                {selectedAvaliacaoDetalhes.semestre}\r\n                            </h4>\r\n                            <p className=\"text-sm text-text-muted mb-4\">\r\n                                ID da Avaliação: {selectedAvaliacaoDetalhes.id} - Requer Login: {selectedAvaliacaoDetalhes.requerLoginCliente ? \"Sim\" : \"Não\"}\r\n                            </p>\r\n\r\n                            {selectedAvaliacaoDetalhes.usuarios.length === 0 && (\r\n                                <p className=\"text-text-muted py-4\">Nenhuma resposta submetida para esta avaliação.</p>\r\n                            )}\r\n\r\n                            <div className=\"space-y-6\">\r\n                                {selectedAvaliacaoDetalhes.usuarios.map(respondente => (\r\n                                    <div key={respondente.id} className=\"p-4 border border-border rounded-md bg-page-bg dark:bg-gray-800/50\">\r\n                                        <p className=\"text-md font-medium text-foreground\">\r\n                                            Respondente: {respondente.usuario?.nome || respondente.usuario?.email || `Anônimo (Sessão: ...${respondente.anonymousSessionId?.slice(-6)})`}\r\n                                        </p>\r\n                                        <p className=\"text-xs text-text-muted mb-3\">\r\n                                            Status: {respondente.status} ({respondente.isFinalizado ? \"Finalizado\" : \"Em Andamento\"}) - Em: {new Date(respondente.created_at).toLocaleString('pt-BR')}\r\n                                        </p>\r\n                                        <ul className=\"space-y-3\">\r\n                                            {respondente.respostas.map(resp => (\r\n                                                <li key={resp.id} className=\"text-sm\">\r\n                                                    <strong className=\"block text-text-muted mb-0.5\">{resp.pergunta.enunciado}</strong>\r\n                                                    <span className=\"text-foreground pl-1\">{resp.resposta}</span>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Se NENHUMA avaliação específica está selecionada, mostra a lista agrupada por semestre */}\r\n                    {!isLoadingRespostas && Object.keys(avaliacoesAgrupadasPorSemestre).length > 0 && !selectedAvaliacaoId && (\r\n                        <div className=\"space-y-8\">\r\n                            {Object.entries(avaliacoesAgrupadasPorSemestre).map(([semestre, avaliacoesDoSemestre]) => (\r\n                                <div key={semestre} className=\"bg-card-background dark:bg-gray-800 p-4 sm:p-6 rounded-lg shadow border border-border\">\r\n                                    <button\r\n                                        onClick={() => toggleSemestreExpandido(semestre)}\r\n                                        className=\"w-full flex justify-between items-center text-left py-2\"\r\n                                        aria-expanded={semestresExpandidos.has(semestre)}\r\n                                    >\r\n                                        <h4 className=\"text-lg font-semibold text-primary flex items-center\">\r\n                                            <CalendarDays size={20} className=\"mr-2 text-primary/80\" />\r\n                                            Semestre: {semestre}\r\n                                        </h4>\r\n                                        {semestresExpandidos.has(semestre) ? <ChevronUp size={20} /> : <ChevronDown size={20} />}\r\n                                    </button>\r\n\r\n                                    {semestresExpandidos.has(semestre) && (\r\n                                        <div className=\"mt-4 space-y-3 pl-2 border-l-2 border-primary/30\">\r\n                                            {avaliacoesDoSemestre.map(av => (\r\n                                                <div key={av.id}\r\n                                                    className=\"p-3 border border-border rounded-md hover:bg-page-bg dark:hover:bg-gray-700/40 cursor-pointer transition-colors duration-150\"\r\n                                                    onClick={() => setSelectedAvaliacaoId(av.id)}\r\n                                                    role=\"button\"\r\n                                                    tabIndex={0}\r\n                                                    onKeyDown={(e) => e.key === 'Enter' && setSelectedAvaliacaoId(av.id)}\r\n                                                >\r\n                                                    <p className=\"font-medium text-foreground\">\r\n                                                        Avaliação ID: {av.id}\r\n                                                        <span className=\"text-xs text-text-muted ml-2\">\r\n                                                            (Criada em: {new Date(av.created_at).toLocaleDateString('pt-BR')})\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <div className=\"text-sm text-text-muted flex items-center mt-1\">\r\n                                                        <Users size={14} className=\"mr-1.5 text-text-muted/80\" />\r\n                                                        {av._count?.usuarios ?? 0} respondente(s)\r\n                                                        <span className=\"mx-2\">|</span>\r\n                                                        <span>Requer Login: {av.requerLoginCliente ? \"Sim\" : \"Não\"}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}