{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,wCAAmC;QACjC,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;QAClD;IACF;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/avaliacao/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"@/services/api\";\r\nimport Link from \"next/link\";\r\nimport \"../globals.css\";\r\n\r\ninterface AvaliacaoInterface {\r\n  id: number;\r\n  semestre: string;\r\n  questionario: {\r\n    titulo: string;\r\n  };\r\n  usuarios: {\r\n    usuario: {\r\n      nome: string;\r\n    };\r\n    status: string;\r\n    isFinalizado: boolean;\r\n  }[];\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport default function ListAvaliacao() {\r\n  const [avaliacoes, setAvaliacoes] = useState<AvaliacaoInterface[]>([]);\r\n\r\n  useEffect(() => {\r\n    api.get(\"/avaliacao\")\r\n      .then(response => {\r\n        console.log(\"Dados retornados pela API:\", response.data); // Para depuração\r\n        setAvaliacoes(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar as avaliações:\", error.response?.data || error.message);\r\n        alert(\"Erro ao buscar as avaliações: \" + (error.response?.data?.error || error.message));\r\n      });\r\n  }, []);\r\n\r\n  const formatDate = (isoDate: string | null | undefined) => {\r\n    if (!isoDate) return \"Data não disponível\";\r\n    return new Date(isoDate).toLocaleString(\"pt-BR\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n    });\r\n  };\r\n\r\n  const handleDeleteAvaliacao = async (id: number) => {\r\n    if (!window.confirm(\"Deseja realmente excluir esta avaliação?\")) return;\r\n\r\n    try {\r\n      await api.delete('/avaliacao', { data: { id } });\r\n      alert(\"Avaliação excluída com sucesso!\");\r\n      setAvaliacoes(prev => prev.filter(avaliacao => avaliacao.id !== id));\r\n    } catch (error) {\r\n      console.error(\"Erro ao excluir a avaliação:\", error);\r\n      alert(`Erro ao excluir a avaliação: ${error}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"center-content\">\r\n        <h3>Lista de Avaliações</h3>\r\n        <div>\r\n          <Link href=\"/avaliacao/create\">Inserir</Link>\r\n        </div>\r\n        <div>\r\n          <Link href=\"/\">Voltar</Link>\r\n        </div>\r\n      </div>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Semestre</th>\r\n            <th>Questionário</th>\r\n            <th>Usuários</th>\r\n            <th>Criado</th>\r\n            <th>Alterado</th>\r\n            <th>Atualizar</th>\r\n            <th>Excluir</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {avaliacoes.map(avaliacao => (\r\n            <tr key={avaliacao.id}>\r\n              <td>{avaliacao.id}</td>\r\n              <td>{avaliacao.semestre}</td>\r\n              <td>{avaliacao.questionario?.titulo ?? \"Sem título\"}</td>\r\n              <td>\r\n                {avaliacao.usuarios && avaliacao.usuarios.length > 0 ? (\r\n                  avaliacao.usuarios.map((usuAval, index) => (\r\n                    <div key={index}>\r\n                      {usuAval.usuario?.nome ?? \"Usuário não encontrado\"} - {usuAval.status ?? \"Sem status\"} - {usuAval.isFinalizado ? \"Finalizado\" : \"Em andamento\"}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  \"Nenhum usuário associado\"\r\n                )}\r\n              </td>\r\n              <td>{formatDate(avaliacao.created_at)}</td>\r\n              <td>{formatDate(avaliacao.updated_at)}</td>\r\n              <td><Link href={`/avaliacao/update/${avaliacao.id}`}>Atualizar</Link></td>\r\n              <td>\r\n                <button onClick={() => handleDeleteAvaliacao(avaliacao.id)}>\r\n                  Excluir\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}