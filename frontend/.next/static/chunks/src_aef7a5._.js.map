{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,wCAAmC;QACjC,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;QAClD;IACF;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/%28auth-publico%29/clientes/registrar/page.tsx"],"sourcesContent":["// frontend/src/app/(auth-publico)/clientes/registrar/page.tsx\r\n'use client';\r\n\r\nimport { useState, Suspense } from 'react';\r\nimport api from '@/services/api';\r\nimport { useRouter } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport ApplicationLogo from '@/components/ApplicationLogo'; // Opcional\r\n\r\n// Definindo a interface para o que esperamos do backend ao registrar\r\ninterface ClienteRegistrado {\r\n    id: number;\r\n    nome?: string | null;\r\n    email: string;\r\n    tipo: 'CLIENTE_PLATAFORMA';\r\n}\r\n\r\nfunction RegistrarClienteForm() {\r\n    const router = useRouter();\r\n    const [nome, setNome] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [confirmaSenha, setConfirmaSenha] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        setError('');\r\n\r\n        if (senha !== confirmaSenha) {\r\n            setError(\"As senhas não coincidem!\");\r\n            return;\r\n        }\r\n        if (senha.length < 6) {\r\n            setError(\"A senha deve ter pelo menos 6 caracteres.\");\r\n            return;\r\n        }\r\n        // Adicione mais validações se necessário (ex: formato do email)\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const payload = {\r\n                nome: nome.trim() || null, // Envia null se o nome estiver vazio\r\n                email: email.trim(),\r\n                senha,\r\n            };\r\n            // A rota no backend deve ser POST /clientes/register (ou /usuarios/register-cliente)\r\n            await api.post<ClienteRegistrado>('/clientes/register', payload);\r\n\r\n            alert(\"Cadastro realizado com sucesso! Você será redirecionado para o login.\");\r\n            router.push('/clientes/login');\r\n\r\n        } catch (err: any) {\r\n            console.error('Erro ao registrar cliente:', err.response?.data || err.message);\r\n            if (err.response?.data?.message) {\r\n                setError(err.response.data.message);\r\n            } else {\r\n                setError('Ocorreu um erro desconhecido ao tentar registrar.');\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex justify-center mb-6\">\r\n                <Link href=\"/\">\r\n                    <ApplicationLogo className=\"w-12 h-12 text-primary\" />\r\n                </Link>\r\n            </div>\r\n            <h3 className=\"text-center text-xl sm:text-2xl font-semibold text-foreground mb-6\">\r\n                Criar Conta de Cliente\r\n            </h3>\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                {error && (\r\n                    <p className=\"text-sm text-center text-error bg-red-50 dark:bg-red-700/10 p-3 rounded-md border border-error\">\r\n                        {error}\r\n                    </p>\r\n                )}\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"cliente-nome\" className=\"form-label\">Nome (Opcional)</label>\r\n                    <input\r\n                        id=\"cliente-nome\"\r\n                        type=\"text\"\r\n                        value={nome}\r\n                        onChange={(e) => setNome(e.target.value)}\r\n                        className=\"input-edit-mode\" // Reutilize estilos de input do globals.css\r\n                        placeholder=\"Seu nome completo\"\r\n                        disabled={isLoading}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"cliente-email\" className=\"form-label\">Email</label>\r\n                    <input\r\n                        id=\"cliente-email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                        className=\"input-edit-mode\"\r\n                        placeholder=\"seu.email@exemplo.com\"\r\n                        disabled={isLoading}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"cliente-senha\" className=\"form-label\">Senha</label>\r\n                    <input\r\n                        id=\"cliente-senha\"\r\n                        type=\"password\"\r\n                        value={senha}\r\n                        onChange={(e) => setSenha(e.target.value)}\r\n                        required\r\n                        minLength={6}\r\n                        className=\"input-edit-mode\"\r\n                        placeholder=\"Mínimo 6 caracteres\"\r\n                        disabled={isLoading}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"cliente-confirma-senha\" className=\"form-label\">Confirmar Senha</label>\r\n                    <input\r\n                        id=\"cliente-confirma-senha\"\r\n                        type=\"password\"\r\n                        value={confirmaSenha}\r\n                        onChange={(e) => setConfirmaSenha(e.target.value)}\r\n                        required\r\n                        className=\"input-edit-mode\"\r\n                        placeholder=\"Repita sua senha\"\r\n                        disabled={isLoading}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"pt-2 space-y-4\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary w-full py-2.5 text-sm\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        {isLoading ? \"Registrando...\" : \"Criar Conta\"}\r\n                    </button>\r\n                    <p className=\"text-center text-sm text-text-muted\">\r\n                        Já tem uma conta?{' '}\r\n                        <Link href=\"/clientes/login\" className=\"font-medium text-primary hover:underline\">\r\n                            Faça Login\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function RegistrarClientePage() {\r\n    return (\r\n        // Suspense é uma boa prática se LoginForm usar hooks como useSearchParams,\r\n        // mas para este formulário simples, pode não ser estritamente necessário.\r\n        // Mantendo por consistência se você adicionar hooks que o exijam.\r\n        <Suspense fallback={\r\n            <div className=\"flex justify-center items-center min-h-[200px]\">\r\n                <p className=\"text-text-muted\">Carregando...</p>\r\n            </div>\r\n        }>\r\n            <RegistrarClienteForm />\r\n        </Suspense>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}