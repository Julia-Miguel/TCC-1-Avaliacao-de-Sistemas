{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/auth/AdminAuthGuard.tsx"],"sourcesContent":["// frontend/src/components/auth/AdminAuthGuard.tsx\r\n'use client';\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/contexts/AuthContext'; // Ajuste o caminho se o AuthContext estiver em outro lugar\r\n\r\nexport default function AdminAuthGuard({ children }: Readonly<{ children: React.ReactNode }>) {\r\n  const { loggedInAdmin, isLoadingAuth } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Não faz nada enquanto o estado de autenticação ainda está carregando do localStorage\r\n    if (isLoadingAuth) {\r\n      return;\r\n    }\r\n\r\n    // Se não estiver logado E o carregamento inicial do auth já terminou, redireciona\r\n    if (!loggedInAdmin && !isLoadingAuth) {\r\n      router.push('/empresas/login'); // Ou para /admin/login se preferir um ponto de entrada único\r\n    }\r\n  }, [loggedInAdmin, isLoadingAuth, router]);\r\n\r\n  // Se ainda estiver carregando o estado de autenticação ou se não estiver logado (e o redirecionamento vai acontecer),\r\n  // pode mostrar um loader ou nada para evitar flash de conteúdo.\r\n  if (isLoadingAuth || !loggedInAdmin) {\r\n    return <div className=\"page-container center-content\"><p>Verificando autorização...</p></div>;\r\n    // Ou return null; para não mostrar nada até o redirecionamento ocorrer.\r\n  }\r\n\r\n  // Se estiver logado, renderiza a página protegida\r\n  return <>{children}</>;\r\n}"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAElD;AACA;AACA,mOAAkD,2DAA2D;;;AAH7G;;;;AAKe,SAAS,eAAe,EAAE,QAAQ,EAA2C;;IAC1F,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,uFAAuF;YACvF,IAAI,eAAe;gBACjB;YACF;YAEA,kFAAkF;YAClF,IAAI,CAAC,iBAAiB,CAAC,eAAe;gBACpC,OAAO,IAAI,CAAC,oBAAoB,6DAA6D;YAC/F;QACF;mCAAG;QAAC;QAAe;QAAe;KAAO;IAEzC,sHAAsH;IACtH,gEAAgE;IAChE,IAAI,iBAAiB,CAAC,eAAe;QACnC,qBAAO,6LAAC;YAAI,WAAU;sBAAgC,cAAA,6LAAC;0BAAE;;;;;;;;;;;IACzD,wEAAwE;IAC1E;IAEA,kDAAkD;IAClD,qBAAO;kBAAG;;AACZ;GAzBwB;;QACmB,kIAAA,CAAA,UAAO;QACjC,qIAAA,CAAA,YAAS;;;KAFF"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,wCAAmC;QACjC,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;QAClD;IACF;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/charts/PizzaChart.tsx"],"sourcesContent":["// src/components/charts/PizzaChart.tsx\r\n'use client';\r\n\r\nimport { PieChart, Pie, Cell, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { useMemo } from 'react';\r\n\r\n// Tipos para os dados do nosso gráfico\r\ninterface ChartData {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ninterface PizzaChartProps {\r\n  data: { [key: string]: number };\r\n}\r\n\r\n// Cores para as fatias do gráfico. Você pode até pegar das suas variáveis CSS!\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF', '#FF1919'];\r\n\r\nconst CustomTooltip = ({ active, payload }: any) => {\r\n  if (active && payload && payload.length) {\r\n    const data = payload[0];\r\n    return (\r\n      <div className=\"p-2 bg-element-bg border border-main-border rounded-md shadow-lg\">\r\n        <p className=\"text-text-base\">{`${data.name} : ${data.value} (${(data.percent * 100).toFixed(0)}%)`}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport function PizzaChartComponent({ data }: PizzaChartProps) {\r\n  // Converte o objeto de dados para o formato que a Recharts espera\r\n  const chartData: ChartData[] = useMemo(() => {\r\n    return Object.entries(data).map(([name, value]) => ({ name, value }));\r\n  }, [data]);\r\n\r\n  if (chartData.length === 0) {\r\n    return <div className=\"text-center text-text-muted p-4\">Não há respostas para exibir.</div>;\r\n  }\r\n\r\n  return (\r\n    // ResponsiveContainer garante que o gráfico se ajuste ao tamanho do container pai\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <PieChart>\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend />\r\n        <Pie\r\n          data={chartData}\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          labelLine={false}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n          nameKey=\"name\"\r\n        >\r\n          {chartData.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,uCAAuC;;;;;AAIvC;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAFA;;;AAeA,+EAA+E;AAC/E,MAAM,SAAS;IAAC;IAAW;IAAW;IAAW;IAAW;IAAW;CAAU;AAEjF,MAAM,gBAAgB,CAAC,EAAE,MAAM,EAAE,OAAO,EAAO;IAC7C,IAAI,UAAU,WAAW,QAAQ,MAAM,EAAE;QACvC,MAAM,OAAO,OAAO,CAAC,EAAE;QACvB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAE,WAAU;0BAAkB,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,OAAO,GAAG,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;;;;;;;;;;;IAGzG;IACA,OAAO;AACT;KAVM;AAYC,SAAS,oBAAoB,EAAE,IAAI,EAAmB;;IAC3D,kEAAkE;IAClE,MAAM,YAAyB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAAE;YACrC,OAAO,OAAO,OAAO,CAAC,MAAM,GAAG;0DAAC,CAAC,CAAC,MAAM,MAAM,GAAK,CAAC;wBAAE;wBAAM;oBAAM,CAAC;;QACrE;iDAAG;QAAC;KAAK;IAET,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,qBAAO,6LAAC;YAAI,WAAU;sBAAkC;;;;;;IAC1D;IAEA,OACE,kFAAkF;kBAClF,6LAAC,sKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;;8BACP,6LAAC,0JAAA,CAAA,UAAO;oBAAC,uBAAS,6LAAC;;;;;;;;;;8BACnB,6LAAC,yJAAA,CAAA,SAAM;;;;;8BACP,6LAAC,kJAAA,CAAA,MAAG;oBACF,MAAM;oBACN,IAAG;oBACH,IAAG;oBACH,WAAW;oBACX,aAAa;oBACb,MAAK;oBACL,SAAQ;oBACR,SAAQ;8BAEP,UAAU,GAAG,CAAC,CAAC,OAAO,sBACrB,6LAAC,uJAAA,CAAA,OAAI;4BAAuB,MAAM,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC;2BAApD,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;AAMtC;GAjCgB;MAAA"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/charts/WordCloud.tsx"],"sourcesContent":["// src/components/charts/WordCloud.tsx\r\n'use client';\r\n\r\nimport WordCloud from 'react-wordcloud';\r\nimport { useMemo } from 'react';\r\n\r\ninterface WordCloudProps {\r\n  textData: string[];\r\n}\r\n\r\n// Opções de customização da nuvem de palavras\r\nconst options = {\r\n  rotations: 2,\r\n  rotationAngles: [-90, 0] as [number, number],\r\n  fontSizes: [12, 60] as [number, number],\r\n  padding: 2,\r\n};\r\n\r\nexport function WordCloudComponent({ textData }: WordCloudProps) {\r\n    // Processa o texto para contar a frequência de cada palavra\r\n    const words = useMemo(() => {\r\n        const frequencyMap: { [key: string]: number } = {};\r\n        textData.forEach(text => {\r\n            // Separa as palavras, remove pontuação e palavras pequenas\r\n            const cleanedText = text.toLowerCase().replace(/[.,!?;:]/g, '');\r\n            const wordsInText = cleanedText.split(/\\s+/);\r\n\r\n            wordsInText.forEach(word => {\r\n                if (word.length > 3) { // Ignora palavras muito curtas\r\n                    frequencyMap[word] = (frequencyMap[word] || 0) + 1;\r\n                }\r\n            });\r\n        });\r\n\r\n        return Object.entries(frequencyMap).map(([text, value]) => ({ text, value }));\r\n    }, [textData]);\r\n\r\n    if (words.length === 0) {\r\n        return <div className=\"text-center text-text-muted p-4\">Não há respostas de texto para exibir.</div>;\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: 300, width: '100%' }}>\r\n            <WordCloud words={words} options={options} />\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"AAAA,sCAAsC;;;;;AAGtC;AACA;;;AAHA;;;AASA,8CAA8C;AAC9C,MAAM,UAAU;IACd,WAAW;IACX,gBAAgB;QAAC,CAAC;QAAI;KAAE;IACxB,WAAW;QAAC;QAAI;KAAG;IACnB,SAAS;AACX;AAEO,SAAS,mBAAmB,EAAE,QAAQ,EAAkB;;IAC3D,4DAA4D;IAC5D,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;6CAAE;YAClB,MAAM,eAA0C,CAAC;YACjD,SAAS,OAAO;qDAAC,CAAA;oBACb,2DAA2D;oBAC3D,MAAM,cAAc,KAAK,WAAW,GAAG,OAAO,CAAC,aAAa;oBAC5D,MAAM,cAAc,YAAY,KAAK,CAAC;oBAEtC,YAAY,OAAO;6DAAC,CAAA;4BAChB,IAAI,KAAK,MAAM,GAAG,GAAG;gCACjB,YAAY,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,IAAI;4BACrD;wBACJ;;gBACJ;;YAEA,OAAO,OAAO,OAAO,CAAC,cAAc,GAAG;qDAAC,CAAC,CAAC,MAAM,MAAM,GAAK,CAAC;wBAAE;wBAAM;oBAAM,CAAC;;QAC/E;4CAAG;QAAC;KAAS;IAEb,IAAI,MAAM,MAAM,KAAK,GAAG;QACpB,qBAAO,6LAAC;YAAI,WAAU;sBAAkC;;;;;;IAC5D;IAEA,qBACI,6LAAC;QAAI,OAAO;YAAE,QAAQ;YAAK,OAAO;QAAO;kBACrC,cAAA,6LAAC,gKAAA,CAAA,UAAS;YAAC,OAAO;YAAO,SAAS;;;;;;;;;;;AAG9C;GA5BgB;KAAA"}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/questionarios/%5Bid%5D/page.tsx"],"sourcesContent":["// src/app/questionarios/[id]/page.tsx\r\n'use client';\r\n\r\nimport { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\nimport AdminAuthGuard from '../../../components/auth/AdminAuthGuard'; // Ajuste o caminho se necessário\r\nimport api from \"@/services/api\";\r\nimport Link from \"next/link\";\r\nimport \"../../globals.css\";\r\nimport \"../../questionario.css\";\r\nimport { ArrowLeft, Edit, BarChart2, Save, X, Plus, Trash2 } from 'lucide-react';\r\nimport { PizzaChartComponent } from \"@/components/charts/PizzaChart\";\r\nimport { WordCloudComponent } from \"@/components/charts/WordCloud\";\r\n\r\n// --- INTERFACES PARA TIPAGEM DOS DADOS ---\r\n\r\ninterface OpcaoInterface {\r\n    id: number;\r\n    texto: string;\r\n}\r\n\r\ninterface PerguntaDetalhadaInterface {\r\n    id: number;\r\n    enunciado: string;\r\n    tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n    opcoes: OpcaoInterface[];\r\n}\r\n\r\ninterface QuePergItemInterface {\r\n    pergunta: PerguntaDetalhadaInterface;\r\n}\r\n\r\ninterface QuestionarioCompletoInterface {\r\n    id: number;\r\n    titulo: string;\r\n    perguntas: QuePergItemInterface[];\r\n}\r\n\r\n// Interfaces para os dados das respostas\r\ninterface RespostaInterface {\r\n    id: number;\r\n    resposta: string;\r\n    pergunta: PerguntaDetalhadaInterface;\r\n}\r\n\r\ninterface UsuarioRespondenteInterface {\r\n    id: number;\r\n    nome: string;\r\n    respostas: RespostaInterface[];\r\n}\r\n\r\ninterface AvaliacaoComDetalhes {\r\n    id: number;\r\n    semestre: string;\r\n    descricao: string;\r\n    usuarios: UsuarioRespondenteInterface[];\r\n}\r\n\r\n// Tipo para os dados processados para os gráficos\r\ntype ProcessedChartData = {\r\n    enunciado: string;\r\n    tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n    respostas: { [key: string]: number } | string[];\r\n};\r\n\r\n// --- COMPONENTE PRINCIPAL ---\r\n\r\nfunction QuestionarioDetalhesPage() {\r\n    const router = useRouter();\r\n    const params = useParams();\r\n    const id = params.id as string;\r\n\r\n    // --- ESTADOS DO COMPONENTE ---\r\n    const [questionario, setQuestionario] = useState<QuestionarioCompletoInterface | null>(null);\r\n    const [tituloEditavel, setTituloEditavel] = useState('');\r\n    const [isEditingTitle, setIsEditingTitle] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    // Estado para a visualização do dashboard\r\n    const [viewMode, setViewMode] = useState<'editar' | 'respostas'>('editar');\r\n    const [avaliacoesComRespostas, setAvaliacoesComRespostas] = useState<AvaliacaoComDetalhes[]>([]);\r\n    const [isLoadingRespostas, setIsLoadingRespostas] = useState(false);\r\n\r\n\r\n    // --- BUSCA DE DADOS ---\r\n    const fetchQuestionario = useCallback(async () => {\r\n        if (!id) return;\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await api.get(`/questionarios/${id}`);\r\n            setQuestionario(response.data);\r\n            setTituloEditavel(response.data.titulo);\r\n        } catch (err: any) {\r\n            console.error(\"Erro ao buscar questionário:\", err);\r\n            setError(\"Falha ao carregar o questionário. Verifique se ele existe e se você tem permissão.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [id]);\r\n\r\n    const fetchAvaliacoesComRespostas = useCallback(async () => {\r\n        if (viewMode !== 'respostas') return;\r\n        setIsLoadingRespostas(true);\r\n        try {\r\n            const response = await api.get(`/questionarios/${id}/avaliacoes-com-respostas`);\r\n            setAvaliacoesComRespostas(response.data || []);\r\n        } catch (err) {\r\n            console.error(\"Erro ao buscar respostas:\", err);\r\n            setError(\"Não foi possível carregar os dados das respostas.\");\r\n            setAvaliacoesComRespostas([]);\r\n        } finally {\r\n            setIsLoadingRespostas(false);\r\n        }\r\n    }, [id, viewMode]);\r\n\r\n    useEffect(() => {\r\n        fetchQuestionario();\r\n    }, [fetchQuestionario]);\r\n\r\n    useEffect(() => {\r\n        if (viewMode === 'respostas') {\r\n            fetchAvaliacoesComRespostas();\r\n        }\r\n    }, [viewMode, fetchAvaliacoesComRespostas]);\r\n\r\n\r\n    // --- LÓGICA DE PROCESSAMENTO DO DASHBOARD ---\r\n    const dadosProcessados = useMemo((): [number, ProcessedChartData][] => {\r\n        if (viewMode !== 'respostas' || avaliacoesComRespostas.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        const dadosAgregados = new Map<number, ProcessedChartData>();\r\n\r\n        for (const avaliacao of avaliacoesComRespostas) {\r\n            for (const respondente of avaliacao.usuarios) {\r\n                for (const resposta of respondente.respostas) {\r\n                    const { pergunta } = resposta;\r\n                    if (!pergunta) continue; // Pula se não houver dados da pergunta\r\n\r\n                    if (!dadosAgregados.has(pergunta.id)) {\r\n                        dadosAgregados.set(pergunta.id, {\r\n                            enunciado: pergunta.enunciado,\r\n                            tipos: pergunta.tipos,\r\n                            respostas: pergunta.tipos === 'MULTIPLA_ESCOLHA' ? {} : [],\r\n                        });\r\n                    }\r\n\r\n                    const dadosPergunta = dadosAgregados.get(pergunta.id)!;\r\n\r\n                    if (dadosPergunta.tipos === 'MULTIPLA_ESCOLHA') {\r\n                        const resps = dadosPergunta.respostas as { [key: string]: number };\r\n                        resps[resposta.resposta] = (resps[resposta.resposta] || 0) + 1;\r\n                    } else {\r\n                        (dadosPergunta.respostas as string[]).push(resposta.resposta);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Array.from(dadosAgregados.entries());\r\n    }, [avaliacoesComRespostas, viewMode]);\r\n\r\n\r\n    // --- HANDLERS DE EVENTOS ---\r\n    const handleSaveTitle = async () => {\r\n        try {\r\n            await api.put(`/questionarios`, { id: Number(id), titulo: tituloEditavel });\r\n            if (questionario) {\r\n                setQuestionario({ ...questionario, titulo: tituloEditavel });\r\n            }\r\n            setIsEditingTitle(false);\r\n            alert(\"Título atualizado com sucesso!\");\r\n        } catch (err) {\r\n            console.error(\"Erro ao salvar título:\", err);\r\n            alert(\"Erro ao salvar o título.\");\r\n        }\r\n    };\r\n\r\n    // --- RENDERIZAÇÃO ---\r\n    if (isLoading) {\r\n        return <div className=\"page-container center-content\"><p>Carregando...</p></div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"page-container center-content\"><p className=\"error-message\">{error}</p></div>;\r\n    }\r\n\r\n    if (!questionario) {\r\n        return <div className=\"page-container center-content\"><p>Questionário não encontrado.</p></div>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            {/* Cabeçalho com Título e Botão de Voltar */}\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n                <div className=\"flex items-center gap-4\">\r\n                     <button onClick={() => router.push('/questionarios')} className=\"btn btn-icon\">\r\n                        <ArrowLeft size={20} />\r\n                    </button>\r\n                    {!isEditingTitle ? (\r\n                        <h2 className=\"text-2xl font-bold text-foreground flex items-center gap-2\">\r\n                            {questionario.titulo}\r\n                            <button onClick={() => setIsEditingTitle(true)} className=\"btn btn-icon btn-sm\">\r\n                                <Edit size={16} />\r\n                            </button>\r\n                        </h2>\r\n                    ) : (\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={tituloEditavel}\r\n                                onChange={(e) => setTituloEditavel(e.target.value)}\r\n                                className=\"input-field text-2xl font-bold\" // Adapte a classe se necessário\r\n                                autoFocus\r\n                            />\r\n                            <button onClick={handleSaveTitle} className=\"btn btn-success btn-icon\">\r\n                                <Save size={18} />\r\n                            </button>\r\n                            <button onClick={() => setIsEditingTitle(false)} className=\"btn btn-danger btn-icon\">\r\n                                <X size={18} />\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                 {/* Botões de Toggle View */}\r\n                <div className=\"flex items-center gap-2\">\r\n                    <button\r\n                        onClick={() => setViewMode('editar')}\r\n                        className={`btn ${viewMode === 'editar' ? 'btn-primary' : 'btn-outline'}`}\r\n                    >\r\n                        <Edit size={16} className=\"mr-2\" />\r\n                        Editar Questionário\r\n                    </button>\r\n                    <button\r\n                        onClick={() => setViewMode('respostas')}\r\n                        className={`btn ${viewMode === 'respostas' ? 'btn-primary' : 'btn-outline'}`}\r\n                    >\r\n                        <BarChart2 size={16} className=\"mr-2\" />\r\n                        Visualizar Respostas\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* View de Edição */}\r\n            {viewMode === 'editar' && (\r\n                <div className=\"bg-element-bg p-6 rounded-lg shadow-md border border-main-border\">\r\n                    <h3 className=\"text-xl font-semibold text-foreground mb-4\">Perguntas</h3>\r\n                    {questionario.perguntas.length === 0 ? (\r\n                         <div className=\"text-center py-6\">\r\n                             <p className=\"text-text-muted\">Nenhuma pergunta adicionada a este questionário.</p>\r\n                             <Link href={`/queperg/create?questionarioId=${id}`} className=\"btn btn-primary mt-4\">\r\n                                <Plus className=\"mr-2\" size={18}/> Adicionar Pergunta\r\n                            </Link>\r\n                         </div>\r\n                    ) : (\r\n                        <ul className=\"space-y-3\">\r\n                           {questionario.perguntas.map((quePerg, index) => (\r\n                                <li key={quePerg.pergunta.id} className=\"flex items-center justify-between p-3 bg-background rounded-md border border-main-border\">\r\n                                   <div className=\"flex items-center\">\r\n                                       <span className=\"text-text-muted font-medium mr-3\">{index + 1}.</span>\r\n                                       <p className=\"text-text-base\">{quePerg.pergunta.enunciado}</p>\r\n                                   </div>\r\n                                   {/* Adicionar botões de editar/remover pergunta aqui se necessário */}\r\n                                   <button className=\"btn btn-icon btn-sm text-red-500\">\r\n                                       <Trash2 size={16}/>\r\n                                   </button>\r\n                                </li>\r\n                           ))}\r\n                           <div className=\"pt-4\">\r\n                                <Link href={`/queperg/create?questionarioId=${id}`} className=\"btn btn-secondary w-full\">\r\n                                    <Plus className=\"mr-2\" size={18}/> Adicionar Nova Pergunta\r\n                                </Link>\r\n                           </div>\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* View de Dashboards de Respostas */}\r\n            {viewMode === 'respostas' && (\r\n                <div className=\"respostas-view-container mt-6\">\r\n                    {isLoadingRespostas ? (\r\n                        <div className=\"page-container center-content\"><p>Carregando dashboards...</p></div>\r\n                    ) : dadosProcessados.length > 0 ? (\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                            {dadosProcessados.map(([perguntaId, dados]) => (\r\n                                <div key={perguntaId} className=\"bg-element-bg p-4 rounded-lg shadow-md border border-main-border\">\r\n                                    <h4 className=\"font-semibold text-text-base mb-2 text-lg\">{dados.enunciado}</h4>\r\n                                    {dados.tipos === 'MULTIPLA_ESCOLHA' ? (\r\n                                        <PizzaChartComponent data={dados.respostas as { [key: string]: number }} />\r\n                                    ) : (\r\n                                        <WordCloudComponent textData={dados.respostas as string[]} />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"text-center py-10 px-4 bg-element-bg rounded-lg shadow-md mt-6\">\r\n                            <BarChart2 className=\"mx-auto h-12 w-12 text-text-muted\" />\r\n                            <h3 className=\"mt-2 text-sm font-medium text-text-base\">Sem Dados de Respostas</h3>\r\n                            <p className=\"mt-1 text-sm text-text-muted\">Ainda não há respostas para este questionário.</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default function ProtectedQuestionarioDetalhesPage() {\r\n    return (\r\n        <AdminAuthGuard>\r\n            <QuestionarioDetalhesPage />\r\n        </AdminAuthGuard>\r\n    );\r\n}\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}