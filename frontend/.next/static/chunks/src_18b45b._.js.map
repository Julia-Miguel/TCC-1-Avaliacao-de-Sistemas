{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\nexport default api;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAEe"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/usuario/update/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"@/services/api\";\r\nimport { useRouter, useParams } from \"next/navigation\";\r\nimport \"../../../globals.css\";\r\n\r\ninterface Usuario {\r\n  id: number;\r\n  nome: string;\r\n  email: string;\r\n  tipo: string;\r\n}\r\n\r\nexport default function UpdateUsuario() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const router = useRouter();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      api.get<Usuario>(`/usuario/${id}`)\r\n        .then((response) => {\r\n          setNome(response.data.nome);\r\n          setEmail(response.data.email);\r\n          setTipo(response.data.tipo);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          alert(\"Erro ao buscar o usuário\");\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  const handleUpdateUsuario = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const data = { id: Number(id), nome, email, tipo };\r\n    try {\r\n      await api.put(\"/usuario\", data);\r\n      alert(\"Usuário atualizado com sucesso!\");\r\n      router.push(\"/usuario\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Erro ao atualizar o usuário!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Create\">\r\n      <h3>Atualização de Usuário</h3>\r\n      <form onSubmit={handleUpdateUsuario}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Campo</th>\r\n              <th>Valor</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><label htmlFor=\"nome\">Nome</label></td>\r\n              <td><input type=\"text\" name=\"nome\" id=\"nome\" value={nome} onChange={e => setNome(e.target.value)} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td><label htmlFor=\"email\">Email</label></td>\r\n              <td><input type=\"email\" name=\"email\" id=\"email\" value={email} onChange={e => setEmail(e.target.value)} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td><label htmlFor=\"tipo\">Tipo</label></td>\r\n              <td><input type=\"text\" name=\"tipo\" id=\"tipo\" value={tipo} onChange={e => setTipo(e.target.value)} /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button type=\"submit\">Atualizar</button>\r\n        <button type=\"reset\">Limpar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;;AAce,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,IAAI;gBACN,yHAAA,CAAA,UAAG,CAAC,GAAG,CAAU,CAAC,SAAS,EAAE,IAAI,EAC9B,IAAI;+CAAC,CAAC;wBACL,QAAQ,SAAS,IAAI,CAAC,IAAI;wBAC1B,SAAS,SAAS,IAAI,CAAC,KAAK;wBAC5B,QAAQ,SAAS,IAAI,CAAC,IAAI;oBAC5B;8CACC,KAAK;+CAAC,CAAC;wBACN,QAAQ,KAAK,CAAC;wBACd,MAAM;oBACR;;YACJ;QACF;kCAAG;QAAC;KAAG;IAEP,MAAM,sBAAsB,OAAO;QACjC,MAAM,cAAc;QACpB,MAAM,OAAO;YAAE,IAAI,OAAO;YAAK;YAAM;YAAO;QAAK;QACjD,IAAI;YACF,MAAM,yHAAA,CAAA,UAAG,CAAC,GAAG,CAAC,YAAY;YAC1B,MAAM;YACN,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;YACd,MAAM;QACR;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;gBAAK,UAAU;;kCACd,6LAAC;;0CACC,6LAAC;0CACC,cAAA,6LAAC;;sDACC,6LAAC;sDAAG;;;;;;sDACJ,6LAAC;sDAAG;;;;;;;;;;;;;;;;;0CAGR,6LAAC;;kDACC,6LAAC;;0DACC,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,SAAQ;8DAAO;;;;;;;;;;;0DAC1B,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,MAAK;oDAAO,MAAK;oDAAO,IAAG;oDAAO,OAAO;oDAAM,UAAU,CAAA,IAAK,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;kDAEjG,6LAAC;;0DACC,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,SAAQ;8DAAQ;;;;;;;;;;;0DAC3B,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,MAAK;oDAAQ,MAAK;oDAAQ,IAAG;oDAAQ,OAAO;oDAAO,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;kDAEtG,6LAAC;;0DACC,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,SAAQ;8DAAO;;;;;;;;;;;0DAC1B,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,MAAK;oDAAO,MAAK;oDAAO,IAAG;oDAAO,OAAO;oDAAM,UAAU,CAAA,IAAK,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAIrG,6LAAC;wBAAO,MAAK;kCAAS;;;;;;kCACtB,6LAAC;wBAAO,MAAK;kCAAQ;;;;;;;;;;;;;;;;;;AAI7B;GAlEwB;;QAIP,qIAAA,CAAA,YAAS;QACT,qIAAA,CAAA,YAAS;;;KALF"}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}