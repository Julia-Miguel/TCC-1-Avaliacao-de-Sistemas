{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\nexport default api;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAEe"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/usuAval/create/page.tsx"],"sourcesContent":["// frontend/src/app/usuAval/create/page.tsx\r\n'use client';\r\n\r\nimport { useState } from 'react';\r\nimport api from '@/services/api';\r\nimport { useRouter } from 'next/navigation';\r\nimport '../../globals.css';\r\n\r\nexport default function CreateUsuAval() {\r\n  const [usuarioId, setUsuarioId] = useState<number>(0);\r\n  const [avaliacaoId, setAvaliacaoId] = useState<number>(0);\r\n  const [status, setStatus] = useState<string>('');\r\n  const [isFinalizado, setIsFinalizado] = useState<boolean>(false);\r\n  const router = useRouter();\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      await api.post('/usuAval', { usuarioId, avaliacaoId, status, isFinalizado });\r\n      alert('Avaliação criada com sucesso!');\r\n      router.push('/usuAval');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Erro ao criar avaliação');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-content\">\r\n      <h3>Cadastro de Avaliação de Usuário</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Campo</th>\r\n              <th>Valor</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><label htmlFor=\"usuarioId\">Usuário ID</label></td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"usuarioId\"\r\n                  value={usuarioId}\r\n                  onChange={e => setUsuarioId(Number(e.target.value))}\r\n                  required\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td><label htmlFor=\"avaliacaoId\">Avaliação ID</label></td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"avaliacaoId\"\r\n                  value={avaliacaoId}\r\n                  onChange={e => setAvaliacaoId(Number(e.target.value))}\r\n                  required\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td><label htmlFor=\"status\">Status</label></td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"status\"\r\n                  value={status}\r\n                  onChange={e => setStatus(e.target.value)}\r\n                  required\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td><label htmlFor=\"isFinalizado\">Finalizado</label></td>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"isFinalizado\"\r\n                  checked={isFinalizado}\r\n                  onChange={e => setIsFinalizado(e.target.checked)}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button type=\"submit\">Cadastrar</button>\r\n        <button type=\"reset\">Limpar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;;AAG3C;AACA;AACA;;;AAJA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC1D,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,yHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,YAAY;gBAAE;gBAAW;gBAAa;gBAAQ;YAAa;YAC1E,MAAM;YACN,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;YACd,MAAM;QACR;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;gBAAK,UAAU;;kCACd,6LAAC;;0CACC,6LAAC;0CACC,cAAA,6LAAC;;sDACC,6LAAC;sDAAG;;;;;;sDACJ,6LAAC;sDAAG;;;;;;;;;;;;;;;;;0CAGR,6LAAC;;kDACC,6LAAC;;0DACC,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,SAAQ;8DAAY;;;;;;;;;;;0DAC/B,6LAAC;0DACC,cAAA,6LAAC;oDACC,MAAK;oDACL,IAAG;oDACH,OAAO;oDACP,UAAU,CAAA,IAAK,aAAa,OAAO,EAAE,MAAM,CAAC,KAAK;oDACjD,QAAQ;;;;;;;;;;;;;;;;;kDAId,6LAAC;;0DACC,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,SAAQ;8DAAc;;;;;;;;;;;0DACjC,6LAAC;0DACC,cAAA,6LAAC;oDACC,MAAK;oDACL,IAAG;oDACH,OAAO;oDACP,UAAU,CAAA,IAAK,eAAe,OAAO,EAAE,MAAM,CAAC,KAAK;oDACnD,QAAQ;;;;;;;;;;;;;;;;;kDAId,6LAAC;;0DACC,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,SAAQ;8DAAS;;;;;;;;;;;0DAC5B,6LAAC;0DACC,cAAA,6LAAC;oDACC,MAAK;oDACL,IAAG;oDACH,OAAO;oDACP,UAAU,CAAA,IAAK,UAAU,EAAE,MAAM,CAAC,KAAK;oDACvC,QAAQ;;;;;;;;;;;;;;;;;kDAId,6LAAC;;0DACC,6LAAC;0DAAG,cAAA,6LAAC;oDAAM,SAAQ;8DAAe;;;;;;;;;;;0DAClC,6LAAC;0DACC,cAAA,6LAAC;oDACC,MAAK;oDACL,IAAG;oDACH,SAAS;oDACT,UAAU,CAAA,IAAK,gBAAgB,EAAE,MAAM,CAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAMzD,6LAAC;wBAAO,MAAK;kCAAS;;;;;;kCACtB,6LAAC;wBAAO,MAAK;kCAAQ;;;;;;;;;;;;;;;;;;AAI7B;GArFwB;;QAKP,qIAAA,CAAA,YAAS;;;KALF"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}