{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,uCAAmC;;IAKnC;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/auth/AdminAuthGuard.tsx"],"sourcesContent":["// frontend/src/components/auth/AdminAuthGuard.tsx\r\n'use client';\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/contexts/AuthContext'; // Ajuste o caminho se o AuthContext estiver em outro lugar\r\n\r\nexport default function AdminAuthGuard({ children }: Readonly<{ children: React.ReactNode }>) {\r\n  const { loggedInAdmin, isLoadingAuth } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Não faz nada enquanto o estado de autenticação ainda está carregando do localStorage\r\n    if (isLoadingAuth) {\r\n      return;\r\n    }\r\n\r\n    // Se não estiver logado E o carregamento inicial do auth já terminou, redireciona\r\n    if (!loggedInAdmin && !isLoadingAuth) {\r\n      router.push('/empresas/login'); // Ou para /admin/login se preferir um ponto de entrada único\r\n    }\r\n  }, [loggedInAdmin, isLoadingAuth, router]);\r\n\r\n  // Se ainda estiver carregando o estado de autenticação ou se não estiver logado (e o redirecionamento vai acontecer),\r\n  // pode mostrar um loader ou nada para evitar flash de conteúdo.\r\n  if (isLoadingAuth || !loggedInAdmin) {\r\n    return <div className=\"page-container center-content\"><p>Verificando autorização...</p></div>;\r\n    // Ou return null; para não mostrar nada até o redirecionamento ocorrer.\r\n  }\r\n\r\n  // Se estiver logado, renderiza a página protegida\r\n  return <>{children}</>;\r\n}"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAElD;AACA;AACA,6NAAkD,2DAA2D;AAH7G;;;;;AAKe,SAAS,eAAe,EAAE,QAAQ,EAA2C;IAC1F,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uFAAuF;QACvF,IAAI,eAAe;YACjB;QACF;QAEA,kFAAkF;QAClF,IAAI,CAAC,iBAAiB,CAAC,eAAe;YACpC,OAAO,IAAI,CAAC,oBAAoB,6DAA6D;QAC/F;IACF,GAAG;QAAC;QAAe;QAAe;KAAO;IAEzC,sHAAsH;IACtH,gEAAgE;IAChE,IAAI,iBAAiB,CAAC,eAAe;QACnC,qBAAO,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;0BAAE;;;;;;;;;;;IACzD,wEAAwE;IAC1E;IAEA,kDAAkD;IAClD,qBAAO;kBAAG;;AACZ"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/perguntas/page.tsx"],"sourcesContent":["// frontend/src/app/perguntas/page.tsx (VERSÃO UNIFICADA)\r\n'use client';\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"@/services/api\";\r\nimport Link from \"next/link\";\r\nimport \"../globals.css\"; // Seu globals.css unificado\r\n// Se houver um CSS específico para a página de perguntas, importe-o aqui\r\n// import \"./perguntas.css\"; \r\nimport { Plus, Edit3, Trash2, ListChecks } from 'lucide-react';\r\nimport AdminAuthGuard from '@/components/auth/AdminAuthGuard'; // Ajuste o caminho se necessário\r\n\r\ninterface PerguntaInterface {\r\n  id: number;\r\n  enunciado: string;\r\n  tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA' | string; // Permitindo string para tipos desconhecidos\r\n  created_at: string;\r\n  updated_at: string;\r\n  opcoes?: any[]; // Adicionado para consistência, embora não usado diretamente na listagem\r\n}\r\n\r\n// Componente de conteúdo que será protegido\r\nfunction ListPerguntaContent() {\r\n  const [perguntas, setPerguntas] = useState<PerguntaInterface[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    // A rota /perguntas no backend deve ser protegida e filtrar por empresa se necessário,\r\n    // ou listar todas as perguntas base disponíveis para a empresa/admins.\r\n    api.get(\"/perguntas\") \r\n      .then(response => {\r\n        setPerguntas(response.data);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Erro ao buscar perguntas:\", err);\r\n        if (err.response && (err.response.status === 401 || err.response.status === 403)) {\r\n          setError(\"Acesso não autorizado ou negado. Faça login como administrador.\");\r\n        } else {\r\n          setError(\"Erro ao buscar perguntas. Verifique a conexão ou tente mais tarde.\");\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const formatDate = (isoDate: string) => {\r\n    if (!isoDate) return \"N/A\";\r\n    return new Date(isoDate).toLocaleString(\"pt-BR\", {\r\n      day: \"2-digit\", month: \"2-digit\", year: \"numeric\",\r\n      hour: \"2-digit\", minute: \"2-digit\",\r\n    });\r\n  };\r\n\r\n  const handleDeletePergunta = async (id: number) => {\r\n    if (!window.confirm(\"Deseja realmente excluir esta pergunta? Esta ação não pode ser desfeita e pode afetar questionários que a utilizam.\")) return;\r\n    try {\r\n      // A rota DELETE /perguntas no backend deve verificar permissões\r\n      await api.delete('/perguntas', { data: { id } });\r\n      setPerguntas(perguntas.filter(pergunta => pergunta.id !== id));\r\n      alert(\"Pergunta excluída com sucesso!\");\r\n    } catch (err) {\r\n      console.error(\"Erro ao excluir a pergunta:\", err);\r\n      alert(\"Erro ao excluir a pergunta!\");\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"page-container flex items-center justify-center min-h-[calc(100vh-8rem)]\">\r\n        <p className=\"text-text-muted\">Carregando perguntas...</p> {/* Usando text-text-muted */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"page-container center-content\"><p style={{ color: 'red' }}>{error}</p></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"table-header-actions\">\r\n        <h3 className=\"text-xl sm:text-2xl font-semibold text-foreground\">\r\n          Banco de Perguntas\r\n        </h3>\r\n        <div className=\"button-group\"> {/* Adicionei sua classe .button-group para consistência se necessário */}\r\n          <Link href=\"/perguntas/create\" className=\"btn btn-primary inline-flex items-center\">\r\n            <Plus size={18} className=\"mr-2\" />\r\n            Nova Pergunta\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {perguntas.length > 0 ? (\r\n        <div className=\"overflow-x-auto bg-card-background dark:bg-gray-800 shadow-md rounded-lg border border-border\"> {/* Usando suas vars CSS */}\r\n          <table className=\"min-w-full\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Enunciado</th>\r\n                <th>Tipo de Pergunta</th>\r\n                <th>Criado em</th>\r\n                <th>Atualizado em</th>\r\n                <th className=\"text-right\">Ações</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {perguntas.map(pergunta => {\r\n                let tipoClasse = 'bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-300'; // Padrão\r\n                let tipoTexto = pergunta.tipos?.toLowerCase().replace('_', ' ') || 'N/D';\r\n\r\n                if (pergunta.tipos === 'MULTIPLA_ESCOLHA') {\r\n                  tipoClasse = 'bg-blue-100 text-blue-800 dark:bg-blue-700/30 dark:text-blue-300';\r\n                } else if (pergunta.tipos === 'TEXTO') {\r\n                  tipoClasse = 'bg-green-100 text-green-800 dark:bg-green-700/30 dark:text-green-300';\r\n                }\r\n\r\n                return (\r\n                  <tr key={pergunta.id}>\r\n                    <td data-label=\"ID\" className=\"whitespace-nowrap\">{pergunta.id}</td>\r\n                    <td data-label=\"Enunciado\" className=\"max-w-sm truncate\" title={pergunta.enunciado}>\r\n                      {pergunta.enunciado}\r\n                    </td>\r\n                    <td data-label=\"Tipo de Pergunta\">\r\n                      <span className={`px-2 py-0.5 text-xs font-medium rounded-full capitalize ${tipoClasse}`}>\r\n                        {tipoTexto}\r\n                      </span>\r\n                    </td>\r\n                    <td data-label=\"Criado em\" className=\"whitespace-nowrap\">{formatDate(pergunta.created_at)}</td>\r\n                    <td data-label=\"Atualizado em\" className=\"whitespace-nowrap\">{formatDate(pergunta.updated_at)}</td>\r\n                    <td data-label=\"Ações\" className=\"text-right whitespace-nowrap\">\r\n                      <Link\r\n                        href={`/perguntas/update/${pergunta.id}`}\r\n                        className=\"btn btn-sm btn-outline inline-flex items-center mr-2\"\r\n                        title=\"Editar Pergunta\"\r\n                      >\r\n                        <Edit3 size={14} className=\"mr-0 sm:mr-1\" /> <span className=\"hidden sm:inline\">Editar</span>\r\n                      </Link>\r\n                      <button\r\n                        onClick={() => handleDeletePergunta(pergunta.id)}\r\n                        className=\"btn btn-sm btn-danger inline-flex items-center\"\r\n                        title=\"Excluir Pergunta\"\r\n                      >\r\n                        <Trash2 size={14} className=\"mr-0 sm:mr-1\" /> <span className=\"hidden sm:inline\">Excluir</span>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-10 px-4 bg-card-background dark:bg-gray-800 rounded-lg shadow-md border border-border mt-6\">\r\n          <ListChecks className=\"mx-auto h-12 w-12 text-text-muted\" strokeWidth={1.5} />\r\n          <h3 className=\"mt-4 text-md font-medium text-foreground\">Nenhuma pergunta cadastrada</h3>\r\n          <p className=\"mt-1 text-sm text-text-muted\">Crie perguntas para utilizá-las em seus questionários.</p>\r\n          <div className=\"mt-6\">\r\n            <Link href=\"/perguntas/create\" className=\"btn btn-primary inline-flex items-center\">\r\n              <Plus size={18} className=\"mr-2\" />\r\n              Criar Pergunta\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Componente de página que exportamos como padrão, que usa o AdminAuthGuard\r\nexport default function ProtectedListPerguntaPage() {\r\n  return (\r\n    <AdminAuthGuard>\r\n      <ListPerguntaContent />\r\n    </AdminAuthGuard>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}