{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,uCAAmC;;IAKnC;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/responder/%5BavaliacaoId%5D/page.tsx"],"sourcesContent":["// frontend/src/app/responder/[avaliacaoId]/page.tsx\r\n'use client';\r\n\r\nimport { useEffect, useState, Suspense } from 'react';\r\nimport { useParams, useRouter, useSearchParams } from 'next/navigation';\r\nimport api from '@/services/api';\r\nimport Link from 'next/link';\r\nimport { CheckSquare } from 'lucide-react'; // Assumindo que você tem lucide-react\r\nimport \"../../globals.css\"; // Ajuste o caminho para seu globals.css\r\n\r\n// --- Interfaces (mantidas como na sua versão) ---\r\ninterface OpcaoResposta {\r\n  id: number;\r\n  texto: string;\r\n}\r\ninterface PerguntaParaResponder {\r\n  id: number;\r\n  enunciado: string;\r\n  tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n  opcoes: OpcaoResposta[];\r\n}\r\ninterface AvaliacaoParaResponder {\r\n  avaliacaoId: number;\r\n  semestreAvaliacao: string;\r\n  requerLoginCliente: boolean;\r\n  nomeEmpresa: string;\r\n  tituloQuestionario: string;\r\n  perguntas: PerguntaParaResponder[];\r\n}\r\ninterface RespostasState {\r\n  [perguntaId: number]: string; \r\n}\r\n\r\ninterface ClienteUser {\r\n    id: number;\r\n    nome?: string | null;\r\n    email: string;\r\n    tipo: 'CLIENTE_PLATAFORMA';\r\n}\r\n// --- Fim das Interfaces ---\r\n\r\n// Função helper para gerar UUID simples (fallback)\r\nfunction generateSimpleUUID() {\r\n  let d = new Date().getTime();\r\n  let d2 = (typeof performance !== 'undefined' && performance.now && (performance.now()*1000)) || 0;\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      let r = Math.random() * 16;\r\n      if(d > 0){ r = (d + r)%16 | 0; d = Math.floor(d/16); } \r\n      else { r = (d2 + r)%16 | 0; d2 = Math.floor(d2/16); }\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nfunction ResponderAvaliacaoContent() {\r\n    const params = useParams();\r\n    const router = useRouter();\r\n    // useSearchParams é útil para pegar o redirectTo caso o usuário venha da página de login, mas não é usado neste fluxo.\r\n    // Manter ele aqui não causa problemas.\r\n    const searchParams = useSearchParams(); \r\n    const avaliacaoId = params.avaliacaoId ? parseInt(params.avaliacaoId as string) : null;\r\n\r\n    // --- Estados (sem alteração) ---\r\n    const [avaliacaoData, setAvaliacaoData] = useState<AvaliacaoParaResponder | null>(null);\r\n    const [respostas, setRespostas] = useState<RespostasState>({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [submissionMessage, setSubmissionMessage] = useState<string | null>(null);\r\n    const [anonymousSessionId, setAnonymousSessionId] = useState<string | null>(null);\r\n    const [loggedInCliente, setLoggedInCliente] = useState<ClienteUser | null>(null);\r\n\r\n    // Efeito 1: Verifica se o cliente está logado ao carregar o componente.\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            const clienteUserString = localStorage.getItem('clienteUser');\r\n            const clienteToken = localStorage.getItem('clienteToken');\r\n            if (clienteUserString && clienteToken) {\r\n                try {\r\n                    setLoggedInCliente(JSON.parse(clienteUserString));\r\n                } catch (e) {\r\n                    console.error(\"Erro ao parsear dados do clienteUser do localStorage:\", e);\r\n                    localStorage.removeItem('clienteUser');\r\n                    localStorage.removeItem('clienteToken');\r\n                }\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    // Efeito 2: Define o ID de sessão anônima APENAS se o cliente NÃO estiver logado.\r\n    // Este efeito roda sempre que o estado de 'loggedInCliente' mudar.\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\" && !loggedInCliente) {\r\n            let sessionId = localStorage.getItem('anonymousSessionId');\r\n            if (!sessionId) {\r\n                if (typeof crypto !== 'undefined' && crypto.randomUUID) {\r\n                    sessionId = crypto.randomUUID();\r\n                } else {\r\n                    sessionId = generateSimpleUUID(); \r\n                }\r\n                localStorage.setItem('anonymousSessionId', sessionId);\r\n            }\r\n            setAnonymousSessionId(sessionId);\r\n        } else if (loggedInCliente) {\r\n            // Se o cliente está logado, não há necessidade de um ID anônimo.\r\n            setAnonymousSessionId(null); \r\n        }\r\n    }, [loggedInCliente]);\r\n\r\n    // Efeito 3: Carrega os dados da avaliação.\r\n    // CORRIGIDO: Este é o ÚNICO efeito que deve carregar os dados.\r\n    useEffect(() => {\r\n        if (!avaliacaoId) {\r\n            setError(\"ID da Avaliação não fornecido na URL.\");\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        setError(null);\r\n        setSubmissionMessage(null);\r\n\r\n        const loadAvaliacao = async () => {\r\n            try {\r\n                const response = await api.get<AvaliacaoParaResponder>(`/public/avaliacoes/${avaliacaoId}`);\r\n                setAvaliacaoData(response.data);\r\n                const initialRespostas: RespostasState = {};\r\n                response.data.perguntas.forEach(p => {\r\n                    initialRespostas[p.id] = ''; \r\n                });\r\n                setRespostas(initialRespostas);\r\n            } catch (err: any) {\r\n                console.error(\"Erro ao carregar avaliação para responder:\", err);\r\n                if (err.response?.status === 404) {\r\n                    setError(\"Avaliação não encontrada ou não está mais ativa.\");\r\n                } else {\r\n                    setError(\"Não foi possível carregar a avaliação. Tente novamente mais tarde.\");\r\n                }\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        loadAvaliacao();\r\n    }, [avaliacaoId]);\r\n\r\n    const handleInputChange = (perguntaId: number, valor: string) => {\r\n        setRespostas(prevRespostas => ({\r\n            ...prevRespostas,\r\n            [perguntaId]: valor\r\n        }));\r\n    };\r\n\r\n    const handleSubmitRespostas = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        \r\n        if (!avaliacaoData) {\r\n            setError(\"Dados da avaliação não carregados.\");\r\n            return;\r\n        }\r\n\r\n        // Validação para garantir que todas as perguntas foram respondidas\r\n        for (const pergunta of avaliacaoData.perguntas) {\r\n            if (!respostas[pergunta.id] || respostas[pergunta.id].trim() === '') {\r\n                setError(`Por favor, responda a pergunta: \"${pergunta.enunciado}\"`);\r\n                // Foca no elemento da pergunta para melhor UX (opcional)\r\n                const element = document.getElementById(`pergunta-${pergunta.id}`);\r\n                element?.focus();\r\n                return;\r\n            }\r\n        }\r\n\r\n        setIsSubmitting(true);\r\n        setError(null);\r\n        setSubmissionMessage(null);\r\n\r\n        const payload: {\r\n            respostas: { perguntaId: number, respostaTexto: string }[];\r\n            usuarioId?: number;\r\n            anonymousSessionId?: string;\r\n        } = {\r\n            respostas: Object.entries(respostas).map(([pId, respTexto]) => ({\r\n                perguntaId: parseInt(pId),\r\n                respostaTexto: respTexto\r\n            })),\r\n        };\r\n\r\n        // --- LÓGICA DE IDENTIFICAÇÃO CORRIGIDA ---\r\n        // IMPLEMENTADO: Usa o objeto 'loggedInCliente' diretamente.\r\n        if (loggedInCliente) {\r\n            payload.usuarioId = loggedInCliente.id;\r\n        } else if (anonymousSessionId) {\r\n            payload.anonymousSessionId = anonymousSessionId;\r\n        } else {\r\n            // Este caso de erro é uma segurança extra, mas raramente deve acontecer.\r\n            setError(\"Não foi possível identificar sua sessão. Recarregue a página e tente novamente.\");\r\n            setIsSubmitting(false);\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const response = await api.post(`/public/avaliacoes/${avaliacaoId}/respostas`, payload);\r\n            setSubmissionMessage(response.data.message ?? \"Respostas enviadas com sucesso! Agradecemos a sua participação.\");\r\n        } catch (err: any) {\r\n            console.error(\"Erro ao enviar respostas:\", err.response?.data ?? err.message);\r\n            setError(err.response?.data?.message ?? \"Erro ao enviar suas respostas. Por favor, tente novamente.\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n    \r\n    // --- Renderização condicional ---\r\n\r\n    if (isLoading) {\r\n        return <div className=\"page-container center-content\"><p className=\"text-text-muted\">Carregando avaliação...</p></div>;\r\n    }\r\n\r\n    if (error && !submissionMessage && !avaliacaoData) { \r\n        return (\r\n            <div className=\"page-container center-content\">\r\n                <p className=\"text-red-600 dark:text-red-400 font-semibold\">{error}</p>\r\n                <Link href=\"/\" className=\"btn btn-secondary mt-6\">Voltar para Home</Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!avaliacaoData && !isLoading) {\r\n        return <div className=\"page-container center-content\"><p className=\"text-text-muted\">Avaliação não disponível ou ID inválido.</p></div>;\r\n    }\r\n\r\n    // --- LÓGICA DE REDIRECIONAMENTO CORRIGIDA ---\r\n    // IMPLEMENTADO: Usa 'loggedInCliente' diretamente para a verificação.\r\n    if (avaliacaoData?.requerLoginCliente && !loggedInCliente) {\r\n        if (typeof window !== \"undefined\") {\r\n            // Salva a URL atual para redirecionar de volta após o login\r\n            localStorage.setItem('redirectToAfterLogin', `/responder/${avaliacaoId}`);\r\n            console.log(\"Avaliação requer login. Redirecionando...\");\r\n        }\r\n        // Redireciona para a página de login, passando a URL de retorno na query (prática recomendada)\r\n        router.push(`/clientes/login?redirectTo=/responder/${avaliacaoId}`); \r\n        return <div className=\"page-container center-content\"><p>Esta avaliação requer login. Redirecionando...</p></div>;\r\n    }\r\n\r\n    if (submissionMessage && !error) {\r\n        return (\r\n            <div className=\"page-container center-content text-center py-10\">\r\n                <CheckSquare size={64} className=\"text-green-500 dark:text-green-400 mx-auto mb-6\" />\r\n                <h2 className=\"text-2xl sm:text-3xl font-semibold text-foreground mb-3\">Obrigado!</h2>\r\n                <p className=\"text-lg text-text-muted\">{submissionMessage}</p>\r\n                <Link href=\"/\" className=\"btn btn-primary mt-10\">\r\n                    Voltar para a Página Inicial\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // --- JSX do formulário (seu código original, que já estava ótimo) ---\r\n    return (\r\n        <div className=\"page-container max-w-3xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\r\n            {avaliacaoData && (\r\n                <>\r\n                    <header className=\"mb-10 text-center\">\r\n                        <h1 className=\"text-3xl sm:text-4xl font-extrabold text-foreground tracking-tight\">{avaliacaoData.tituloQuestionario}</h1>\r\n                        <p className=\"mt-2 text-lg text-text-muted\">Uma avaliação de: {avaliacaoData.nomeEmpresa}</p>\r\n                        {avaliacaoData.semestreAvaliacao && <p className=\"mt-1 text-md text-text-muted\">Referente a: {avaliacaoData.semestreAvaliacao}</p>}\r\n                    </header>\r\n\r\n                    <form onSubmit={handleSubmitRespostas} className=\"space-y-8\">\r\n                        {avaliacaoData.perguntas.map((pergunta, index) => (\r\n                            <div key={pergunta.id} className=\"p-6 bg-card-background dark:bg-gray-800 shadow-lg rounded-xl border border-border\">\r\n                                <label htmlFor={`pergunta-${pergunta.id}`} className=\"form-label text-lg font-semibold text-foreground\">\r\n                                    {index + 1}. {pergunta.enunciado}\r\n                                </label>\r\n                                \r\n                                {pergunta.tipos === 'TEXTO' && (\r\n                                    <textarea\r\n                                        id={`pergunta-${pergunta.id}`}\r\n                                        rows={5}\r\n                                        className=\"input-edit-mode w-full mt-3\"\r\n                                        value={respostas[pergunta.id] || ''}\r\n                                        onChange={(e) => handleInputChange(pergunta.id, e.target.value)}\r\n                                        placeholder=\"Digite sua resposta aqui...\"\r\n                                        required\r\n                                        disabled={isSubmitting}\r\n                                    />\r\n                                )}\r\n\r\n                                {pergunta.tipos === 'MULTIPLA_ESCOLHA' && (\r\n                                    <div className=\"mt-4 space-y-3\">\r\n                                        {pergunta.opcoes.map(opcao => (\r\n                                            <div key={opcao.id} className=\"flex items-center p-3 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors duration-150\">\r\n                                                <input\r\n                                                    id={`opcao-${opcao.id}-pergunta-${pergunta.id}`}\r\n                                                    name={`pergunta-${pergunta.id}`}\r\n                                                    type=\"radio\"\r\n                                                    value={opcao.texto}\r\n                                                    checked={respostas[pergunta.id] === opcao.texto}\r\n                                                    onChange={(e) => handleInputChange(pergunta.id, e.target.value)}\r\n                                                    className=\"h-5 w-5 text-primary focus:ring-primary border-gray-400 dark:border-gray-600 dark:bg-gray-700 dark:focus:ring-offset-gray-800 cursor-pointer\"\r\n                                                    required\r\n                                                    disabled={isSubmitting}\r\n                                                />\r\n                                                <label htmlFor={`opcao-${opcao.id}-pergunta-${pergunta.id}`} className=\"ml-3 block text-md text-foreground cursor-pointer\">\r\n                                                    {opcao.texto}\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n\r\n                        {error && !submissionMessage && <p style={{ color: 'red', marginTop: '1rem', textAlign: 'center', fontWeight: '500' }}>{error}</p>}\r\n\r\n                        <div className=\"pt-8 flex justify-end\">\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-lg\" disabled={isSubmitting || isLoading}>\r\n                                {isSubmitting ? \"Enviando...\" : \"Enviar Minhas Respostas\"}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function ResponderAvaliacaoPage() {\r\n  return (\r\n    <Suspense fallback={\r\n        <div className=\"page-container flex items-center justify-center min-h-screen\">\r\n            <p className=\"text-text-muted text-lg\">Carregando avaliação...</p>\r\n        </div>\r\n    }>\r\n      <ResponderAvaliacaoContent />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,oDAAoD;;;;;AAGpD;AACA;AACA;AACA;AACA,yXAA4C,sCAAsC;AANlF;;;;;;;;AAsCA,6BAA6B;AAE7B,mDAAmD;AACnD,SAAS;IACP,IAAI,IAAI,IAAI,OAAO,OAAO;IAC1B,IAAI,KAAK,AAAC,OAAO,gBAAgB,eAAe,YAAY,GAAG,IAAK,YAAY,GAAG,KAAG,QAAU;IAChG,OAAO,uCAAuC,OAAO,CAAC,SAAS,SAAS,CAAC;QACrE,IAAI,IAAI,KAAK,MAAM,KAAK;QACxB,IAAG,IAAI,GAAE;YAAE,IAAI,CAAC,IAAI,CAAC,IAAE,KAAK;YAAG,IAAI,KAAK,KAAK,CAAC,IAAE;QAAK,OAChD;YAAE,IAAI,CAAC,KAAK,CAAC,IAAE,KAAK;YAAG,KAAK,KAAK,KAAK,CAAC,KAAG;QAAK;QACpD,OAAO,CAAC,MAAM,MAAM,IAAK,IAAI,MAAM,GAAI,EAAE,QAAQ,CAAC;IACtD;AACF;AAEA,SAAS;IACL,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,uHAAuH;IACvH,uCAAuC;IACvC,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,cAAc,OAAO,WAAW,GAAG,SAAS,OAAO,WAAW,IAAc;IAElF,kCAAkC;IAClC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiC;IAClF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,CAAC;IAC5D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC1E,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC5E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IAE3E,wEAAwE;IACxE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,uCAAmC;;QAYnC;IACJ,GAAG,EAAE;IAEL,kFAAkF;IAClF,mEAAmE;IACnE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,uCAAuD;;QAWvD,OAAO,IAAI,iBAAiB;YACxB,iEAAiE;YACjE,sBAAsB;QAC1B;IACJ,GAAG;QAAC;KAAgB;IAEpB,2CAA2C;IAC3C,+DAA+D;IAC/D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,CAAC,aAAa;YACd,SAAS;YACT,aAAa;YACb;QACJ;QACA,aAAa;QACb,SAAS;QACT,qBAAqB;QAErB,MAAM,gBAAgB;YAClB,IAAI;gBACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAyB,CAAC,mBAAmB,EAAE,aAAa;gBAC1F,iBAAiB,SAAS,IAAI;gBAC9B,MAAM,mBAAmC,CAAC;gBAC1C,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;oBAC5B,gBAAgB,CAAC,EAAE,EAAE,CAAC,GAAG;gBAC7B;gBACA,aAAa;YACjB,EAAE,OAAO,KAAU;gBACf,QAAQ,KAAK,CAAC,8CAA8C;gBAC5D,IAAI,IAAI,QAAQ,EAAE,WAAW,KAAK;oBAC9B,SAAS;gBACb,OAAO;oBACH,SAAS;gBACb;YACJ,SAAU;gBACN,aAAa;YACjB;QACJ;QAEA;IACJ,GAAG;QAAC;KAAY;IAEhB,MAAM,oBAAoB,CAAC,YAAoB;QAC3C,aAAa,CAAA,gBAAiB,CAAC;gBAC3B,GAAG,aAAa;gBAChB,CAAC,WAAW,EAAE;YAClB,CAAC;IACL;IAEA,MAAM,wBAAwB,OAAO;QACjC,MAAM,cAAc;QAEpB,IAAI,CAAC,eAAe;YAChB,SAAS;YACT;QACJ;QAEA,mEAAmE;QACnE,KAAK,MAAM,YAAY,cAAc,SAAS,CAAE;YAC5C,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,IAAI,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,OAAO,IAAI;gBACjE,SAAS,CAAC,iCAAiC,EAAE,SAAS,SAAS,CAAC,CAAC,CAAC;gBAClE,yDAAyD;gBACzD,MAAM,UAAU,SAAS,cAAc,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE;gBACjE,SAAS;gBACT;YACJ;QACJ;QAEA,gBAAgB;QAChB,SAAS;QACT,qBAAqB;QAErB,MAAM,UAIF;YACA,WAAW,OAAO,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,KAAK,UAAU,GAAK,CAAC;oBAC5D,YAAY,SAAS;oBACrB,eAAe;gBACnB,CAAC;QACL;QAEA,4CAA4C;QAC5C,4DAA4D;QAC5D,IAAI,iBAAiB;YACjB,QAAQ,SAAS,GAAG,gBAAgB,EAAE;QAC1C,OAAO,IAAI,oBAAoB;YAC3B,QAAQ,kBAAkB,GAAG;QACjC,OAAO;YACH,yEAAyE;YACzE,SAAS;YACT,gBAAgB;YAChB;QACJ;QAEA,IAAI;YACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE,YAAY,UAAU,CAAC,EAAE;YAC/E,qBAAqB,SAAS,IAAI,CAAC,OAAO,IAAI;QAClD,EAAE,OAAO,KAAU;YACf,QAAQ,KAAK,CAAC,6BAA6B,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;YAC5E,SAAS,IAAI,QAAQ,EAAE,MAAM,WAAW;QAC5C,SAAU;YACN,gBAAgB;QACpB;IACJ;IAEA,mCAAmC;IAEnC,IAAI,WAAW;QACX,qBAAO,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;gBAAE,WAAU;0BAAkB;;;;;;;;;;;IACzF;IAEA,IAAI,SAAS,CAAC,qBAAqB,CAAC,eAAe;QAC/C,qBACI,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAE,WAAU;8BAAgD;;;;;;8BAC7D,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;8BAAyB;;;;;;;;;;;;IAG9D;IAEA,IAAI,CAAC,iBAAiB,CAAC,WAAW;QAC9B,qBAAO,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;gBAAE,WAAU;0BAAkB;;;;;;;;;;;IACzF;IAEA,+CAA+C;IAC/C,sEAAsE;IACtE,IAAI,eAAe,sBAAsB,CAAC,iBAAiB;QACvD,uCAAmC;;QAInC;QACA,+FAA+F;QAC/F,OAAO,IAAI,CAAC,CAAC,sCAAsC,EAAE,aAAa;QAClE,qBAAO,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;0BAAE;;;;;;;;;;;IAC7D;IAEA,IAAI,qBAAqB,CAAC,OAAO;QAC7B,qBACI,8OAAC;YAAI,WAAU;;8BACX,8OAAC,2NAAA,CAAA,cAAW;oBAAC,MAAM;oBAAI,WAAU;;;;;;8BACjC,8OAAC;oBAAG,WAAU;8BAA0D;;;;;;8BACxE,8OAAC;oBAAE,WAAU;8BAA2B;;;;;;8BACxC,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;8BAAwB;;;;;;;;;;;;IAK7D;IAEA,uEAAuE;IACvE,qBACI,8OAAC;QAAI,WAAU;kBACV,+BACG;;8BACI,8OAAC;oBAAO,WAAU;;sCACd,8OAAC;4BAAG,WAAU;sCAAsE,cAAc,kBAAkB;;;;;;sCACpH,8OAAC;4BAAE,WAAU;;gCAA+B;gCAAmB,cAAc,WAAW;;;;;;;wBACvF,cAAc,iBAAiB,kBAAI,8OAAC;4BAAE,WAAU;;gCAA+B;gCAAc,cAAc,iBAAiB;;;;;;;;;;;;;8BAGjI,8OAAC;oBAAK,UAAU;oBAAuB,WAAU;;wBAC5C,cAAc,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,sBACpC,8OAAC;gCAAsB,WAAU;;kDAC7B,8OAAC;wCAAM,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE;wCAAE,WAAU;;4CAChD,QAAQ;4CAAE;4CAAG,SAAS,SAAS;;;;;;;oCAGnC,SAAS,KAAK,KAAK,yBAChB,8OAAC;wCACG,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE;wCAC7B,MAAM;wCACN,WAAU;wCACV,OAAO,SAAS,CAAC,SAAS,EAAE,CAAC,IAAI;wCACjC,UAAU,CAAC,IAAM,kBAAkB,SAAS,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK;wCAC9D,aAAY;wCACZ,QAAQ;wCACR,UAAU;;;;;;oCAIjB,SAAS,KAAK,KAAK,oCAChB,8OAAC;wCAAI,WAAU;kDACV,SAAS,MAAM,CAAC,GAAG,CAAC,CAAA,sBACjB,8OAAC;gDAAmB,WAAU;;kEAC1B,8OAAC;wDACG,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE;wDAC/C,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE;wDAC/B,MAAK;wDACL,OAAO,MAAM,KAAK;wDAClB,SAAS,SAAS,CAAC,SAAS,EAAE,CAAC,KAAK,MAAM,KAAK;wDAC/C,UAAU,CAAC,IAAM,kBAAkB,SAAS,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK;wDAC9D,WAAU;wDACV,QAAQ;wDACR,UAAU;;;;;;kEAEd,8OAAC;wDAAM,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE;wDAAE,WAAU;kEAClE,MAAM,KAAK;;;;;;;+CAbV,MAAM,EAAE;;;;;;;;;;;+BArBxB,SAAS,EAAE;;;;;wBA2CxB,SAAS,CAAC,mCAAqB,8OAAC;4BAAE,OAAO;gCAAE,OAAO;gCAAO,WAAW;gCAAQ,WAAW;gCAAU,YAAY;4BAAM;sCAAI;;;;;;sCAExH,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAO,MAAK;gCAAS,WAAU;gCAAyB,UAAU,gBAAgB;0CAC9E,eAAe,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;AAQhE;AAEe,SAAS;IACtB,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBACN,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAE,WAAU;0BAA0B;;;;;;;;;;;kBAG7C,cAAA,8OAAC;;;;;;;;;;AAGP"}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}