{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://D%3A/tcc/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\nexport default api;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAEe"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file://D%3A/tcc/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/page.tsx"],"sourcesContent":["// frontend/src/app/usuario/create/page.tsx\r\n'use client';\r\n\r\nimport { useState } from \"react\";\r\nimport api from \"@/services/api\"; //\r\nimport { useRouter } from \"next/navigation\";\r\nimport \"../../globals.css\"; //\r\n\r\nexport default function CreateUsuario() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const router = useRouter();\r\n\r\n  const handleNewUsuario = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const data = { nome, email, tipo };\r\n    try {\r\n      await api.post(\"/usuario\", data); //\r\n      alert(\"Usuário cadastrado com sucesso!\");\r\n      router.push(\"/usuario\"); //\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Erro ao cadastrar o usuário!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    // A classe .Create já existe e será estilizada pelo globals.css\r\n    <div className=\"Create max-w-2xl mx-auto p-4 md:p-6\"> {/* Adicionado max-width e centralização para o container da página */}\r\n      <h3 className=\"text-2xl font-semibold text-foreground mb-6\">Cadastro de Usuário</h3> {/* Título da página */}\r\n      <form onSubmit={handleNewUsuario}>\r\n        {/* A tabela abaixo será estilizada pelas regras de .Create form table */}\r\n        <table>\r\n          {/* Removido thead, não é usual para layout de formulário */}\r\n          <tbody>\r\n            <tr>\r\n              <td><label htmlFor=\"nome\">Nome</label></td>\r\n              <td><input type=\"text\" name=\"nome\" id=\"nome\" value={nome} onChange={e => setNome(e.target.value)} required /></td>\r\n            </tr>\r\n            <tr>\r\n              <td><label htmlFor=\"email\">Email</label></td>\r\n              <td><input type=\"email\" name=\"email\" id=\"email\" value={email} onChange={e => setEmail(e.target.value)} required /></td>\r\n            </tr>\r\n            <tr>\r\n              <td><label htmlFor=\"tipo\">Tipo</label></td>\r\n              <td>\r\n                <select name=\"tipo\" id=\"tipo\" value={tipo} onChange={e => setTipo(e.target.value)} required>\r\n                  <option value=\"\" disabled>Selecione um tipo</option>\r\n                  <option value=\"ADMIN\">Administrador</option>\r\n                  <option value=\"AVALIADOR\">Avaliador</option>\r\n                  <option value=\"AVALIADO\">Avaliado</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {/* Mover botões para fora da tabela para melhor layout */}\r\n        <div className=\"form-actions mt-8\"> {/* Classe para agrupar botões */}\r\n          <button type=\"reset\" className=\"btn btn-reset\" onClick={() => { setNome(''); setEmail(''); setTipo('');}}>Limpar</button>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Cadastrar</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,2CAA2C;;;;;AAG3C;AACA,2MAAkC,EAAE;AACpC;;;;;;AAJA;;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,mBAAmB,OAAO;QAC9B,MAAM,cAAc;QACpB,MAAM,OAAO;YAAE;YAAM;YAAO;QAAK;QACjC,IAAI;YACF,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,YAAY,OAAO,EAAE;YACpC,MAAM;YACN,OAAO,IAAI,CAAC,aAAa,EAAE;QAC7B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;YACd,MAAM;QACR;IACF;IAEA,OACE,gEAAgE;kBAChE,8OAAC;QAAI,WAAU;;YAAsC;0BACnD,8OAAC;gBAAG,WAAU;0BAA8C;;;;;;YAAwB;0BACpF,8OAAC;gBAAK,UAAU;;kCAEd,8OAAC;kCAEC,cAAA,8OAAC;;8CACC,8OAAC;;sDACC,8OAAC;sDAAG,cAAA,8OAAC;gDAAM,SAAQ;0DAAO;;;;;;;;;;;sDAC1B,8OAAC;sDAAG,cAAA,8OAAC;gDAAM,MAAK;gDAAO,MAAK;gDAAO,IAAG;gDAAO,OAAO;gDAAM,UAAU,CAAA,IAAK,QAAQ,EAAE,MAAM,CAAC,KAAK;gDAAG,QAAQ;;;;;;;;;;;;;;;;;8CAE5G,8OAAC;;sDACC,8OAAC;sDAAG,cAAA,8OAAC;gDAAM,SAAQ;0DAAQ;;;;;;;;;;;sDAC3B,8OAAC;sDAAG,cAAA,8OAAC;gDAAM,MAAK;gDAAQ,MAAK;gDAAQ,IAAG;gDAAQ,OAAO;gDAAO,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;gDAAG,QAAQ;;;;;;;;;;;;;;;;;8CAEjH,8OAAC;;sDACC,8OAAC;sDAAG,cAAA,8OAAC;gDAAM,SAAQ;0DAAO;;;;;;;;;;;sDAC1B,8OAAC;sDACC,cAAA,8OAAC;gDAAO,MAAK;gDAAO,IAAG;gDAAO,OAAO;gDAAM,UAAU,CAAA,IAAK,QAAQ,EAAE,MAAM,CAAC,KAAK;gDAAG,QAAQ;;kEACzF,8OAAC;wDAAO,OAAM;wDAAG,QAAQ;kEAAC;;;;;;kEAC1B,8OAAC;wDAAO,OAAM;kEAAQ;;;;;;kEACtB,8OAAC;wDAAO,OAAM;kEAAY;;;;;;kEAC1B,8OAAC;wDAAO,OAAM;kEAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOnC,8OAAC;wBAAI,WAAU;;4BAAoB;0CACjC,8OAAC;gCAAO,MAAK;gCAAQ,WAAU;gCAAgB,SAAS;oCAAQ,QAAQ;oCAAK,SAAS;oCAAK,QAAQ;gCAAI;0CAAG;;;;;;0CAC1G,8OAAC;gCAAO,MAAK;gCAAS,WAAU;0CAAkB;;;;;;;;;;;;;;;;;;;;;;;;AAK5D"}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}