{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,uCAAmC;;IAKnC;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/auth/AdminAuthGuard.tsx"],"sourcesContent":["// frontend/src/components/auth/AdminAuthGuard.tsx\r\n'use client';\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/contexts/AuthContext'; // Ajuste o caminho se o AuthContext estiver em outro lugar\r\n\r\nexport default function AdminAuthGuard({ children }: Readonly<{ children: React.ReactNode }>) {\r\n  const { loggedInAdmin, isLoadingAuth } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Não faz nada enquanto o estado de autenticação ainda está carregando do localStorage\r\n    if (isLoadingAuth) {\r\n      return;\r\n    }\r\n\r\n    // Se não estiver logado E o carregamento inicial do auth já terminou, redireciona\r\n    if (!loggedInAdmin && !isLoadingAuth) {\r\n      router.push('/empresas/login'); // Ou para /admin/login se preferir um ponto de entrada único\r\n    }\r\n  }, [loggedInAdmin, isLoadingAuth, router]);\r\n\r\n  // Se ainda estiver carregando o estado de autenticação ou se não estiver logado (e o redirecionamento vai acontecer),\r\n  // pode mostrar um loader ou nada para evitar flash de conteúdo.\r\n  if (isLoadingAuth || !loggedInAdmin) {\r\n    return <div className=\"page-container center-content\"><p>Verificando autorização...</p></div>;\r\n    // Ou return null; para não mostrar nada até o redirecionamento ocorrer.\r\n  }\r\n\r\n  // Se estiver logado, renderiza a página protegida\r\n  return <>{children}</>;\r\n}"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAElD;AACA;AACA,6NAAkD,2DAA2D;AAH7G;;;;;AAKe,SAAS,eAAe,EAAE,QAAQ,EAA2C;IAC1F,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uFAAuF;QACvF,IAAI,eAAe;YACjB;QACF;QAEA,kFAAkF;QAClF,IAAI,CAAC,iBAAiB,CAAC,eAAe;YACpC,OAAO,IAAI,CAAC,oBAAoB,6DAA6D;QAC/F;IACF,GAAG;QAAC;QAAe;QAAe;KAAO;IAEzC,sHAAsH;IACtH,gEAAgE;IAChE,IAAI,iBAAiB,CAAC,eAAe;QACnC,qBAAO,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;0BAAE;;;;;;;;;;;IACzD,wEAAwE;IAC1E;IAEA,kDAAkD;IAClD,qBAAO;kBAAG;;AACZ"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/dashboard/StatCard.tsx"],"sourcesContent":["// frontend/src/components/dashboard/StatCard.tsx\r\n'use client';\r\nimport { LucideIcon } from 'lucide-react';\r\n\r\ninterface StatCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  icon: LucideIcon;\r\n  color: string;\r\n  bgColor: string;\r\n}\r\n\r\nexport const StatCard = ({ title, value, icon: Icon, color, bgColor }: StatCardProps) => {\r\n  return (\r\n    <div className=\"bg-element-bg p-5 rounded-xl shadow-md border border-main-border transition-shadow duration-200\">\r\n      <div className=\"flex items-start justify-between\">\r\n        <div className={`p-2 rounded-lg ${bgColor}`}>\r\n          <Icon size={24} className={color} strokeWidth={1.5} />\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-3\">\r\n        <h3 className=\"text-xl md:text-2xl font-semibold text-text-base\">{value}</h3>\r\n        <p className=\"text-sm text-text-muted mt-1 truncate\">{title}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"AAAA,iDAAiD;;;;;AACjD;;AAWO,MAAM,WAAW,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,OAAO,EAAiB;IAClF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAW,CAAC,eAAe,EAAE,SAAS;8BACzC,cAAA,8OAAC;wBAAK,MAAM;wBAAI,WAAW;wBAAO,aAAa;;;;;;;;;;;;;;;;0BAGnD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoD;;;;;;kCAClE,8OAAC;wBAAE,WAAU;kCAAyC;;;;;;;;;;;;;;;;;;AAI9D"}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/dashboard/ChartContainer.tsx"],"sourcesContent":["// frontend/src/components/dashboard/ChartContainer.tsx\r\n'use client';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface ChartContainerProps {\r\n  title: string;\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ChartContainer = ({ title, children }: ChartContainerProps) => (\r\n  <div className=\"bg-element-bg p-4 md:p-6 rounded-xl shadow-md border border-main-border\">\r\n    <h4 className=\"text-md font-semibold text-foreground mb-4\">{title}</h4>\r\n    <div className=\"w-full h-72\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AACvD;;AAQO,MAAM,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAuB,iBACrE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA8C;;;;;;0BAC5D,8OAAC;gBAAI,WAAU;0BACZ"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/dashboard/QuestionBarChart.tsx"],"sourcesContent":["// frontend/src/components/dashboard/QuestionBarChart.tsx\r\n'use client';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\r\nimport { ChartContainer } from './ChartContainer';\r\n\r\ninterface ChartData {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ninterface BarChartProps {\r\n  data: ChartData[];\r\n  title: string;\r\n}\r\n\r\nexport const QuestionBarChart = ({ data, title }: BarChartProps) => {\r\n  return (\r\n    <ChartContainer title={title}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart data={data} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\r\n          <XAxis dataKey=\"name\" fontSize={12} tickLine={false} axisLine={false} />\r\n          <YAxis fontSize={12} tickLine={false} axisLine={false} />\r\n          <Tooltip\r\n            cursor={{ fill: 'rgba(var(--color-primary-rgb), 0.1)' }}\r\n            contentStyle={{\r\n              backgroundColor: 'var(--color-background-element)',\r\n              borderColor: 'var(--color-border)'\r\n            }}\r\n          />\r\n          <Bar dataKey=\"value\" fill=\"var(--color-primary)\" />\r\n\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </ChartContainer>\r\n  );\r\n};"],"names":[],"mappings":"AAAA,yDAAyD;;;;;AAGzD;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;AAcO,MAAM,mBAAmB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAiB;IAC7D,qBACE,8OAAC,iJAAA,CAAA,iBAAc;QAAC,OAAO;kBACrB,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;YAAC,OAAM;YAAO,QAAO;sBACvC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;gBAAC,MAAM;gBAAM,QAAQ;oBAAE,KAAK;oBAAG,OAAO;oBAAI,MAAM,CAAC;oBAAI,QAAQ;gBAAE;;kCACtE,8OAAC,6JAAA,CAAA,gBAAa;wBAAC,iBAAgB;wBAAM,QAAO;;;;;;kCAC5C,8OAAC,qJAAA,CAAA,QAAK;wBAAC,SAAQ;wBAAO,UAAU;wBAAI,UAAU;wBAAO,UAAU;;;;;;kCAC/D,8OAAC,qJAAA,CAAA,QAAK;wBAAC,UAAU;wBAAI,UAAU;wBAAO,UAAU;;;;;;kCAChD,8OAAC,uJAAA,CAAA,UAAO;wBACN,QAAQ;4BAAE,MAAM;wBAAsC;wBACtD,cAAc;4BACZ,iBAAiB;4BACjB,aAAa;wBACf;;;;;;kCAEF,8OAAC,mJAAA,CAAA,MAAG;wBAAC,SAAQ;wBAAQ,MAAK;;;;;;;;;;;;;;;;;;;;;;AAMpC"}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/dashboard/GenericChartContainer.tsx"],"sourcesContent":["// frontend/src/components/dashboard/GenericChartContainer.tsx\r\n'use client';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface GenericChartContainerProps {\r\n  title: string;\r\n  children: ReactNode;\r\n}\r\n\r\nexport const GenericChartContainer = ({ title, children }: GenericChartContainerProps) => {\r\n  return (\r\n    <div className=\"h-full rounded-lg border border-border bg-card-background p-4 shadow-sm dark:bg-gray-800\">\r\n      <h3 className=\"mb-4 text-base font-semibold text-foreground\">{title}</h3>\r\n      {/* Esta div garante que o filho tenha um espaço flexível para crescer */}\r\n      <div className=\"h-[calc(100%-2rem)] w-full\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"AAAA,8DAA8D;;;;;AAC9D;;AAQO,MAAM,wBAAwB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAA8B;IACnF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAgD;;;;;;0BAE9D,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/dashboard/WordCloud.tsx"],"sourcesContent":["// frontend/src/components/dashboard/WordCloud.tsx\r\n'use client';\r\n\r\nimport dynamic from 'next/dynamic';\r\nimport { GenericChartContainer } from './GenericChartContainer';\r\n\r\n// A importação dinâmica continua sendo a melhor prática para componentes de visualização\r\nconst WordCloudComponent = dynamic(() => import('react-d3-cloud'), {\r\n  ssr: false, // Garantimos que ele só rode no navegador\r\n});\r\n\r\ninterface WordCloudProps {\r\n  words?: { text: string; value: number }[] | null;\r\n}\r\n\r\n// A nova biblioteca pede uma função para mapear o tamanho da fonte\r\nconst fontSizeMapper = (word: { value: number }) => Math.log2(word.value) * 5 + 16;\r\n\r\nexport const WordCloud = ({ words }: WordCloudProps) => {\r\n  if (!words || words.length === 0) {\r\n    return (\r\n      <GenericChartContainer title=\"Nuvem de Palavras\">\r\n        <div className=\"flex h-full w-full items-center justify-center\">\r\n          <p className=\"text-text-muted\">Selecione uma pergunta para analisar ou não há dados.</p>\r\n        </div>\r\n      </GenericChartContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <GenericChartContainer title=\"Nuvem de Palavras\">\r\n        <WordCloudComponent\r\n            data={words}\r\n            font=\"sans-serif\"\r\n            fontSize={fontSizeMapper}\r\n            padding={2}\r\n            // A nova biblioteca não precisa de 'options' separadas\r\n        />\r\n    </GenericChartContainer>\r\n  );\r\n};"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAGlD;AACA;AAHA;;;;AAKA,yFAAyF;AACzF,MAAM,qBAAqB,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;;;IAC/B,KAAK;;AAOP,mEAAmE;AACnE,MAAM,iBAAiB,CAAC,OAA4B,KAAK,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI;AAEzE,MAAM,YAAY,CAAC,EAAE,KAAK,EAAkB;IACjD,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;QAChC,qBACE,8OAAC,wJAAA,CAAA,wBAAqB;YAAC,OAAM;sBAC3B,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAkB;;;;;;;;;;;;;;;;IAIvC;IAEA,qBACE,8OAAC,wJAAA,CAAA,wBAAqB;QAAC,OAAM;kBACzB,cAAA,8OAAC;YACG,MAAM;YACN,MAAK;YACL,UAAU;YACV,SAAS;;;;;;;;;;;AAKrB"}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/SortableItem.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"drag-handle\": \"SortableItem-module__2ATgDW__drag-handle\",\n  \"dragging\": \"SortableItem-module__2ATgDW__dragging\",\n  \"sortable-item-container\": \"SortableItem-module__2ATgDW__sortable-item-container\",\n  \"sortableItem\": \"SortableItem-module__2ATgDW__sortableItem\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/SortableItem.tsx"],"sourcesContent":["// frontend/src/components/SortableItem.tsx\r\n\r\n'use client';\r\nimport React from 'react';\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\nimport styles from './SortableItem.module.css';\r\nimport { motion } from 'framer-motion';\r\nimport { GripVertical } from 'lucide-react';\r\n\r\nexport function SortableItem({ id, children }: { readonly id: string | number; readonly children: React.ReactNode }) {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging, // Estado que nos diz se o item está sendo arrastado\r\n  } = useSortable({ id });\r\n\r\n  const styleVars = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n  } as React.CSSProperties;\r\n  const itemClassName = [\r\n    styles.sortableItem,\r\n    isDragging ? styles.dragging : '',\r\n  ].join(' ');\r\n\r\n  return (\r\n    <motion.div\r\n      ref={setNodeRef}\r\n      style={styleVars}\r\n      initial={{ opacity: 0, y: 10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -10 }}\r\n      transition={{ duration: 0.2 }}\r\n      {...attributes}\r\n      className={itemClassName}\r\n    >\r\n      <div className=\"sortable-item-container\">\r\n        <div {...listeners} className=\"drag-handle\">\r\n          <GripVertical size={16} />\r\n        </div>\r\n        <div className=\"sortable-content\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,2CAA2C;;;;;AAI3C;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQO,SAAS,aAAa,EAAE,EAAE,EAAE,QAAQ,EAAwE;IACjH,MAAM,EACJ,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,UAAU,EACV,UAAU,EACX,GAAG,CAAA,GAAA,mKAAA,CAAA,cAAW,AAAD,EAAE;QAAE;IAAG;IAErB,MAAM,YAAY;QAChB,WAAW,qKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC;IACF;IACA,MAAM,gBAAgB;QACpB,gJAAA,CAAA,UAAM,CAAC,YAAY;QACnB,aAAa,gJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG;KAChC,CAAC,IAAI,CAAC;IAEP,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QACT,KAAK;QACL,OAAO;QACP,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,MAAM;YAAE,SAAS;YAAG,GAAG,CAAC;QAAG;QAC3B,YAAY;YAAE,UAAU;QAAI;QAC3B,GAAG,UAAU;QACd,WAAW;kBAEX,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAK,GAAG,SAAS;oBAAE,WAAU;8BAC5B,cAAA,8OAAC,sNAAA,CAAA,eAAY;wBAAC,MAAM;;;;;;;;;;;8BAEtB,8OAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX"}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/questionarios/%5Bid%5D/page.tsx"],"sourcesContent":["// frontend/src/app/questionarios/[id]/page.tsx\r\n'use client';\r\n\r\nimport { useEffect, useState, Suspense, useMemo } from \"react\";\r\nimport api from \"@/services/api\";\r\nimport { useRouter, useParams } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport \"../../globals.css\";\r\nimport AdminAuthGuard from '@/components/auth/AdminAuthGuard';\r\nimport { PlusIcon, Trash2, ChevronDown, ChevronUp, CalendarDays, ListChecks, TrendingUp, FileText, CheckSquare, Users } from \"lucide-react\"; // Adicionado ícones\r\nimport { StatCard } from \"@/components/dashboard/StatCard\";\r\nimport { QuestionBarChart } from \"@/components/dashboard/QuestionBarChart\";\r\nimport { WordCloud } from \"@/components/dashboard/WordCloud\";\r\nimport {\r\n    DndContext,\r\n    closestCenter,\r\n    KeyboardSensor,\r\n    PointerSensor,\r\n    useSensor,\r\n    useSensors,\r\n} from '@dnd-kit/core';\r\n\r\nimport {\r\n    arrayMove,\r\n    SortableContext,\r\n    sortableKeyboardCoordinates,\r\n    verticalListSortingStrategy,\r\n} from '@dnd-kit/sortable';\r\n\r\nimport { SortableItem } from '@/components/SortableItem';\r\n\r\ninterface KpiData {\r\n    totalAvaliacoes: number;\r\n    totalRespondentes: number;\r\n    totalFinalizados: number;\r\n    taxaDeConclusao: number;\r\n}\r\ninterface GraficoData {\r\n    perguntaId: number;\r\n    enunciado: string;\r\n    respostas: { name: string; value: number }[];\r\n}\r\ninterface Opcao {\r\n    id?: number;\r\n    texto: string;\r\n    tempId?: string;\r\n}\r\ninterface PerguntaAninhada {\r\n    id?: number;\r\n    enunciado: string;\r\n    tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n    opcoes: Opcao[];\r\n    tempId?: string;\r\n}\r\ninterface QuePerg {\r\n    perguntaId?: number;\r\n    questionarioId: number;\r\n    pergunta: PerguntaAninhada;\r\n    id?: number;\r\n}\r\ninterface QuestionarioData {\r\n    id: number;\r\n    titulo: string;\r\n}\r\ninterface RespostaDetalhada {\r\n    id: number;\r\n    resposta: string;\r\n    pergunta: {\r\n        id: number;\r\n        enunciado: string;\r\n        tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n        opcoes: Opcao[];\r\n    };\r\n}\r\ninterface Respondente {\r\n    id: number;\r\n    status: string;\r\n    isFinalizado: boolean;\r\n    usuario?: { id: number; nome?: string | null; email: string };\r\n    anonymousSessionId?: string | null;\r\n    respostas: RespostaDetalhada[];\r\n    created_at: string;\r\n}\r\ninterface AvaliacaoComDetalhes {\r\n    id: number;\r\n    semestre: string;\r\n    requerLoginCliente: boolean;\r\n    usuarios: Respondente[];\r\n    _count?: { usuarios: number };\r\n    created_at: string; // Adicionado para ordenação se necessário\r\n}\r\n// --- Fim das Interfaces ---\r\n\r\n// Componente exportado da página (sem mudanças)\r\nexport default function EditQuestionarioPage() {\r\n    return (\r\n        <Suspense fallback={<div className=\"page-container center-content\"><p>Carregando...</p></div>}>\r\n            <AdminAuthGuard>\r\n                <EditQuestionarioFormContent />\r\n            </AdminAuthGuard>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nfunction EditQuestionarioFormContent() {\r\n    const router = useRouter();\r\n    const params = useParams();\r\n    const questionarioId = Number(params.id);\r\n\r\n    const [titulo, setTitulo] = useState(\"\");\r\n    const [quePergs, setQuePergs] = useState<QuePerg[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const [viewMode, setViewMode] = useState<'editar' | 'respostas' | 'analise'>('editar');\r\n    const [avaliacoesComRespostas, setAvaliacoesComRespostas] = useState<AvaliacaoComDetalhes[]>([]);\r\n    const [isLoadingRespostas, setIsLoadingRespostas] = useState(false);\r\n    const [selectedAvaliacaoId, setSelectedAvaliacaoId] = useState<number | null>(null);\r\n\r\n    const [dashboardData, setDashboardData] = useState<{ kpis: KpiData, graficos: GraficoData[] } | null>(null);\r\n    const [wordCloudData, setWordCloudData] = useState<{ text: string; value: number }[]>([]);\r\n    const [selectedTextQuestion, setSelectedTextQuestion] = useState('');\r\n    const [isLoadingDashboard, setIsLoadingDashboard] = useState(false);\r\n    const [isLoadingWordCloud, setIsLoadingWordCloud] = useState(false);\r\n\r\n    const [semestresExpandidos, setSemestresExpandidos] = useState<Set<string>>(new Set());\r\n\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor, {\r\n            activationConstraint: {\r\n                delay: 150,\r\n                tolerance: 5,\r\n            },\r\n        })\r\n    );\r\n\r\n    const handleDragStart = (event: any) => {\r\n        const interactiveElements = ['INPUT', 'TEXTAREA', 'SELECT', 'BUTTON'];\r\n        if (interactiveElements.includes(event?.active?.event?.target?.tagName)) {\r\n            event.cancel(); // evita o drag em campos interativos\r\n        }\r\n    };\r\n\r\n    const handleDragEnd = (event: any) => {\r\n        const { active, over } = event;\r\n        if (!over || active.id === over.id) return;\r\n        const oldIndex = quePergs.findIndex(q => (q.pergunta.id || q.pergunta.tempId) === active.id);\r\n        const newIndex = quePergs.findIndex(q => (q.pergunta.id || q.pergunta.tempId) === over.id);\r\n        const novos = arrayMove(quePergs, oldIndex, newIndex);\r\n        setQuePergs(novos);\r\n    };\r\n\r\n    // useEffect para carregar dados do dashboard quando o modo muda para 'analise'\r\n    useEffect(() => {\r\n        if (viewMode === 'analise' && questionarioId) {\r\n            setIsLoadingDashboard(true);\r\n            api.get(`/dashboard?questionarioId=${questionarioId}`)\r\n                .then(response => {\r\n                    setDashboardData(response.data);\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Erro ao buscar dados do dashboard específico:\", err);\r\n                    // Lidar com erro\r\n                })\r\n                .finally(() => {\r\n                    setIsLoadingDashboard(false);\r\n                });\r\n        }\r\n    }, [viewMode, questionarioId]);\r\n\r\n    // useEffect para carregar dados da nuvem de palavras\r\n    useEffect(() => {\r\n        if (viewMode === 'analise' && selectedTextQuestion) {\r\n            const fetchWordCloud = async () => {\r\n                try {\r\n                    setIsLoadingWordCloud(true);\r\n                    // Passa o questionarioId para filtrar a análise\r\n                    const response = await api.get(`/analise-texto?perguntaId=${selectedTextQuestion}&questionarioId=${questionarioId}`);\r\n                    setWordCloudData(response.data.wordCloud);\r\n                } catch (error) {\r\n                    console.error(\"Erro ao carregar nuvem de palavras:\", error);\r\n                } finally {\r\n                    setIsLoadingWordCloud(false);\r\n                }\r\n            };\r\n            fetchWordCloud();\r\n        }\r\n    }, [viewMode, selectedTextQuestion, questionarioId]);\r\n\r\n    // --- Lógica de carregamento inicial (sem mudanças significativas) ---\r\n    useEffect(() => {\r\n        if (!questionarioId) {\r\n            setError(\"ID do Questionário não encontrado na URL.\");\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        setError(null);\r\n        const loadData = async () => {\r\n            try {\r\n                const respQuestionario = await api.get<QuestionarioData>(`/questionarios/${questionarioId}`);\r\n                setTitulo(respQuestionario.data.titulo);\r\n                const respQuePerg = await api.get<QuePerg[]>(`/quePerg?questionarioId=${questionarioId}`);\r\n                const sanitizedQuePergs = respQuePerg.data.map(qp => ({\r\n                    ...qp,\r\n                    pergunta: {\r\n                        ...qp.pergunta,\r\n                        opcoes: (qp.pergunta.opcoes || []).map(opt => ({ ...opt }))\r\n                    }\r\n                }));\r\n                setQuePergs(sanitizedQuePergs);\r\n            } catch (err: any) { /* ... (tratamento de erro existente) ... */\r\n                console.error(\"Erro ao carregar dados do questionário:\", err);\r\n                if (err.response && (err.response.status === 401 || err.response.status === 403)) {\r\n                    setError(\"Acesso não autorizado ou negado. Faça o login novamente.\");\r\n                } else if (err.response && err.response.status === 404) {\r\n                    setError(\"Questionário não encontrado. Verifique o ID ou se ele pertence à sua empresa.\");\r\n                } else {\r\n                    setError(\"Não foi possível carregar os dados para edição. Tente novamente.\");\r\n                }\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        loadData();\r\n    }, [questionarioId]);\r\n\r\n    // --- Lógica para buscar respostas quando o modo de visualização muda ---\r\n    useEffect(() => {\r\n        if (viewMode === 'respostas' && questionarioId) {\r\n            setIsLoadingRespostas(true);\r\n            setError(null);\r\n            api.get<AvaliacaoComDetalhes[]>(`/questionarios/${questionarioId}/avaliacoes-com-respostas`) // Endpoint ajustado conforme backend\r\n                .then(response => {\r\n                    setAvaliacoesComRespostas(response.data);\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Erro ao buscar avaliações com respostas:\", err);\r\n                    setError(\"Erro ao buscar dados das respostas.\");\r\n                })\r\n                .finally(() => {\r\n                    setIsLoadingRespostas(false);\r\n                });\r\n        }\r\n    }, [viewMode, questionarioId]);\r\n\r\n    // --- Funções de manipulação de perguntas e opções (sem mudanças) ---\r\n    const handlePerguntaChange = (qIndex: number, novoEnunciado: string) => { /* ... seu código ... */\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) =>\r\n                index === qIndex\r\n                    ? { ...qp, pergunta: { ...qp.pergunta, enunciado: novoEnunciado } }\r\n                    : qp\r\n            )\r\n        );\r\n    };\r\n    const removePergunta = (indexToRemove: number) => {\r\n        // Confirmação para evitar exclusão acidental\r\n        if (!window.confirm(\"Tem certeza de que deseja remover esta pergunta?\")) {\r\n            return;\r\n        }\r\n\r\n        // Filtra o array de perguntas, mantendo todas exceto a do índice a ser removido\r\n        const novasPerguntas = quePergs.filter((_, index) => index !== indexToRemove);\r\n        setQuePergs(novasPerguntas);\r\n    };\r\n\r\n    const handleTipoChange = (qIndex: number, novoTipo: 'TEXTO' | 'MULTIPLA_ESCOLHA') => {\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) => {\r\n                if (index !== qIndex) {\r\n                    return qp;\r\n                }\r\n                const perguntaAtual = qp.pergunta;\r\n                let novasOpcoes: Opcao[];\r\n                if (novoTipo === 'TEXTO') {\r\n                    novasOpcoes = [];\r\n                } else if (perguntaAtual.opcoes.length === 0) {\r\n                    novasOpcoes = [{ texto: '', tempId: `temp-opt-${Date.now()}` }];\r\n                } else {\r\n                    novasOpcoes = perguntaAtual.opcoes.map(o => ({ ...o }));\r\n                }\r\n                return { ...qp, pergunta: { ...perguntaAtual, tipos: novoTipo, opcoes: novasOpcoes } };\r\n            })\r\n        );\r\n    };\r\n    const handleOptionChange = (qIndex: number, oIndex: number, novoTexto: string) => { /* ... seu código ... */\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) => {\r\n                if (index === qIndex) {\r\n                    const novasOpcoes = qp.pergunta.opcoes.map((opt, optIdx) =>\r\n                        optIdx === oIndex ? { ...opt, texto: novoTexto } : opt\r\n                    );\r\n                    return { ...qp, pergunta: { ...qp.pergunta, opcoes: novasOpcoes } };\r\n                }\r\n                return qp;\r\n            })\r\n        );\r\n    };\r\n    const addOptionToList = (qIndex: number) => { /* ... seu código ... */\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) => {\r\n                if (index === qIndex) {\r\n                    const novasOpcoes = [...qp.pergunta.opcoes, { texto: '', tempId: `temp-opt-${Date.now()}-${qp.pergunta.opcoes.length}` }];\r\n                    return { ...qp, pergunta: { ...qp.pergunta, opcoes: novasOpcoes } };\r\n                }\r\n                return qp;\r\n            })\r\n        );\r\n    };\r\n    const removeOption = (qIndex: number, oIndex: number) => { /* ... seu código ... */\r\n        setQuePergs(prevQuePergs =>\r\n            prevQuePergs.map((qp, index) => {\r\n                if (index === qIndex) {\r\n                    const novasOpcoes = qp.pergunta.opcoes.filter((_, optIdx) => optIdx !== oIndex);\r\n                    return { ...qp, pergunta: { ...qp.pergunta, opcoes: novasOpcoes } };\r\n                }\r\n                return qp;\r\n            })\r\n        );\r\n    };\r\n    const handleAddNewPergunta = () => { /* ... seu código ... */\r\n        const novaPerguntaDefault: PerguntaAninhada = {\r\n            tempId: `temp-perg-${Date.now()}`,\r\n            enunciado: \"\",\r\n            tipos: \"TEXTO\",\r\n            opcoes: []\r\n        };\r\n        const novoQuePerg: QuePerg = {\r\n            questionarioId: questionarioId,\r\n            pergunta: novaPerguntaDefault\r\n        };\r\n        setQuePergs(prevQuePergs => [...prevQuePergs, novoQuePerg]);\r\n    };\r\n    const handleSaveChanges = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        // Transformando o estado do frontend para o formato que o backend espera\r\n        const perguntasParaEnviar = quePergs.map((qp, index) => ({\r\n            id: qp.pergunta.id,\r\n            enunciado: qp.pergunta.enunciado,\r\n            tipos: qp.pergunta.tipos,\r\n            ordem: index,\r\n            opcoes: qp.pergunta.opcoes.map(opt => ({\r\n                id: opt.id,\r\n                texto: opt.texto\r\n            }))\r\n        }));\r\n\r\n        const payload = {\r\n            titulo: titulo,\r\n            perguntas: perguntasParaEnviar,\r\n        };\r\n\r\n        try {\r\n            const response = await api.patch(`/questionarios/${questionarioId}`, payload);\r\n            setTitulo(response.data.titulo);\r\n            const sanitizedQuePergs = response.data.perguntas.map((p: any) => ({\r\n                id: p.questionarioPerguntaId,\r\n                questionarioId: p.questionarioId,\r\n                pergunta: {\r\n                    id: p.id,\r\n                    enunciado: p.enunciado,\r\n                    tipos: p.tipos,\r\n                    opcoes: p.opcoes ?? []\r\n                }\r\n            }));\r\n            setQuePergs(sanitizedQuePergs);\r\n            alert(\"Questionário salvo com sucesso!\");\r\n            router.push('/questionarios');\r\n        } catch (error: any) {\r\n            console.error(\"Erro ao salvar:\", error.response?.data ?? error);\r\n            const errorMessage = error.response?.data?.error ?? 'Ocorreu um problema ao salvar.';\r\n            setError(errorMessage);\r\n            alert(`Erro ao salvar: ${errorMessage}`);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // NOVO: Agrupamento e ordenação das avaliações por semestre\r\n    const avaliacoesAgrupadasPorSemestre = useMemo(() => {\r\n        if (viewMode !== 'respostas' || avaliacoesComRespostas.length === 0) {\r\n            return {};\r\n        }\r\n        const agrupado: { [semestre: string]: AvaliacaoComDetalhes[] } = {};\r\n        avaliacoesComRespostas.forEach(av => {\r\n            if (!agrupado[av.semestre]) {\r\n                agrupado[av.semestre] = [];\r\n            }\r\n            agrupado[av.semestre].push(av);\r\n        });\r\n\r\n        // Ordenar os semestres (mais recentes primeiro)\r\n        const semestresOrdenados = Object.keys(agrupado).sort((a, b) => {\r\n            const [anoA, periodoA] = a.split('/').map(Number);\r\n            const [anoB, periodoB] = b.split('/').map(Number);\r\n            if (anoA !== anoB) return anoB - anoA;\r\n            return periodoB - periodoA;\r\n        });\r\n\r\n        const agrupadoOrdenado: { [semestre: string]: AvaliacaoComDetalhes[] } = {};\r\n        semestresOrdenados.forEach(sem => {\r\n            // Ordenar avaliações dentro de cada semestre pela data de criação (mais recente primeiro)\r\n            agrupado[sem].sort((evalA, evalB) => new Date(evalB.created_at).getTime() - new Date(evalA.created_at).getTime());\r\n            agrupadoOrdenado[sem] = agrupado[sem];\r\n        });\r\n\r\n        return agrupadoOrdenado;\r\n    }, [viewMode, avaliacoesComRespostas]);\r\n\r\n    // Função para alternar a expansão de um semestre\r\n    const toggleSemestreExpandido = (semestre: string) => {\r\n        setSemestresExpandidos(prev => {\r\n            const novoSet = new Set(prev);\r\n            if (novoSet.has(semestre)) {\r\n                novoSet.delete(semestre);\r\n            } else {\r\n                novoSet.add(semestre);\r\n            }\r\n            return novoSet;\r\n        });\r\n    };\r\n\r\n\r\n    const selectedAvaliacaoDetalhes = useMemo(() => {\r\n        if (!selectedAvaliacaoId) return null;\r\n        return avaliacoesComRespostas.find(av => av.id === selectedAvaliacaoId);\r\n    }, [selectedAvaliacaoId, avaliacoesComRespostas]);\r\n\r\n    // --- Renderização do Loading e Erro Inicial ---\r\n    if (isLoading && quePergs.length === 0 && !titulo) { /* ... (sem mudança) ... */\r\n        return <div className=\"page-container center-content\"><p>Carregando dados do questionário...</p></div>;\r\n    }\r\n    if (error && quePergs.length === 0 && !titulo) { /* ... (sem mudança) ... */\r\n        return (\r\n            <div className=\"page-container center-content\">\r\n                <p style={{ color: 'red' }}>{error}</p>\r\n                <Link href=\"/questionarios\" className=\"btn btn-secondary\" style={{ marginTop: '1rem' }}>\r\n                    Voltar para Lista de Questionários\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <div className=\"mb-6 flex space-x-2 border-b border-border pb-2\">\r\n                <button\r\n                    onClick={() => { setViewMode('editar'); setSelectedAvaliacaoId(null); }}\r\n                    className={`btn ${viewMode === 'editar' ? 'btn-primary' : 'btn-outline'}`}\r\n                >\r\n                    Configurar Perguntas\r\n                </button>\r\n                <button\r\n                    onClick={() => { setViewMode('respostas'); setSelectedAvaliacaoId(null); }}\r\n                    className={`btn ${viewMode === 'respostas' ? 'btn-primary' : 'btn-outline'}`}\r\n                >\r\n                    Visualizar Respostas\r\n                </button>\r\n                <button\r\n                    onClick={() => setViewMode('analise')}\r\n                    className={`btn ${viewMode === 'analise' ? 'btn-primary' : 'btn-outline'}`}\r\n                >\r\n                    Análise / Dashboard\r\n                </button>\r\n            </div>\r\n\r\n            {viewMode === 'editar' && (\r\n                <form onSubmit={handleSaveChanges} className=\"editor-form-card\">\r\n                    {/* ... (Conteúdo do formulário de edição como antes) ... */}\r\n                    <div className=\"form-header\"> {/* Estilo do cabeçalho do card */}\r\n                        <h3>Editando Questionário: {titulo || \"Carregando Título...\"}</h3>\r\n                        <div className=\"form-header-actions\">\r\n                            <button type=\"button\" onClick={() => router.push(\"/questionarios\")} className=\"btn btn-secondary\" disabled={isLoading}>Cancelar</button>\r\n                            <button type=\"submit\" className=\"btn btn-primary\" disabled={isLoading}>\r\n                                {isLoading ? \"Salvando...\" : \"Salvar Alterações\"}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"display-section\">\r\n                        <label htmlFor=\"titulo-input\" className=\"form-label\">Título do Questionário</label> {/* Usando form-label */}\r\n                        <input\r\n                            id=\"titulo-input\"\r\n                            type=\"text\"\r\n                            value={titulo}\r\n                            onChange={(e) => setTitulo(e.target.value)}\r\n                            className=\"input-edit-mode title-input\" // Sua classe ou a global para inputs\r\n                            disabled={isLoading}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"display-section\">\r\n                        <label className=\"form-label\">Perguntas do Questionário</label> {/* Usando form-label */}\r\n                        <div className=\"perguntas-edit-list\">\r\n                            <DndContext\r\n                                sensors={sensors}\r\n                                collisionDetection={closestCenter}\r\n                                onDragEnd={handleDragEnd}\r\n                                onDragStart={handleDragStart}\r\n                            >\r\n                                <SortableContext\r\n                                    items={quePergs.map(qp => qp.pergunta.id ?? qp.pergunta.tempId).filter((id): id is string | number => id !== undefined)}\r\n                                    strategy={verticalListSortingStrategy}\r\n                                >\r\n                                    {quePergs.map((qp, qIndex) => (\r\n                                        <SortableItem key={qp.pergunta.id ?? qp.pergunta.tempId} id={qp.pergunta.id ?? qp.pergunta.tempId}>\r\n                                            <div className=\"pergunta-editor-item\">\r\n                                                <label htmlFor={`enunciado-pergunta-${qIndex}`} className=\"form-label sr-only\">Enunciado da Pergunta {qIndex + 1}</label>\r\n                                                <textarea\r\n                                                    id={`enunciado-pergunta-${qIndex}`}\r\n                                                    value={qp.pergunta.enunciado}\r\n                                                    onChange={(e) => handlePerguntaChange(qIndex, e.target.value)}\r\n                                                    className=\"input-edit-mode question-textarea\"\r\n                                                    rows={2}\r\n                                                    placeholder={`Enunciado da Pergunta ${qIndex + 1}`}\r\n                                                    required\r\n                                                />\r\n                                                <div className=\"mt-4 flex items-end gap-x-3\">\r\n                                                    {/* Contêiner para o seletor de tipo, que ocupará o espaço disponível */}\r\n                                                    <div className=\"flex-grow\">\r\n                                                        <label htmlFor={`tipo-pergunta-${qIndex}`} className=\"form-label\">\r\n                                                            Tipo\r\n                                                        </label>\r\n                                                        <select\r\n                                                            id={`tipo-pergunta-${qIndex}`}\r\n                                                            value={qp.pergunta.tipos}\r\n                                                            onChange={(e) => handleTipoChange(qIndex, e.target.value as 'TEXTO' | 'MULTIPLA_ESCOLHA')}\r\n                                                            className=\"input-edit-mode w-full\"\r\n                                                            disabled={isLoading}\r\n                                                        >\r\n                                                            <option value=\"TEXTO\">Texto</option>\r\n                                                            <option value=\"MULTIPLA_ESCOLHA\">Múltipla Escolha</option>\r\n                                                        </select>\r\n                                                    </div>\r\n\r\n                                                    {/* Botão de lixeira */}\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        onClick={() => removePergunta(qIndex)}\r\n                                                        className=\"btn btn-danger p-2.5\" // Reutiliza suas classes de botão para consistência\r\n                                                        title=\"Remover Pergunta\"\r\n                                                        disabled={isLoading}\r\n                                                    >\r\n                                                        <Trash2 size={18} />\r\n                                                    </button>\r\n                                                </div>\r\n\r\n                                                {qp.pergunta.tipos === 'MULTIPLA_ESCOLHA' && (\r\n                                                    <div className=\"opcoes-editor-container\">\r\n                                                        <label className=\"form-label\">Opções de Resposta</label>\r\n                                                        {qp.pergunta.opcoes.map((opt, oIndex) => (\r\n                                                            <div key={opt.id ?? opt.tempId ?? `q${qIndex}-o${oIndex}`} className=\"opcao-editor-item\">\r\n                                                                <label htmlFor={`opcao-q${qIndex}-o${oIndex}`} className=\"sr-only\">Opção {oIndex + 1}</label>\r\n                                                                <input\r\n                                                                    id={`opcao-q${qIndex}-o${oIndex}`}\r\n                                                                    type=\"text\"\r\n                                                                    value={opt.texto}\r\n                                                                    onChange={(e) => handleOptionChange(qIndex, oIndex, e.target.value)}\r\n                                                                    placeholder={`Texto da Opção ${oIndex + 1}`}\r\n                                                                    className=\"input-edit-mode\" // Sua classe ou a global para inputs\r\n                                                                    disabled={isLoading}\r\n                                                                    required={qp.pergunta.tipos === 'MULTIPLA_ESCOLHA'} // Obrigatório se for múltipla escolha\r\n                                                                />\r\n                                                                <button\r\n                                                                    type=\"button\"\r\n                                                                    onClick={() => removeOption(qIndex, oIndex)}\r\n                                                                    className=\"btn-remover-opcao\" // Estilo para este botão específico\r\n                                                                    title=\"Remover Opção\"\r\n                                                                    disabled={isLoading}\r\n                                                                >\r\n                                                                    <Trash2 size={18} />\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => addOptionToList(qIndex)}\r\n                                                            className=\"btn btn-outline btn-sm mt-2 flex items-center self-start\" // Usando classes de botão genéricas\r\n                                                            disabled={isLoading}\r\n                                                        >\r\n                                                            <PlusIcon size={16} className=\"mr-1\" /> Adicionar Opção\r\n                                                        </button>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </SortableItem>\r\n                                    ))}\r\n                                </SortableContext>\r\n                            </DndContext>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleAddNewPergunta}\r\n                                className=\"btn btn-primary mt-4 flex items-center\" // Botão primário para ação principal\r\n                                style={{ padding: '0.75rem 1.5rem', fontSize: '1rem' }} // Estilo inline mantido, pode virar classe\r\n                                disabled={isLoading}\r\n                            >\r\n                                <PlusIcon size={20} className=\"mr-2\" /> Adicionar Nova Pergunta\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {/* // --- SEÇÃO DE VISUALIZAÇÃO DE RESPOSTAS MODIFICADA --- */}\r\n            {viewMode === 'respostas' && (\r\n                <div className=\"respostas-view-container mt-6\"> {/* Adiciona margem no topo */}\r\n                    <h3 className=\"text-xl sm:text-2xl font-semibold text-foreground mb-6\">\r\n                        Respostas para o Questionário: <span className=\"text-primary\">{titulo}</span>\r\n                    </h3>\r\n\r\n                    {isLoadingRespostas && <div className=\"text-center py-10\"><p className=\"text-text-muted\">Carregando respostas...</p></div>}\r\n                    {error && !isLoadingRespostas && <div className=\"text-center py-10\"><p className=\"text-red-600 dark:text-red-400\">{error}</p></div>}\r\n\r\n                    {!isLoadingRespostas && Object.keys(avaliacoesAgrupadasPorSemestre).length === 0 && !error && (\r\n                        <div className=\"text-center py-10 px-4 bg-card-background dark:bg-gray-800 rounded-lg shadow border border-border\">\r\n                            <ListChecks className=\"mx-auto h-12 w-12 text-text-muted\" strokeWidth={1.5} />\r\n                            <p className=\"mt-4 text-text-muted\">\r\n                                Nenhuma avaliação utilizando este questionário foi encontrada ou nenhuma resposta foi submetida ainda.\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Se uma avaliação específica está selecionada, mostra os detalhes dela */}\r\n                    {selectedAvaliacaoDetalhes && (\r\n                        <div className=\"bg-card-background dark:bg-gray-800 p-4 sm:p-6 rounded-lg shadow border border-border\">\r\n                            <button\r\n                                onClick={() => setSelectedAvaliacaoId(null)}\r\n                                className=\"btn btn-outline btn-sm mb-6 inline-flex items-center\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\"><path d=\"M19 12H5M12 19l-7-7 7-7\" /></svg>\r\n                                Voltar para Lista de Avaliações\r\n                            </button>\r\n                            <h4 className=\"text-xl font-semibold text-primary mb-1\">\r\n                                {selectedAvaliacaoDetalhes.semestre}\r\n                            </h4>\r\n                            <p className=\"text-sm text-text-muted mb-4\">\r\n                                ID da Avaliação: {selectedAvaliacaoDetalhes.id} - Requer Login: {selectedAvaliacaoDetalhes.requerLoginCliente ? \"Sim\" : \"Não\"}\r\n                            </p>\r\n\r\n                            {selectedAvaliacaoDetalhes.usuarios.length === 0 && (\r\n                                <p className=\"text-text-muted py-4\">Nenhuma resposta submetida para esta avaliação.</p>\r\n                            )}\r\n\r\n                            <div className=\"space-y-6\">\r\n                                {selectedAvaliacaoDetalhes.usuarios.map(respondente => (\r\n                                    <div key={respondente.id} className=\"p-4 border border-border rounded-md bg-page-bg dark:bg-gray-800/50\">\r\n                                        <p className=\"text-md font-medium text-foreground\">\r\n                                            Respondente: {respondente.usuario?.nome || respondente.usuario?.email || `Anônimo (Sessão: ...${respondente.anonymousSessionId?.slice(-6)})`}\r\n                                        </p>\r\n                                        <p className=\"text-xs text-text-muted mb-3\">\r\n                                            Status: {respondente.status} ({respondente.isFinalizado ? \"Finalizado\" : \"Em Andamento\"}) - Em: {new Date(respondente.created_at).toLocaleString('pt-BR')}\r\n                                        </p>\r\n                                        <ul className=\"space-y-3\">\r\n                                            {respondente.respostas.map(resp => (\r\n                                                <li key={resp.id} className=\"text-sm\">\r\n                                                    <strong className=\"block text-text-muted mb-0.5\">{resp.pergunta.enunciado}</strong>\r\n                                                    <span className=\"text-foreground pl-1\">{resp.resposta}</span>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Se NENHUMA avaliação específica está selecionada, mostra a lista agrupada por semestre */}\r\n                    {!isLoadingRespostas && Object.keys(avaliacoesAgrupadasPorSemestre).length > 0 && !selectedAvaliacaoId && (\r\n                        <div className=\"space-y-8\">\r\n                            {Object.entries(avaliacoesAgrupadasPorSemestre).map(([semestre, avaliacoesDoSemestre]) => (\r\n                                <div key={semestre} className=\"bg-card-background dark:bg-gray-800 p-4 sm:p-6 rounded-lg shadow border border-border\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => toggleSemestreExpandido(semestre)}\r\n                                        className=\"w-full flex justify-between items-center text-left py-2\"\r\n                                        aria-expanded={semestresExpandidos.has(semestre) ? \"true\" : \"false\"}\r\n                                    >\r\n                                        <h4 className=\"text-lg font-semibold text-primary flex items-center\">\r\n                                            <CalendarDays size={20} className=\"mr-2 text-primary/80\" />\r\n                                            Semestre: {semestre}\r\n                                        </h4>\r\n                                        {semestresExpandidos.has(semestre) ? <ChevronUp size={20} /> : <ChevronDown size={20} />}\r\n                                    </button>\r\n\r\n                                    {semestresExpandidos.has(semestre) && (\r\n                                        <div className=\"mt-4 space-y-3 pl-2 border-l-2 border-primary/30\">\r\n                                            {avaliacoesDoSemestre.map(av => (\r\n                                                <div key={av.id}\r\n                                                    className=\"p-3 border border-border rounded-md hover:bg-page-bg dark:hover:bg-gray-700/40 cursor-pointer transition-colors duration-150\"\r\n                                                    onClick={() => setSelectedAvaliacaoId(av.id)}\r\n                                                    role=\"button\"\r\n                                                    tabIndex={0}\r\n                                                    onKeyDown={(e) => e.key === 'Enter' && setSelectedAvaliacaoId(av.id)}\r\n                                                >\r\n                                                    <p className=\"font-medium text-foreground\">\r\n                                                        Avaliação ID: {av.id}\r\n                                                        <span className=\"text-xs text-text-muted ml-2\">\r\n                                                            (Criada em: {new Date(av.created_at).toLocaleDateString('pt-BR')})\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <div className=\"text-sm text-text-muted flex items-center mt-1\">\r\n                                                        <Users size={14} className=\"mr-1.5 text-text-muted/80\" />\r\n                                                        {av._count?.usuarios ?? 0} respondente(s)\r\n                                                        <span className=\"mx-2\">|</span>\r\n                                                        <span>Requer Login: {av.requerLoginCliente ? \"Sim\" : \"Não\"}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n            {/* NOVA Renderização condicional para 'analise' */}\r\n            {viewMode === 'analise' && (() => {\r\n                if (isLoadingDashboard) {\r\n                    return <div className=\"text-center p-10\">Carregando análise...</div>;\r\n                }\r\n                if (!dashboardData) {\r\n                    return <div className=\"text-center p-10\">Não há dados para analisar.</div>;\r\n                }\r\n\r\n                let wordCloudContent: React.ReactNode;\r\n                if (isLoadingWordCloud) {\r\n                    wordCloudContent = (\r\n                        <div className=\"flex h-full w-full items-center justify-center\">\r\n                            <p>Analisando textos...</p>\r\n                        </div>\r\n                    );\r\n                } else if (wordCloudData && wordCloudData.length > 0) {\r\n                    wordCloudContent = <WordCloud words={wordCloudData} />;\r\n                } else {\r\n                    wordCloudContent = (\r\n                        <div className=\"flex h-full w-full items-center justify-center\">\r\n                            <p>Nenhum dado de texto para exibir.</p>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <div className=\"space-y-8\">\r\n                        <h3 className=\"text-xl sm:text-2xl font-semibold text-foreground\">Análise do Questionário: <span className=\"text-primary\">{titulo}</span></h3>\r\n\r\n                        <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n                            <StatCard title=\"Total de Avaliações\" value={dashboardData.kpis.totalAvaliacoes} icon={FileText} color=\"text-indigo-500\" bgColor=\"bg-indigo-50 dark:bg-indigo-700/30\" />\r\n                            <StatCard title=\"Total de Respondentes\" value={dashboardData.kpis.totalRespondentes} icon={Users} color=\"text-blue-500\" bgColor=\"bg-blue-50 dark:bg-blue-700/30\" />\r\n                            <StatCard title=\"Respostas Finalizadas\" value={dashboardData.kpis.totalFinalizados} icon={CheckSquare} color=\"text-green-500\" bgColor=\"bg-green-50 dark:bg-green-700/30\" />\r\n                            <StatCard title=\"Taxa de Conclusão\" value={`${dashboardData.kpis.taxaDeConclusao}%`} icon={TrendingUp} color=\"text-amber-500\" bgColor=\"bg-amber-50 dark:bg-amber-700/30\" />\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                            {dashboardData.graficos.map(grafico => (\r\n                                <QuestionBarChart key={grafico.perguntaId} title={grafico.enunciado} data={grafico.respostas} />\r\n                            ))}\r\n\r\n                            <div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"text-question-select-specific\" className=\"form-label\">Analisar Pergunta de Texto:</label>\r\n                                    <select\r\n                                        id=\"text-question-select-specific\"\r\n                                        className=\"input-edit-mode\"\r\n                                        value={selectedTextQuestion}\r\n                                        onChange={e => setSelectedTextQuestion(e.target.value)}\r\n                                    >\r\n                                        <option value=\"\">Selecione uma pergunta</option>\r\n                                        {quePergs.filter(qp => qp.pergunta.tipos === 'TEXTO').map(qp => <option key={qp.pergunta.id} value={qp.pergunta.id}>{qp.pergunta.enunciado}</option>)}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"mt-4 h-[400px]\">\r\n                                    {wordCloudContent}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })()}\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"AAAA,+CAA+C;;;;;AAG/C;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AASA;AAOA;AApBA,0VAA6I,oBAAoB;AAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;;;;;;;;;;;;;;;AA6Fe,SAAS;IACpB,qBACI,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBAAU,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;0BAAE;;;;;;;;;;;kBAClE,cAAA,8OAAC,4IAAA,CAAA,UAAc;sBACX,cAAA,8OAAC;;;;;;;;;;;;;;;AAIjB;AAEA,SAAS;IACL,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,iBAAiB,OAAO,OAAO,EAAE;IAEvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsC;IAC7E,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B,EAAE;IAC/F,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAE9E,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqD;IACtG,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqC,EAAE;IACxF,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7D,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,IAAI;IAEhF,MAAM,UAAU,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD,EACrB,CAAA,GAAA,2JAAA,CAAA,YAAS,AAAD,EAAE,2JAAA,CAAA,gBAAa,EAAE;QACrB,sBAAsB;YAClB,OAAO;YACP,WAAW;QACf;IACJ;IAGJ,MAAM,kBAAkB,CAAC;QACrB,MAAM,sBAAsB;YAAC;YAAS;YAAY;YAAU;SAAS;QACrE,IAAI,oBAAoB,QAAQ,CAAC,OAAO,QAAQ,OAAO,QAAQ,UAAU;YACrE,MAAM,MAAM,IAAI,qCAAqC;QACzD;IACJ;IAEA,MAAM,gBAAgB,CAAC;QACnB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG;QACzB,IAAI,CAAC,QAAQ,OAAO,EAAE,KAAK,KAAK,EAAE,EAAE;QACpC,MAAM,WAAW,SAAS,SAAS,CAAC,CAAA,IAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,MAAM,OAAO,EAAE;QAC3F,MAAM,WAAW,SAAS,SAAS,CAAC,CAAA,IAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,MAAM,KAAK,EAAE;QACzF,MAAM,QAAQ,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,UAAU,UAAU;QAC5C,YAAY;IAChB;IAEA,+EAA+E;IAC/E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,aAAa,aAAa,gBAAgB;YAC1C,sBAAsB;YACtB,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAC,CAAC,0BAA0B,EAAE,gBAAgB,EAChD,IAAI,CAAC,CAAA;gBACF,iBAAiB,SAAS,IAAI;YAClC,GACC,KAAK,CAAC,CAAA;gBACH,QAAQ,KAAK,CAAC,iDAAiD;YAC/D,iBAAiB;YACrB,GACC,OAAO,CAAC;gBACL,sBAAsB;YAC1B;QACR;IACJ,GAAG;QAAC;QAAU;KAAe;IAE7B,qDAAqD;IACrD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,aAAa,aAAa,sBAAsB;YAChD,MAAM,iBAAiB;gBACnB,IAAI;oBACA,sBAAsB;oBACtB,gDAAgD;oBAChD,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAC,CAAC,0BAA0B,EAAE,qBAAqB,gBAAgB,EAAE,gBAAgB;oBACnH,iBAAiB,SAAS,IAAI,CAAC,SAAS;gBAC5C,EAAE,OAAO,OAAO;oBACZ,QAAQ,KAAK,CAAC,uCAAuC;gBACzD,SAAU;oBACN,sBAAsB;gBAC1B;YACJ;YACA;QACJ;IACJ,GAAG;QAAC;QAAU;QAAsB;KAAe;IAEnD,uEAAuE;IACvE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,CAAC,gBAAgB;YACjB,SAAS;YACT,aAAa;YACb;QACJ;QACA,aAAa;QACb,SAAS;QACT,MAAM,WAAW;YACb,IAAI;gBACA,MAAM,mBAAmB,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAmB,CAAC,eAAe,EAAE,gBAAgB;gBAC3F,UAAU,iBAAiB,IAAI,CAAC,MAAM;gBACtC,MAAM,cAAc,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAY,CAAC,wBAAwB,EAAE,gBAAgB;gBACxF,MAAM,oBAAoB,YAAY,IAAI,CAAC,GAAG,CAAC,CAAA,KAAM,CAAC;wBAClD,GAAG,EAAE;wBACL,UAAU;4BACN,GAAG,GAAG,QAAQ;4BACd,QAAQ,CAAC,GAAG,QAAQ,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAA,MAAO,CAAC;oCAAE,GAAG,GAAG;gCAAC,CAAC;wBAC7D;oBACJ,CAAC;gBACD,YAAY;YAChB,EAAE,OAAO,KAAU;gBACf,QAAQ,KAAK,CAAC,2CAA2C;gBACzD,IAAI,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,KAAK,OAAO,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,GAAG;oBAC9E,SAAS;gBACb,OAAO,IAAI,IAAI,QAAQ,IAAI,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAK;oBACpD,SAAS;gBACb,OAAO;oBACH,SAAS;gBACb;YACJ,SAAU;gBACN,aAAa;YACjB;QACJ;QACA;IACJ,GAAG;QAAC;KAAe;IAEnB,0EAA0E;IAC1E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,aAAa,eAAe,gBAAgB;YAC5C,sBAAsB;YACtB,SAAS;YACT,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAyB,CAAC,eAAe,EAAE,eAAe,yBAAyB,CAAC,EAAE,qCAAqC;aAC7H,IAAI,CAAC,CAAA;gBACF,0BAA0B,SAAS,IAAI;YAC3C,GACC,KAAK,CAAC,CAAA;gBACH,QAAQ,KAAK,CAAC,4CAA4C;gBAC1D,SAAS;YACb,GACC,OAAO,CAAC;gBACL,sBAAsB;YAC1B;QACR;IACJ,GAAG;QAAC;QAAU;KAAe;IAE7B,sEAAsE;IACtE,MAAM,uBAAuB,CAAC,QAAgB;QAC1C,YAAY,CAAA,eACR,aAAa,GAAG,CAAC,CAAC,IAAI,QAClB,UAAU,SACJ;oBAAE,GAAG,EAAE;oBAAE,UAAU;wBAAE,GAAG,GAAG,QAAQ;wBAAE,WAAW;oBAAc;gBAAE,IAChE;IAGlB;IACA,MAAM,iBAAiB,CAAC;QACpB,6CAA6C;QAC7C,IAAI,CAAC,OAAO,OAAO,CAAC,qDAAqD;YACrE;QACJ;QAEA,gFAAgF;QAChF,MAAM,iBAAiB,SAAS,MAAM,CAAC,CAAC,GAAG,QAAU,UAAU;QAC/D,YAAY;IAChB;IAEA,MAAM,mBAAmB,CAAC,QAAgB;QACtC,YAAY,CAAA,eACR,aAAa,GAAG,CAAC,CAAC,IAAI;gBAClB,IAAI,UAAU,QAAQ;oBAClB,OAAO;gBACX;gBACA,MAAM,gBAAgB,GAAG,QAAQ;gBACjC,IAAI;gBACJ,IAAI,aAAa,SAAS;oBACtB,cAAc,EAAE;gBACpB,OAAO,IAAI,cAAc,MAAM,CAAC,MAAM,KAAK,GAAG;oBAC1C,cAAc;wBAAC;4BAAE,OAAO;4BAAI,QAAQ,CAAC,SAAS,EAAE,KAAK,GAAG,IAAI;wBAAC;qBAAE;gBACnE,OAAO;oBACH,cAAc,cAAc,MAAM,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC;4BAAE,GAAG,CAAC;wBAAC,CAAC;gBACzD;gBACA,OAAO;oBAAE,GAAG,EAAE;oBAAE,UAAU;wBAAE,GAAG,aAAa;wBAAE,OAAO;wBAAU,QAAQ;oBAAY;gBAAE;YACzF;IAER;IACA,MAAM,qBAAqB,CAAC,QAAgB,QAAgB;QACxD,YAAY,CAAA,eACR,aAAa,GAAG,CAAC,CAAC,IAAI;gBAClB,IAAI,UAAU,QAAQ;oBAClB,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,SAC7C,WAAW,SAAS;4BAAE,GAAG,GAAG;4BAAE,OAAO;wBAAU,IAAI;oBAEvD,OAAO;wBAAE,GAAG,EAAE;wBAAE,UAAU;4BAAE,GAAG,GAAG,QAAQ;4BAAE,QAAQ;wBAAY;oBAAE;gBACtE;gBACA,OAAO;YACX;IAER;IACA,MAAM,kBAAkB,CAAC;QACrB,YAAY,CAAA,eACR,aAAa,GAAG,CAAC,CAAC,IAAI;gBAClB,IAAI,UAAU,QAAQ;oBAClB,MAAM,cAAc;2BAAI,GAAG,QAAQ,CAAC,MAAM;wBAAE;4BAAE,OAAO;4BAAI,QAAQ,CAAC,SAAS,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE;wBAAC;qBAAE;oBACzH,OAAO;wBAAE,GAAG,EAAE;wBAAE,UAAU;4BAAE,GAAG,GAAG,QAAQ;4BAAE,QAAQ;wBAAY;oBAAE;gBACtE;gBACA,OAAO;YACX;IAER;IACA,MAAM,eAAe,CAAC,QAAgB;QAClC,YAAY,CAAA,eACR,aAAa,GAAG,CAAC,CAAC,IAAI;gBAClB,IAAI,UAAU,QAAQ;oBAClB,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,SAAW,WAAW;oBACxE,OAAO;wBAAE,GAAG,EAAE;wBAAE,UAAU;4BAAE,GAAG,GAAG,QAAQ;4BAAE,QAAQ;wBAAY;oBAAE;gBACtE;gBACA,OAAO;YACX;IAER;IACA,MAAM,uBAAuB;QACzB,MAAM,sBAAwC;YAC1C,QAAQ,CAAC,UAAU,EAAE,KAAK,GAAG,IAAI;YACjC,WAAW;YACX,OAAO;YACP,QAAQ,EAAE;QACd;QACA,MAAM,cAAuB;YACzB,gBAAgB;YAChB,UAAU;QACd;QACA,YAAY,CAAA,eAAgB;mBAAI;gBAAc;aAAY;IAC9D;IACA,MAAM,oBAAoB,OAAO;QAC7B,EAAE,cAAc;QAChB,aAAa;QACb,SAAS;QAET,yEAAyE;QACzE,MAAM,sBAAsB,SAAS,GAAG,CAAC,CAAC,IAAI,QAAU,CAAC;gBACrD,IAAI,GAAG,QAAQ,CAAC,EAAE;gBAClB,WAAW,GAAG,QAAQ,CAAC,SAAS;gBAChC,OAAO,GAAG,QAAQ,CAAC,KAAK;gBACxB,OAAO;gBACP,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;wBACnC,IAAI,IAAI,EAAE;wBACV,OAAO,IAAI,KAAK;oBACpB,CAAC;YACL,CAAC;QAED,MAAM,UAAU;YACZ,QAAQ;YACR,WAAW;QACf;QAEA,IAAI;YACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,KAAK,CAAC,CAAC,eAAe,EAAE,gBAAgB,EAAE;YACrE,UAAU,SAAS,IAAI,CAAC,MAAM;YAC9B,MAAM,oBAAoB,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAW,CAAC;oBAC/D,IAAI,EAAE,sBAAsB;oBAC5B,gBAAgB,EAAE,cAAc;oBAChC,UAAU;wBACN,IAAI,EAAE,EAAE;wBACR,WAAW,EAAE,SAAS;wBACtB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,MAAM,IAAI,EAAE;oBAC1B;gBACJ,CAAC;YACD,YAAY;YACZ,MAAM;YACN,OAAO,IAAI,CAAC;QAChB,EAAE,OAAO,OAAY;YACjB,QAAQ,KAAK,CAAC,mBAAmB,MAAM,QAAQ,EAAE,QAAQ;YACzD,MAAM,eAAe,MAAM,QAAQ,EAAE,MAAM,SAAS;YACpD,SAAS;YACT,MAAM,CAAC,gBAAgB,EAAE,cAAc;QAC3C,SAAU;YACN,aAAa;QACjB;IACJ;IAEA,4DAA4D;IAC5D,MAAM,iCAAiC,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAC3C,IAAI,aAAa,eAAe,uBAAuB,MAAM,KAAK,GAAG;YACjE,OAAO,CAAC;QACZ;QACA,MAAM,WAA2D,CAAC;QAClE,uBAAuB,OAAO,CAAC,CAAA;YAC3B,IAAI,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,EAAE;gBACxB,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE;YAC9B;YACA,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC;QAC/B;QAEA,gDAAgD;QAChD,MAAM,qBAAqB,OAAO,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,GAAG;YACtD,MAAM,CAAC,MAAM,SAAS,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC;YAC1C,MAAM,CAAC,MAAM,SAAS,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC;YAC1C,IAAI,SAAS,MAAM,OAAO,OAAO;YACjC,OAAO,WAAW;QACtB;QAEA,MAAM,mBAAmE,CAAC;QAC1E,mBAAmB,OAAO,CAAC,CAAA;YACvB,0FAA0F;YAC1F,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,QAAU,IAAI,KAAK,MAAM,UAAU,EAAE,OAAO,KAAK,IAAI,KAAK,MAAM,UAAU,EAAE,OAAO;YAC9G,gBAAgB,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI;QACzC;QAEA,OAAO;IACX,GAAG;QAAC;QAAU;KAAuB;IAErC,iDAAiD;IACjD,MAAM,0BAA0B,CAAC;QAC7B,uBAAuB,CAAA;YACnB,MAAM,UAAU,IAAI,IAAI;YACxB,IAAI,QAAQ,GAAG,CAAC,WAAW;gBACvB,QAAQ,MAAM,CAAC;YACnB,OAAO;gBACH,QAAQ,GAAG,CAAC;YAChB;YACA,OAAO;QACX;IACJ;IAGA,MAAM,4BAA4B,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACtC,IAAI,CAAC,qBAAqB,OAAO;QACjC,OAAO,uBAAuB,IAAI,CAAC,CAAA,KAAM,GAAG,EAAE,KAAK;IACvD,GAAG;QAAC;QAAqB;KAAuB;IAEhD,iDAAiD;IACjD,IAAI,aAAa,SAAS,MAAM,KAAK,KAAK,CAAC,QAAQ;QAC/C,qBAAO,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;0BAAE;;;;;;;;;;;IAC7D;IACA,IAAI,SAAS,SAAS,MAAM,KAAK,KAAK,CAAC,QAAQ;QAC3C,qBACI,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAE,OAAO;wBAAE,OAAO;oBAAM;8BAAI;;;;;;8BAC7B,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAiB,WAAU;oBAAoB,OAAO;wBAAE,WAAW;oBAAO;8BAAG;;;;;;;;;;;;IAKpG;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBACG,SAAS;4BAAQ,YAAY;4BAAW,uBAAuB;wBAAO;wBACtE,WAAW,CAAC,IAAI,EAAE,aAAa,WAAW,gBAAgB,eAAe;kCAC5E;;;;;;kCAGD,8OAAC;wBACG,SAAS;4BAAQ,YAAY;4BAAc,uBAAuB;wBAAO;wBACzE,WAAW,CAAC,IAAI,EAAE,aAAa,cAAc,gBAAgB,eAAe;kCAC/E;;;;;;kCAGD,8OAAC;wBACG,SAAS,IAAM,YAAY;wBAC3B,WAAW,CAAC,IAAI,EAAE,aAAa,YAAY,gBAAgB,eAAe;kCAC7E;;;;;;;;;;;;YAKJ,aAAa,0BACV,8OAAC;gBAAK,UAAU;gBAAmB,WAAU;;kCAEzC,8OAAC;wBAAI,WAAU;;4BAAc;0CACzB,8OAAC;;oCAAG;oCAAwB,UAAU;;;;;;;0CACtC,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAO,MAAK;wCAAS,SAAS,IAAM,OAAO,IAAI,CAAC;wCAAmB,WAAU;wCAAoB,UAAU;kDAAW;;;;;;kDACvH,8OAAC;wCAAO,MAAK;wCAAS,WAAU;wCAAkB,UAAU;kDACvD,YAAY,gBAAgB;;;;;;;;;;;;;;;;;;kCAKzC,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAM,SAAQ;gCAAe,WAAU;0CAAa;;;;;;4BAA8B;0CACnF,8OAAC;gCACG,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;gCACzC,WAAU,8BAA8B,qCAAqC;;gCAC7E,UAAU;gCACV,QAAQ;;;;;;;;;;;;kCAIhB,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAM,WAAU;0CAAa;;;;;;4BAAiC;0CAC/D,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,2JAAA,CAAA,aAAU;wCACP,SAAS;wCACT,oBAAoB,2JAAA,CAAA,gBAAa;wCACjC,WAAW;wCACX,aAAa;kDAEb,cAAA,8OAAC,mKAAA,CAAA,kBAAe;4CACZ,OAAO,SAAS,GAAG,CAAC,CAAA,KAAM,GAAG,QAAQ,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,KAA8B,OAAO;4CAC7G,UAAU,mKAAA,CAAA,8BAA2B;sDAEpC,SAAS,GAAG,CAAC,CAAC,IAAI,uBACf,8OAAC,kIAAA,CAAA,eAAY;oDAA4C,IAAI,GAAG,QAAQ,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM;8DAC7F,cAAA,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAM,SAAS,CAAC,mBAAmB,EAAE,QAAQ;gEAAE,WAAU;;oEAAqB;oEAAuB,SAAS;;;;;;;0EAC/G,8OAAC;gEACG,IAAI,CAAC,mBAAmB,EAAE,QAAQ;gEAClC,OAAO,GAAG,QAAQ,CAAC,SAAS;gEAC5B,UAAU,CAAC,IAAM,qBAAqB,QAAQ,EAAE,MAAM,CAAC,KAAK;gEAC5D,WAAU;gEACV,MAAM;gEACN,aAAa,CAAC,sBAAsB,EAAE,SAAS,GAAG;gEAClD,QAAQ;;;;;;0EAEZ,8OAAC;gEAAI,WAAU;;kFAEX,8OAAC;wEAAI,WAAU;;0FACX,8OAAC;gFAAM,SAAS,CAAC,cAAc,EAAE,QAAQ;gFAAE,WAAU;0FAAa;;;;;;0FAGlE,8OAAC;gFACG,IAAI,CAAC,cAAc,EAAE,QAAQ;gFAC7B,OAAO,GAAG,QAAQ,CAAC,KAAK;gFACxB,UAAU,CAAC,IAAM,iBAAiB,QAAQ,EAAE,MAAM,CAAC,KAAK;gFACxD,WAAU;gFACV,UAAU;;kGAEV,8OAAC;wFAAO,OAAM;kGAAQ;;;;;;kGACtB,8OAAC;wFAAO,OAAM;kGAAmB;;;;;;;;;;;;;;;;;;kFAKzC,8OAAC;wEACG,MAAK;wEACL,SAAS,IAAM,eAAe;wEAC9B,WAAU,uBAAuB,oDAAoD;;wEACrF,OAAM;wEACN,UAAU;kFAEV,cAAA,8OAAC,0MAAA,CAAA,SAAM;4EAAC,MAAM;;;;;;;;;;;;;;;;;4DAIrB,GAAG,QAAQ,CAAC,KAAK,KAAK,oCACnB,8OAAC;gEAAI,WAAU;;kFACX,8OAAC;wEAAM,WAAU;kFAAa;;;;;;oEAC7B,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,uBAC1B,8OAAC;4EAA0D,WAAU;;8FACjE,8OAAC;oFAAM,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,QAAQ;oFAAE,WAAU;;wFAAU;wFAAO,SAAS;;;;;;;8FACnF,8OAAC;oFACG,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,QAAQ;oFACjC,MAAK;oFACL,OAAO,IAAI,KAAK;oFAChB,UAAU,CAAC,IAAM,mBAAmB,QAAQ,QAAQ,EAAE,MAAM,CAAC,KAAK;oFAClE,aAAa,CAAC,eAAe,EAAE,SAAS,GAAG;oFAC3C,WAAU,kBAAkB,qCAAqC;;oFACjE,UAAU;oFACV,UAAU,GAAG,QAAQ,CAAC,KAAK,KAAK;;;;;;8FAEpC,8OAAC;oFACG,MAAK;oFACL,SAAS,IAAM,aAAa,QAAQ;oFACpC,WAAU,oBAAoB,oCAAoC;;oFAClE,OAAM;oFACN,UAAU;8FAEV,cAAA,8OAAC,0MAAA,CAAA,SAAM;wFAAC,MAAM;;;;;;;;;;;;2EAnBZ,IAAI,EAAE,IAAI,IAAI,MAAM,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,QAAQ;;;;;kFAuB7D,8OAAC;wEACG,MAAK;wEACL,SAAS,IAAM,gBAAgB;wEAC/B,WAAU,2DAA2D,oCAAoC;;wEACzG,UAAU;;0FAEV,8OAAC,sMAAA,CAAA,WAAQ;gFAAC,MAAM;gFAAI,WAAU;;;;;;4EAAS;;;;;;;;;;;;;;;;;;;mDA3ExC,GAAG,QAAQ,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM;;;;;;;;;;;;;;;kDAoFnE,8OAAC;wCACG,MAAK;wCACL,SAAS;wCACT,WAAU,yCAAyC,qCAAqC;;wCACxF,OAAO;4CAAE,SAAS;4CAAkB,UAAU;wCAAO;wCACrD,UAAU;;0DAEV,8OAAC,sMAAA,CAAA,WAAQ;gDAAC,MAAM;gDAAI,WAAU;;;;;;4CAAS;;;;;;;;;;;;;;;;;;;;;;;;;YAQ1D,aAAa,6BACV,8OAAC;gBAAI,WAAU;;oBAAgC;kCAC3C,8OAAC;wBAAG,WAAU;;4BAAyD;0CACpC,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;;;;;;;oBAGlE,oCAAsB,8OAAC;wBAAI,WAAU;kCAAoB,cAAA,8OAAC;4BAAE,WAAU;sCAAkB;;;;;;;;;;;oBACxF,SAAS,CAAC,oCAAsB,8OAAC;wBAAI,WAAU;kCAAoB,cAAA,8OAAC;4BAAE,WAAU;sCAAkC;;;;;;;;;;;oBAElH,CAAC,sBAAsB,OAAO,IAAI,CAAC,gCAAgC,MAAM,KAAK,KAAK,CAAC,uBACjF,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,kNAAA,CAAA,aAAU;gCAAC,WAAU;gCAAoC,aAAa;;;;;;0CACvE,8OAAC;gCAAE,WAAU;0CAAuB;;;;;;;;;;;;oBAO3C,2CACG,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCACG,SAAS,IAAM,uBAAuB;gCACtC,WAAU;;kDAEV,8OAAC;wCAAI,OAAM;wCAA6B,OAAM;wCAAK,QAAO;wCAAK,SAAQ;wCAAY,MAAK;wCAAO,QAAO;wCAAe,aAAY;wCAAI,eAAc;wCAAQ,gBAAe;wCAAQ,WAAU;kDAAO,cAAA,8OAAC;4CAAK,GAAE;;;;;;;;;;;oCAAkC;;;;;;;0CAGjP,8OAAC;gCAAG,WAAU;0CACT,0BAA0B,QAAQ;;;;;;0CAEvC,8OAAC;gCAAE,WAAU;;oCAA+B;oCACtB,0BAA0B,EAAE;oCAAC;oCAAkB,0BAA0B,kBAAkB,GAAG,QAAQ;;;;;;;4BAG3H,0BAA0B,QAAQ,CAAC,MAAM,KAAK,mBAC3C,8OAAC;gCAAE,WAAU;0CAAuB;;;;;;0CAGxC,8OAAC;gCAAI,WAAU;0CACV,0BAA0B,QAAQ,CAAC,GAAG,CAAC,CAAA,4BACpC,8OAAC;wCAAyB,WAAU;;0DAChC,8OAAC;gDAAE,WAAU;;oDAAsC;oDACjC,YAAY,OAAO,EAAE,QAAQ,YAAY,OAAO,EAAE,SAAS,CAAC,oBAAoB,EAAE,YAAY,kBAAkB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;;;;;;;0DAEhJ,8OAAC;gDAAE,WAAU;;oDAA+B;oDAC/B,YAAY,MAAM;oDAAC;oDAAG,YAAY,YAAY,GAAG,eAAe;oDAAe;oDAAS,IAAI,KAAK,YAAY,UAAU,EAAE,cAAc,CAAC;;;;;;;0DAErJ,8OAAC;gDAAG,WAAU;0DACT,YAAY,SAAS,CAAC,GAAG,CAAC,CAAA,qBACvB,8OAAC;wDAAiB,WAAU;;0EACxB,8OAAC;gEAAO,WAAU;0EAAgC,KAAK,QAAQ,CAAC,SAAS;;;;;;0EACzE,8OAAC;gEAAK,WAAU;0EAAwB,KAAK,QAAQ;;;;;;;uDAFhD,KAAK,EAAE;;;;;;;;;;;uCATlB,YAAY,EAAE;;;;;;;;;;;;;;;;oBAsBvC,CAAC,sBAAsB,OAAO,IAAI,CAAC,gCAAgC,MAAM,GAAG,KAAK,CAAC,qCAC/E,8OAAC;wBAAI,WAAU;kCACV,OAAO,OAAO,CAAC,gCAAgC,GAAG,CAAC,CAAC,CAAC,UAAU,qBAAqB,iBACjF,8OAAC;gCAAmB,WAAU;;kDAC1B,8OAAC;wCACG,MAAK;wCACL,SAAS,IAAM,wBAAwB;wCACvC,WAAU;wCACV,iBAAe,oBAAoB,GAAG,CAAC,YAAY,SAAS;;0DAE5D,8OAAC;gDAAG,WAAU;;kEACV,8OAAC,sNAAA,CAAA,eAAY;wDAAC,MAAM;wDAAI,WAAU;;;;;;oDAAyB;oDAChD;;;;;;;4CAEd,oBAAoB,GAAG,CAAC,0BAAY,8OAAC,gNAAA,CAAA,YAAS;gDAAC,MAAM;;;;;qEAAS,8OAAC,oNAAA,CAAA,cAAW;gDAAC,MAAM;;;;;;;;;;;;oCAGrF,oBAAoB,GAAG,CAAC,2BACrB,8OAAC;wCAAI,WAAU;kDACV,qBAAqB,GAAG,CAAC,CAAA,mBACtB,8OAAC;gDACG,WAAU;gDACV,SAAS,IAAM,uBAAuB,GAAG,EAAE;gDAC3C,MAAK;gDACL,UAAU;gDACV,WAAW,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW,uBAAuB,GAAG,EAAE;;kEAEnE,8OAAC;wDAAE,WAAU;;4DAA8B;4DACxB,GAAG,EAAE;0EACpB,8OAAC;gEAAK,WAAU;;oEAA+B;oEAC9B,IAAI,KAAK,GAAG,UAAU,EAAE,kBAAkB,CAAC;oEAAS;;;;;;;;;;;;;kEAGzE,8OAAC;wDAAI,WAAU;;0EACX,8OAAC,oMAAA,CAAA,QAAK;gEAAC,MAAM;gEAAI,WAAU;;;;;;4DAC1B,GAAG,MAAM,EAAE,YAAY;4DAAE;0EAC1B,8OAAC;gEAAK,WAAU;0EAAO;;;;;;0EACvB,8OAAC;;oEAAK;oEAAe,GAAG,kBAAkB,GAAG,QAAQ;;;;;;;;;;;;;;+CAjBnD,GAAG,EAAE;;;;;;;;;;;+BAjBrB;;;;;;;;;;;;;;;;YA+C7B,aAAa,aAAa,CAAC;gBACxB,IAAI,oBAAoB;oBACpB,qBAAO,8OAAC;wBAAI,WAAU;kCAAmB;;;;;;gBAC7C;gBACA,IAAI,CAAC,eAAe;oBAChB,qBAAO,8OAAC;wBAAI,WAAU;kCAAmB;;;;;;gBAC7C;gBAEA,IAAI;gBACJ,IAAI,oBAAoB;oBACpB,iCACI,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;sCAAE;;;;;;;;;;;gBAGf,OAAO,IAAI,iBAAiB,cAAc,MAAM,GAAG,GAAG;oBAClD,iCAAmB,8OAAC,4IAAA,CAAA,YAAS;wBAAC,OAAO;;;;;;gBACzC,OAAO;oBACH,iCACI,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;sCAAE;;;;;;;;;;;gBAGf;gBAEA,qBACI,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;;gCAAoD;8CAAyB,8OAAC;oCAAK,WAAU;8CAAgB;;;;;;;;;;;;sCAE3H,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,2IAAA,CAAA,WAAQ;oCAAC,OAAM;oCAAsB,OAAO,cAAc,IAAI,CAAC,eAAe;oCAAE,MAAM,8MAAA,CAAA,WAAQ;oCAAE,OAAM;oCAAkB,SAAQ;;;;;;8CACjI,8OAAC,2IAAA,CAAA,WAAQ;oCAAC,OAAM;oCAAwB,OAAO,cAAc,IAAI,CAAC,iBAAiB;oCAAE,MAAM,oMAAA,CAAA,QAAK;oCAAE,OAAM;oCAAgB,SAAQ;;;;;;8CAChI,8OAAC,2IAAA,CAAA,WAAQ;oCAAC,OAAM;oCAAwB,OAAO,cAAc,IAAI,CAAC,gBAAgB;oCAAE,MAAM,2NAAA,CAAA,cAAW;oCAAE,OAAM;oCAAiB,SAAQ;;;;;;8CACtI,8OAAC,2IAAA,CAAA,WAAQ;oCAAC,OAAM;oCAAoB,OAAO,GAAG,cAAc,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;oCAAE,MAAM,kNAAA,CAAA,aAAU;oCAAE,OAAM;oCAAiB,SAAQ;;;;;;;;;;;;sCAG1I,8OAAC;4BAAI,WAAU;;gCACV,cAAc,QAAQ,CAAC,GAAG,CAAC,CAAA,wBACxB,8OAAC,mJAAA,CAAA,mBAAgB;wCAA0B,OAAO,QAAQ,SAAS;wCAAE,MAAM,QAAQ,SAAS;uCAArE,QAAQ,UAAU;;;;;8CAG7C,8OAAC;;sDACG,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAM,SAAQ;oDAAgC,WAAU;8DAAa;;;;;;8DACtE,8OAAC;oDACG,IAAG;oDACH,WAAU;oDACV,OAAO;oDACP,UAAU,CAAA,IAAK,wBAAwB,EAAE,MAAM,CAAC,KAAK;;sEAErD,8OAAC;4DAAO,OAAM;sEAAG;;;;;;wDAChB,SAAS,MAAM,CAAC,CAAA,KAAM,GAAG,QAAQ,CAAC,KAAK,KAAK,SAAS,GAAG,CAAC,CAAA,mBAAM,8OAAC;gEAA4B,OAAO,GAAG,QAAQ,CAAC,EAAE;0EAAG,GAAG,QAAQ,CAAC,SAAS;+DAA7D,GAAG,QAAQ,CAAC,EAAE;;;;;;;;;;;;;;;;;sDAGnG,8OAAC;4CAAI,WAAU;sDACV;;;;;;;;;;;;;;;;;;;;;;;;YAMzB,CAAC;;;;;;;AAGb"}},
    {"offset": {"line": 2122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}