{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,uCAAmC;;IAKnC;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/auth/AdminAuthGuard.tsx"],"sourcesContent":["// frontend/src/components/auth/AdminAuthGuard.tsx\r\n'use client';\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/contexts/AuthContext'; // Ajuste o caminho se o AuthContext estiver em outro lugar\r\n\r\nexport default function AdminAuthGuard({ children }: Readonly<{ children: React.ReactNode }>) {\r\n  const { loggedInAdmin, isLoadingAuth } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Não faz nada enquanto o estado de autenticação ainda está carregando do localStorage\r\n    if (isLoadingAuth) {\r\n      return;\r\n    }\r\n\r\n    // Se não estiver logado E o carregamento inicial do auth já terminou, redireciona\r\n    if (!loggedInAdmin && !isLoadingAuth) {\r\n      router.push('/empresas/login'); // Ou para /admin/login se preferir um ponto de entrada único\r\n    }\r\n  }, [loggedInAdmin, isLoadingAuth, router]);\r\n\r\n  // Se ainda estiver carregando o estado de autenticação ou se não estiver logado (e o redirecionamento vai acontecer),\r\n  // pode mostrar um loader ou nada para evitar flash de conteúdo.\r\n  if (isLoadingAuth || !loggedInAdmin) {\r\n    return <div className=\"page-container center-content\"><p>Verificando autorização...</p></div>;\r\n    // Ou return null; para não mostrar nada até o redirecionamento ocorrer.\r\n  }\r\n\r\n  // Se estiver logado, renderiza a página protegida\r\n  return <>{children}</>;\r\n}"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAElD;AACA;AACA,6NAAkD,2DAA2D;AAH7G;;;;;AAKe,SAAS,eAAe,EAAE,QAAQ,EAA2C;IAC1F,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uFAAuF;QACvF,IAAI,eAAe;YACjB;QACF;QAEA,kFAAkF;QAClF,IAAI,CAAC,iBAAiB,CAAC,eAAe;YACpC,OAAO,IAAI,CAAC,oBAAoB,6DAA6D;QAC/F;IACF,GAAG;QAAC;QAAe;QAAe;KAAO;IAEzC,sHAAsH;IACtH,gEAAgE;IAChE,IAAI,iBAAiB,CAAC,eAAe;QACnC,qBAAO,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;0BAAE;;;;;;;;;;;IACzD,wEAAwE;IAC1E;IAEA,kDAAkD;IAClD,qBAAO;kBAAG;;AACZ"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/charts/PizzaChart.tsx"],"sourcesContent":["// src/components/charts/PizzaChart.tsx\r\n'use client';\r\n\r\nimport { PieChart, Pie, Cell, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { useMemo } from 'react';\r\n\r\n// Tipos para os dados do nosso gráfico\r\ninterface ChartData {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ninterface PizzaChartProps {\r\n  data: { [key: string]: number };\r\n}\r\n\r\n// Cores para as fatias do gráfico. Você pode até pegar das suas variáveis CSS!\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF', '#FF1919'];\r\n\r\nconst CustomTooltip = ({ active, payload }: any) => {\r\n  if (active && payload && payload.length) {\r\n    const data = payload[0];\r\n    return (\r\n      <div className=\"p-2 bg-element-bg border border-main-border rounded-md shadow-lg\">\r\n        <p className=\"text-text-base\">{`${data.name} : ${data.value} (${(data.percent * 100).toFixed(0)}%)`}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport function PizzaChartComponent({ data }: PizzaChartProps) {\r\n  // Converte o objeto de dados para o formato que a Recharts espera\r\n  const chartData: ChartData[] = useMemo(() => {\r\n    return Object.entries(data).map(([name, value]) => ({ name, value }));\r\n  }, [data]);\r\n\r\n  if (chartData.length === 0) {\r\n    return <div className=\"text-center text-text-muted p-4\">Não há respostas para exibir.</div>;\r\n  }\r\n\r\n  return (\r\n    // ResponsiveContainer garante que o gráfico se ajuste ao tamanho do container pai\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <PieChart>\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend />\r\n        <Pie\r\n          data={chartData}\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          labelLine={false}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n          nameKey=\"name\"\r\n        >\r\n          {chartData.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,uCAAuC;;;;;AAIvC;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;AAeA,+EAA+E;AAC/E,MAAM,SAAS;IAAC;IAAW;IAAW;IAAW;IAAW;IAAW;CAAU;AAEjF,MAAM,gBAAgB,CAAC,EAAE,MAAM,EAAE,OAAO,EAAO;IAC7C,IAAI,UAAU,WAAW,QAAQ,MAAM,EAAE;QACvC,MAAM,OAAO,OAAO,CAAC,EAAE;QACvB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAE,WAAU;0BAAkB,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,OAAO,GAAG,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;;;;;;;;;;;IAGzG;IACA,OAAO;AACT;AAEO,SAAS,oBAAoB,EAAE,IAAI,EAAmB;IAC3D,kEAAkE;IAClE,MAAM,YAAyB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACrC,OAAO,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,MAAM,GAAK,CAAC;gBAAE;gBAAM;YAAM,CAAC;IACrE,GAAG;QAAC;KAAK;IAET,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,qBAAO,8OAAC;YAAI,WAAU;sBAAkC;;;;;;IAC1D;IAEA,OACE,kFAAkF;kBAClF,8OAAC,mKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;;8BACP,8OAAC,uJAAA,CAAA,UAAO;oBAAC,uBAAS,8OAAC;;;;;;;;;;8BACnB,8OAAC,sJAAA,CAAA,SAAM;;;;;8BACP,8OAAC,+IAAA,CAAA,MAAG;oBACF,MAAM;oBACN,IAAG;oBACH,IAAG;oBACH,WAAW;oBACX,aAAa;oBACb,MAAK;oBACL,SAAQ;oBACR,SAAQ;8BAEP,UAAU,GAAG,CAAC,CAAC,OAAO,sBACrB,8OAAC,oJAAA,CAAA,OAAI;4BAAuB,MAAM,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC;2BAApD,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;AAMtC"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/charts/WordCloud.tsx"],"sourcesContent":["// src/components/charts/WordCloud.tsx\r\n'use client';\r\n\r\nimport WordCloud from 'react-wordcloud';\r\nimport { useMemo } from 'react';\r\n\r\ninterface WordCloudProps {\r\n  textData: string[];\r\n}\r\n\r\n// Opções de customização da nuvem de palavras\r\nconst options = {\r\n  rotations: 2,\r\n  rotationAngles: [-90, 0] as [number, number],\r\n  fontSizes: [12, 60] as [number, number],\r\n  padding: 2,\r\n};\r\n\r\nexport function WordCloudComponent({ textData }: WordCloudProps) {\r\n    // Processa o texto para contar a frequência de cada palavra\r\n    const words = useMemo(() => {\r\n        const frequencyMap: { [key: string]: number } = {};\r\n        textData.forEach(text => {\r\n            // Separa as palavras, remove pontuação e palavras pequenas\r\n            const cleanedText = text.toLowerCase().replace(/[.,!?;:]/g, '');\r\n            const wordsInText = cleanedText.split(/\\s+/);\r\n\r\n            wordsInText.forEach(word => {\r\n                if (word.length > 3) { // Ignora palavras muito curtas\r\n                    frequencyMap[word] = (frequencyMap[word] || 0) + 1;\r\n                }\r\n            });\r\n        });\r\n\r\n        return Object.entries(frequencyMap).map(([text, value]) => ({ text, value }));\r\n    }, [textData]);\r\n\r\n    if (words.length === 0) {\r\n        return <div className=\"text-center text-text-muted p-4\">Não há respostas de texto para exibir.</div>;\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: 300, width: '100%' }}>\r\n            <WordCloud words={words} options={options} />\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"AAAA,sCAAsC;;;;;AAGtC;AACA;AAHA;;;;AASA,8CAA8C;AAC9C,MAAM,UAAU;IACd,WAAW;IACX,gBAAgB;QAAC,CAAC;QAAI;KAAE;IACxB,WAAW;QAAC;QAAI;KAAG;IACnB,SAAS;AACX;AAEO,SAAS,mBAAmB,EAAE,QAAQ,EAAkB;IAC3D,4DAA4D;IAC5D,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAClB,MAAM,eAA0C,CAAC;QACjD,SAAS,OAAO,CAAC,CAAA;YACb,2DAA2D;YAC3D,MAAM,cAAc,KAAK,WAAW,GAAG,OAAO,CAAC,aAAa;YAC5D,MAAM,cAAc,YAAY,KAAK,CAAC;YAEtC,YAAY,OAAO,CAAC,CAAA;gBAChB,IAAI,KAAK,MAAM,GAAG,GAAG;oBACjB,YAAY,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,IAAI;gBACrD;YACJ;QACJ;QAEA,OAAO,OAAO,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,MAAM,MAAM,GAAK,CAAC;gBAAE;gBAAM;YAAM,CAAC;IAC/E,GAAG;QAAC;KAAS;IAEb,IAAI,MAAM,MAAM,KAAK,GAAG;QACpB,qBAAO,8OAAC;YAAI,WAAU;sBAAkC;;;;;;IAC5D;IAEA,qBACI,8OAAC;QAAI,OAAO;YAAE,QAAQ;YAAK,OAAO;QAAO;kBACrC,cAAA,8OAAC,6JAAA,CAAA,UAAS;YAAC,OAAO;YAAO,SAAS;;;;;;;;;;;AAG9C"}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/questionarios/%5Bid%5D/page.tsx"],"sourcesContent":["// src/app/questionarios/[id]/page.tsx\r\n'use client';\r\n\r\nimport { useEffect, useState, Suspense, useMemo } from \"react\";\r\nimport api from \"@/services/api\";\r\nimport { useRouter, useParams } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport \"../../globals.css\";\r\nimport AdminAuthGuard from '@/components/auth/AdminAuthGuard';\r\nimport { PlusIcon, Trash2, BarChart, Edit, ArrowLeft, Eye } from \"lucide-react\";\r\nimport { PizzaChartComponent } from \"@/components/charts/PizzaChart\";\r\nimport { WordCloudComponent } from \"@/components/charts/WordCloud\";\r\n\r\n// --- Interfaces (Mantidas e adaptadas) ---\r\ninterface Opcao {\r\n    id?: number;\r\n    texto: string;\r\n    tempId?: string;\r\n}\r\ninterface PerguntaAninhada {\r\n    id?: number;\r\n    enunciado: string;\r\n    tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n    opcoes: Opcao[];\r\n    tempId?: string;\r\n}\r\ninterface QuePerg {\r\n    perguntaId?: number;\r\n    questionarioId: number;\r\n    pergunta: PerguntaAninhada;\r\n    id?: number;\r\n}\r\ninterface QuestionarioData {\r\n    id: number;\r\n    titulo: string;\r\n}\r\ninterface RespostaDetalhada {\r\n    id: number;\r\n    resposta: string;\r\n    pergunta: {\r\n        id: number;\r\n        enunciado: string;\r\n        tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n        opcoes: Opcao[];\r\n    };\r\n}\r\ninterface Respondente {\r\n    id: number;\r\n    status: string;\r\n    isFinalizado: boolean;\r\n    usuario?: { id: number; nome?: string | null; email: string };\r\n    anonymousSessionId?: string | null;\r\n    respostas: RespostaDetalhada[];\r\n    created_at: string;\r\n}\r\ninterface AvaliacaoComDetalhes {\r\n    id: number;\r\n    semestre: string;\r\n    descricao: string; // Adicionado para identificar melhor a avaliação\r\n    requerLoginCliente: boolean;\r\n    usuarios: Respondente[];\r\n    _count?: { usuarios: number };\r\n    created_at: string;\r\n}\r\n// Tipo para os dados processados dos gráficos\r\ntype ProcessedChartData = {\r\n    enunciado: string;\r\n    tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA';\r\n    respostas: { [key: string]: number } | string[];\r\n};\r\n\r\n\r\n// --- Componente da Página ---\r\nexport default function EditQuestionarioPage() {\r\n    return (\r\n        <Suspense fallback={<div className=\"page-container center-content\"><p>Carregando...</p></div>}>\r\n            <AdminAuthGuard>\r\n                <EditQuestionarioFormContent />\r\n            </AdminAuthGuard>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\n// --- Componente de Conteúdo Principal ---\r\nfunction EditQuestionarioFormContent() {\r\n    const router = useRouter();\r\n    const params = useParams();\r\n    const questionarioId = Number(params.id);\r\n\r\n    // Estados para edição\r\n    const [titulo, setTitulo] = useState(\"\");\r\n    const [quePergs, setQuePergs] = useState<QuePerg[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    // Estados para visualização\r\n    const [viewMode, setViewMode] = useState<'editar' | 'respostas'>('editar');\r\n    const [respostasSubView, setRespostasSubView] = useState<'dashboard' | 'individuais'>('dashboard');\r\n    const [avaliacoesComRespostas, setAvaliacoesComRespostas] = useState<AvaliacaoComDetalhes[]>([]);\r\n    const [isLoadingRespostas, setIsLoadingRespostas] = useState(false);\r\n    const [filtroAvaliacaoId, setFiltroAvaliacaoId] = useState<string>('all'); // 'all' ou o ID da avaliação\r\n\r\n    // --- Lógica de Carregamento e Manipulação de Dados ---\r\n    useEffect(() => {\r\n        // ... (Sua lógica para carregar o questionário para edição - sem alterações)\r\n        if (!questionarioId) {\r\n            setError(\"ID do Questionário não encontrado.\");\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        const loadData = async () => {\r\n            try {\r\n                const respQuestionario = await api.get<QuestionarioData>(`/questionarios/${questionarioId}`);\r\n                setTitulo(respQuestionario.data.titulo);\r\n                const respQuePerg = await api.get<QuePerg[]>(`/quePerg?questionarioId=${questionarioId}`);\r\n                const sanitizedQuePergs = respQuePerg.data.map(qp => ({...qp, pergunta: {...qp.pergunta, opcoes: (qp.pergunta.opcoes || []).map(opt => ({...opt }))}}));\r\n                setQuePergs(sanitizedQuePergs);\r\n            } catch (err: any) {\r\n                setError(\"Falha ao carregar dados para edição.\");\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        loadData();\r\n    }, [questionarioId]);\r\n\r\n    useEffect(() => {\r\n        // Busca os dados das respostas quando a aba é aberta\r\n        if (viewMode === 'respostas' && questionarioId) {\r\n            setIsLoadingRespostas(true);\r\n            setError(null);\r\n            api.get<AvaliacaoComDetalhes[]>(`/questionarios/${questionarioId}/avaliacoes-com-respostas`)\r\n                .then(response => {\r\n                    setAvaliacoesComRespostas(response.data.sort((a,b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime()));\r\n                })\r\n                .catch(err => {\r\n                    setError(\"Erro ao buscar dados das respostas.\");\r\n                })\r\n                .finally(() => {\r\n                    setIsLoadingRespostas(false);\r\n                });\r\n        }\r\n    }, [viewMode, questionarioId]);\r\n\r\n    // --- Lógica de processamento dos dados para o Dashboard ---\r\n    const dadosProcessadosParaDashboard = useMemo((): [number, ProcessedChartData][] => {\r\n        if (avaliacoesComRespostas.length === 0) return [];\r\n    \r\n        const avaliacoesFiltradas = filtroAvaliacaoId === 'all'\r\n            ? avaliacoesComRespostas\r\n            : avaliacoesComRespostas.filter(av => av.id === Number(filtroAvaliacaoId));\r\n\r\n        const dadosAgregados = new Map<number, ProcessedChartData>();\r\n\r\n        for (const avaliacao of avaliacoesFiltradas) {\r\n            for (const respondente of avaliacao.usuarios) {\r\n                for (const resposta of respondente.respostas) {\r\n                    const { pergunta } = resposta;\r\n                    if (!pergunta) continue;\r\n\r\n                    if (!dadosAgregados.has(pergunta.id)) {\r\n                        dadosAgregados.set(pergunta.id, {\r\n                            enunciado: pergunta.enunciado,\r\n                            tipos: pergunta.tipos,\r\n                            respostas: pergunta.tipos === 'MULTIPLA_ESCOLHA' ? {} : [],\r\n                        });\r\n                    }\r\n\r\n                    const dadosPergunta = dadosAgregados.get(pergunta.id)!;\r\n                    if (dadosPergunta.tipos === 'MULTIPLA_ESCOLHA') {\r\n                        const resps = dadosPergunta.respostas as { [key: string]: number };\r\n                        resps[resposta.resposta] = (resps[resposta.resposta] || 0) + 1;\r\n                    } else {\r\n                        (dadosPergunta.respostas as string[]).push(resposta.resposta);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Array.from(dadosAgregados.entries());\r\n    }, [avaliacoesComRespostas, filtroAvaliacaoId]);\r\n\r\n    const kpis = useMemo(() => {\r\n        const avaliacoesFiltradas = filtroAvaliacaoId === 'all'\r\n            ? avaliacoesComRespostas\r\n            : avaliacoesComRespostas.filter(av => av.id === Number(filtroAvaliacaoId));\r\n        \r\n        let totalRespondentes = 0;\r\n        let finalizados = 0;\r\n\r\n        avaliacoesFiltradas.forEach(av => {\r\n            totalRespondentes += av.usuarios.length;\r\n            av.usuarios.forEach(u => {\r\n                if (u.isFinalizado) finalizados++;\r\n            });\r\n        });\r\n\r\n        const taxaConclusao = totalRespondentes > 0 ? (finalizados / totalRespondentes * 100).toFixed(1) : '0.0';\r\n\r\n        return { totalRespondentes, finalizados, taxaConclusao };\r\n    }, [avaliacoesComRespostas, filtroAvaliacaoId]);\r\n\r\n\r\n    // --- Funções de manipulação do formulário (sem alterações) ---\r\n    const handlePerguntaChange = (qIndex: number, novoEnunciado: string) => setQuePergs(prev => prev.map((qp, i) => i === qIndex ? {...qp, pergunta: {...qp.pergunta, enunciado: novoEnunciado}} : qp));\r\n    const handleTipoChange = (qIndex: number, novoTipo: 'TEXTO' | 'MULTIPLA_ESCOLHA') => setQuePergs(prev => prev.map((qp, i) => i === qIndex ? {...qp, pergunta: {...qp.pergunta, tipos: novoTipo, opcoes: novoTipo === 'TEXTO' ? [] : qp.pergunta.opcoes.length > 0 ? qp.pergunta.opcoes : [{texto: '', tempId: `opt-0`}]}} : qp));\r\n    const handleOptionChange = (qIndex: number, oIndex: number, novoTexto: string) => setQuePergs(prev => prev.map((qp, i) => i === qIndex ? {...qp, pergunta: {...qp.pergunta, opcoes: qp.pergunta.opcoes.map((o, oi) => oi === oIndex ? {...o, texto: novoTexto} : o)}} : qp));\r\n    const addOptionToList = (qIndex: number) => setQuePergs(prev => prev.map((qp, i) => i === qIndex ? {...qp, pergunta: {...qp.pergunta, opcoes: [...qp.pergunta.opcoes, {texto: '', tempId: `opt-${qp.pergunta.opcoes.length}`}]}} : qp));\r\n    const removeOption = (qIndex: number, oIndex: number) => setQuePergs(prev => prev.map((qp, i) => i === qIndex ? {...qp, pergunta: {...qp.pergunta, opcoes: qp.pergunta.opcoes.filter((_, oi) => oi !== oIndex)}} : qp));\r\n    const handleAddNewPergunta = () => setQuePergs(prev => [...prev, { questionarioId, pergunta: { enunciado: '', tipos: 'TEXTO', opcoes: [], tempId: `new-${Date.now()}`}}]);\r\n    const handleSaveChanges = async (e: React.FormEvent) => { /* ... sua lógica de salvar ... */\r\n        e.preventDefault();\r\n        // Sua lógica para salvar as perguntas e o título continua aqui\r\n        alert(\"Lógica de salvar executada!\");\r\n     };\r\n\r\n    // --- Renderização do Loading e Erro Inicial ---\r\n    if (isLoading) return <div className=\"page-container center-content\"><p>Carregando dados do questionário...</p></div>;\r\n    if (error && !titulo) return <div className=\"page-container center-content\"><p className=\"error-message\">{error}</p></div>;\r\n    \r\n    // --- Renderização Principal ---\r\n    return (\r\n        <div className=\"page-container\">\r\n            {/* Cabeçalho Fixo com Título e Navegação */}\r\n            <div className=\"flex items-center justify-between mb-4 pb-4 border-b border-border\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <button onClick={() => router.push('/questionarios')} className=\"btn btn-icon\">\r\n                        <ArrowLeft size={20} />\r\n                    </button>\r\n                    <h2 className=\"text-2xl font-bold text-foreground\">{titulo}</h2>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                    <button onClick={() => setViewMode('editar')} className={`btn ${viewMode === 'editar' ? 'btn-primary' : 'btn-outline'}`}><Edit size={16} className=\"mr-2\"/>Configurar</button>\r\n                    <button onClick={() => setViewMode('respostas')} className={`btn ${viewMode === 'respostas' ? 'btn-primary' : 'btn-outline'}`}><BarChart size={16} className=\"mr-2\"/>Visualizar Respostas</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* View de Edição */}\r\n            {viewMode === 'editar' && (\r\n                <form onSubmit={handleSaveChanges} className=\"editor-form-card\">\r\n                    {/* ... (Todo o seu JSX para o formulário de edição vai aqui, sem alterações) ... */}\r\n                    <p className=\"text-center p-8 bg-gray-100 rounded-md\">Seu formulário de edição de perguntas e título aparece aqui.</p>\r\n                </form>\r\n            )}\r\n\r\n            {/* View de Respostas com Dashboards */}\r\n            {viewMode === 'respostas' && (\r\n                <div>\r\n                    {isLoadingRespostas && <p className=\"text-center py-8\">Carregando dashboards...</p>}\r\n                    {!isLoadingRespostas && error && <p className=\"text-center py-8 error-message\">{error}</p>}\r\n                    {!isLoadingRespostas && avaliacoesComRespostas.length === 0 && !error &&\r\n                        <div className=\"text-center py-10 px-4 bg-element-bg rounded-lg shadow-md mt-6\">\r\n                            <BarChart className=\"mx-auto h-12 w-12 text-text-muted\" />\r\n                            <h3 className=\"mt-2 text-sm font-medium text-text-base\">Sem Dados de Respostas</h3>\r\n                            <p className=\"mt-1 text-sm text-text-muted\">Nenhuma resposta foi submetida para este questionário ainda.</p>\r\n                        </div>\r\n                    }\r\n\r\n                    {!isLoadingRespostas && avaliacoesComRespostas.length > 0 && (\r\n                        <>\r\n                            {/* Header do Dashboard com Filtros */}\r\n                            <div className=\"flex flex-col sm:flex-row items-center justify-between mb-6 p-4 bg-element-bg rounded-lg border border-border\">\r\n                                <div className=\"flex items-center gap-4\">\r\n                                    <label htmlFor=\"filtro-avaliacao\" className=\"font-medium text-text-base\">Analisar Avaliação:</label>\r\n                                    <select\r\n                                        id=\"filtro-avaliacao\"\r\n                                        value={filtroAvaliacaoId}\r\n                                        onChange={(e) => setFiltroAvaliacaoId(e.target.value)}\r\n                                        className=\"select-field\" // Use sua classe de select global\r\n                                    >\r\n                                        <option value=\"all\">Todas as Avaliações</option>\r\n                                        {avaliacoesComRespostas.map(av => (\r\n                                            <option key={av.id} value={av.id}>\r\n                                                {av.semestre} - {av.descricao || `(ID: ${av.id})`}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <button onClick={() => setRespostasSubView(respostasSubView === 'dashboard' ? 'individuais' : 'dashboard')} className=\"btn btn-secondary mt-3 sm:mt-0\">\r\n                                    <Eye size={16} className=\"mr-2\"/>\r\n                                    {respostasSubView === 'dashboard' ? 'Ver Respostas Individuais' : 'Ver Dashboard Agregado'}\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* Sub-view do Dashboard Agregado */}\r\n                            {respostasSubView === 'dashboard' && (\r\n                                <>\r\n                                    {/* KPIs */}\r\n                                    <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6\">\r\n                                        <div className=\"kpi-card\"><span className=\"kpi-value\">{kpis.totalRespondentes}</span><span className=\"kpi-label\">Total de Respostas</span></div>\r\n                                        <div className=\"kpi-card\"><span className=\"kpi-value\">{kpis.finalizados}</span><span className=\"kpi-label\">Respostas Finalizadas</span></div>\r\n                                        <div className=\"kpi-card\"><span className=\"kpi-value\">{kpis.taxaConclusao}%</span><span className=\"kpi-label\">Taxa de Conclusão</span></div>\r\n                                    </div>\r\n                                    {/* Gráficos */}\r\n                                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                                        {dadosProcessadosParaDashboard.map(([perguntaId, dados]) => (\r\n                                            <div key={perguntaId} className=\"chart-card\">\r\n                                                <h4 className=\"chart-title\">{dados.enunciado}</h4>\r\n                                                {dados.tipos === 'MULTIPLA_ESCOLHA' ? (\r\n                                                    <PizzaChartComponent data={dados.respostas as { [key: string]: number }} />\r\n                                                ) : (\r\n                                                    <WordCloudComponent textData={dados.respostas as string[]} />\r\n                                                )}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n\r\n                            {/* Sub-view das Respostas Individuais (Sua lógica original) */}\r\n                            {respostasSubView === 'individuais' && (\r\n                                <div className=\"space-y-4\">\r\n                                     <h3 className=\"text-xl font-semibold\">Respostas Individuais</h3>\r\n                                     {/* A sua lógica de listar por semestre e depois por respondente vai aqui */}\r\n                                     <p className=\"p-4 bg-gray-100 rounded-md text-center\">A lista detalhada de respostas individuais apareceria aqui.</p>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1086, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}