{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/auth/AdminAuthGuard.tsx"],"sourcesContent":["// frontend/src/components/auth/AdminAuthGuard.tsx\r\n'use client';\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/contexts/AuthContext'; // Ajuste o caminho se o AuthContext estiver em outro lugar\r\n\r\nexport default function AdminAuthGuard({ children }: Readonly<{ children: React.ReactNode }>) {\r\n  const { loggedInAdmin, isLoadingAuth } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Não faz nada enquanto o estado de autenticação ainda está carregando do localStorage\r\n    if (isLoadingAuth) {\r\n      return;\r\n    }\r\n\r\n    // Se não estiver logado E o carregamento inicial do auth já terminou, redireciona\r\n    if (!loggedInAdmin && !isLoadingAuth) {\r\n      router.push('/empresas/login'); // Ou para /admin/login se preferir um ponto de entrada único\r\n    }\r\n  }, [loggedInAdmin, isLoadingAuth, router]);\r\n\r\n  // Se ainda estiver carregando o estado de autenticação ou se não estiver logado (e o redirecionamento vai acontecer),\r\n  // pode mostrar um loader ou nada para evitar flash de conteúdo.\r\n  if (isLoadingAuth || !loggedInAdmin) {\r\n    return <div className=\"page-container center-content\"><p>Verificando autorização...</p></div>;\r\n    // Ou return null; para não mostrar nada até o redirecionamento ocorrer.\r\n  }\r\n\r\n  // Se estiver logado, renderiza a página protegida\r\n  return <>{children}</>;\r\n}"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAElD;AACA;AACA,6NAAkD,2DAA2D;AAH7G;;;;;AAKe,SAAS,eAAe,EAAE,QAAQ,EAA2C;IAC1F,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uFAAuF;QACvF,IAAI,eAAe;YACjB;QACF;QAEA,kFAAkF;QAClF,IAAI,CAAC,iBAAiB,CAAC,eAAe;YACpC,OAAO,IAAI,CAAC,oBAAoB,6DAA6D;QAC/F;IACF,GAAG;QAAC;QAAe;QAAe;KAAO;IAEzC,sHAAsH;IACtH,gEAAgE;IAChE,IAAI,iBAAiB,CAAC,eAAe;QACnC,qBAAO,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;0BAAE;;;;;;;;;;;IACzD,wEAAwE;IAC1E;IAEA,kDAAkD;IAClD,qBAAO;kBAAG;;AACZ"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,uCAAmC;;IAKnC;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/questionarios/create/page.tsx"],"sourcesContent":["// frontend/src/app/questionarios/create/page.tsx (VERSÃO UNIFICADA)\r\n'use client';\r\n\r\nimport { useState, Suspense } from \"react\"; // Adicionado Suspense\r\nimport AdminAuthGuard from '@/components/auth/AdminAuthGuard';\r\nimport api from \"@/services/api\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport \"../../globals.css\"; // Caminho para o globals.css\r\nimport \"../../questionario.css\"; // Seu CSS específico para questionários\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport Link from \"next/link\"; // Para o botão Voltar\r\n\r\n// Componente com o conteúdo da página de criação\r\nfunction CreateQuestionarioContent() {\r\n  const [titulo, setTitulo] = useState(\"\");\r\n  const router = useRouter();\r\n  const { loggedInAdmin } = useAuth(); // Pega o admin logado do contexto\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n\r\n  const handleNewQuestionario = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setError(null);\r\n\r\n    if (!titulo.trim()) {\r\n      setError(\"O título não pode estar vazio.\");\r\n      return;\r\n    }\r\n    if (!loggedInAdmin) {\r\n      setError(\"Você precisa estar logado como administrador para criar um questionário.\");\r\n      // O AdminAuthGuard já deve ter prevenido isso, mas é uma segurança extra.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    // O backend agora pega o criadorId do token (via req.user.usuarioId),\r\n    // então só precisamos enviar o título.\r\n    const data = {\r\n      titulo: titulo.trim(),\r\n    };\r\n\r\n    try {\r\n      await api.post(\"/questionarios\", data); // O token já é enviado pelo interceptor\r\n      alert(\"Questionário cadastrado com sucesso!\");\r\n      router.push(\"/questionarios\"); // Redireciona para a lista após o sucesso\r\n    } catch (err: any) {\r\n      console.error(\"Erro no frontend ao cadastrar questionário:\", err.response?.data || err.message);\r\n      if (err.response?.data?.message) {\r\n        setError(err.response.data.message);\r\n      } else {\r\n        setError(\"Erro ao cadastrar o questionário!\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setTitulo(\"\");\r\n    setError(null);\r\n  }\r\n\r\n  return (\r\n    // Usando as classes de estilização que definimos no globals.css\r\n    // A classe 'Create' do seu CSS original pode ser mapeada para 'editor-form-card' ou uma nova.\r\n    // Vou usar a estrutura do editor-form-card para consistência.\r\n    <div className=\"page-container\"> {/* Para centralizar e dar padding */}\r\n      <div className=\"editor-form-card\" style={{maxWidth: '700px'}}> {/* Card do formulário */}\r\n        <div className=\"form-header\">\r\n            <h3>Cadastro de Novo Questionário</h3>\r\n            {/* Pode adicionar botões de ação no header aqui se quiser */}\r\n        </div>\r\n        \r\n        <form onSubmit={handleNewQuestionario} className=\"display-section\"> {/* display-section para padding */}\r\n          {error && <p style={{ color: 'red', marginBottom: '1rem', textAlign: 'center' }}>{error}</p>}\r\n          \r\n          <div className=\"form-group\"> {/* Do seu CSS original, ou use o novo .form-label + input */}\r\n            <label htmlFor=\"titulo\" className=\"form-label\">Título do Questionário</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titulo\"\r\n              value={titulo}\r\n              onChange={(e) => setTitulo(e.target.value)}\r\n              required\r\n              minLength={3}\r\n              placeholder=\"Digite o título do questionário\"\r\n              className=\"input-edit-mode title-input\" // Sua classe ou a global para inputs\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n          <div className=\"form-header-actions\" style={{ justifyContent: 'flex-start', paddingTop: 'var(--spacing-lg)', borderTop: '1px solid var(--border-color)'}}>\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={isLoading}>\r\n              {isLoading ? \"Cadastrando...\" : \"Cadastrar\"}\r\n            </button>\r\n            <button type=\"button\" onClick={handleReset} className=\"btn btn-secondary\" disabled={isLoading}>\r\n              Limpar\r\n            </button>\r\n            <Link href=\"/questionarios\" className=\"btn btn-outline\"> {/* Usando btn-outline para Voltar */}\r\n                Cancelar / Voltar\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Componente de página que exportamos como padrão\r\nexport default function CreateQuestionarioPage() {\r\n  return (\r\n    // Suspense pode não ser estritamente necessário aqui se CreateQuestionarioContent não usar useSearchParams\r\n    // mas não prejudica.\r\n    <Suspense fallback={<div className=\"page-container center-content\"><p>Carregando...</p></div>}>\r\n      <AdminAuthGuard>\r\n        <CreateQuestionarioContent />\r\n      </AdminAuthGuard>\r\n    </Suspense>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}