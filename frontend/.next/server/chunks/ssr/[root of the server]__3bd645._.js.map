{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/services/api.ts"],"sourcesContent":["// frontend/src/services/api.ts\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4444\",\r\n});\r\n\r\n// --- NOVO: Interceptor para adicionar o token JWT ---\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Verifica se estamos no ambiente do navegador antes de tentar acessar o localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(new Error(error?.message ?? String(error)));\r\n  }\r\n);\r\n// --------------------------------------------------\r\n\r\nexport default api;"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,uDAAuD;AACvD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,OAAO;IACL,sFAAsF;IACtF,uCAAmC;;IAKnC;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM,OAAO,WAAW,OAAO;AAC3D;uCAIa"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/components/auth/AdminAuthGuard.tsx"],"sourcesContent":["// frontend/src/components/auth/AdminAuthGuard.tsx\r\n'use client';\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/contexts/AuthContext'; // Ajuste o caminho se o AuthContext estiver em outro lugar\r\n\r\nexport default function AdminAuthGuard({ children }: Readonly<{ children: React.ReactNode }>) {\r\n  const { loggedInAdmin, isLoadingAuth } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Não faz nada enquanto o estado de autenticação ainda está carregando do localStorage\r\n    if (isLoadingAuth) {\r\n      return;\r\n    }\r\n\r\n    // Se não estiver logado E o carregamento inicial do auth já terminou, redireciona\r\n    if (!loggedInAdmin && !isLoadingAuth) {\r\n      router.push('/empresas/login'); // Ou para /admin/login se preferir um ponto de entrada único\r\n    }\r\n  }, [loggedInAdmin, isLoadingAuth, router]);\r\n\r\n  // Se ainda estiver carregando o estado de autenticação ou se não estiver logado (e o redirecionamento vai acontecer),\r\n  // pode mostrar um loader ou nada para evitar flash de conteúdo.\r\n  if (isLoadingAuth || !loggedInAdmin) {\r\n    return <div className=\"page-container center-content\"><p>Verificando autorização...</p></div>;\r\n    // Ou return null; para não mostrar nada até o redirecionamento ocorrer.\r\n  }\r\n\r\n  // Se estiver logado, renderiza a página protegida\r\n  return <>{children}</>;\r\n}"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAElD;AACA;AACA,6NAAkD,2DAA2D;AAH7G;;;;;AAKe,SAAS,eAAe,EAAE,QAAQ,EAA2C;IAC1F,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uFAAuF;QACvF,IAAI,eAAe;YACjB;QACF;QAEA,kFAAkF;QAClF,IAAI,CAAC,iBAAiB,CAAC,eAAe;YACpC,OAAO,IAAI,CAAC,oBAAoB,6DAA6D;QAC/F;IACF,GAAG;QAAC;QAAe;QAAe;KAAO;IAEzC,sHAAsH;IACtH,gEAAgE;IAChE,IAAI,iBAAiB,CAAC,eAAe;QACnC,qBAAO,8OAAC;YAAI,WAAU;sBAAgC,cAAA,8OAAC;0BAAE;;;;;;;;;;;IACzD,wEAAwE;IAC1E;IAEA,kDAAkD;IAClD,qBAAO;kBAAG;;AACZ"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/andre/OneDrive/%C3%81rea%20de%20Trabalho/Nova%20pasta/TCC-1-Avaliacao-de-Sistemas/frontend/src/app/perguntas/update/%5Bid%5D/page.tsx"],"sourcesContent":["// frontend/src/app/perguntas/update/[id]/page.tsx (VERSÃO MELHORADA)\r\n'use client';\r\n\r\nimport { useEffect, useState, Suspense } from \"react\";\r\nimport api from \"@/services/api\";\r\nimport { useRouter, useParams } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport \"../../../globals.css\"; // Seu globals.css unificado\r\nimport AdminAuthGuard from '@/components/auth/AdminAuthGuard';\r\nimport { PlusIcon, Trash2, Save, AlertTriangle, CheckCircle2, Loader2 } from 'lucide-react'; // Ícones\r\n\r\n// Interface para a pergunta como recebida da API (incluindo opções)\r\ninterface PerguntaComOpcoes {\r\n    id: number;\r\n    enunciado: string;\r\n    tipos: 'TEXTO' | 'MULTIPLA_ESCOLHA'; // Permitindo string para flexibilidade inicial\r\n    opcoes?: { id: number; texto: string }[]; // Opções podem vir do backend\r\n    created_at?: string;\r\n    updated_at?: string;\r\n}\r\n\r\n// Interface para o estado local das opções (pode incluir tempId para novas opções)\r\ninterface OpcaoEditData {\r\n    id?: number; // ID da opção existente no backend\r\n    tempId?: string; // ID temporário para novas opções no frontend\r\n    texto: string;\r\n}\r\n\r\nfunction UpdatePerguntaContent() {\r\n    const router = useRouter();\r\n    const params = useParams();\r\n    const perguntaId = params.id ? parseInt(params.id as string) : null;\r\n\r\n    const [enunciado, setEnunciado] = useState(\"\");\r\n    const [tipos, setTipos] = useState<'TEXTO' | 'MULTIPLA_ESCOLHA'>('TEXTO');\r\n    const [opcoes, setOpcoes] = useState<OpcaoEditData[]>([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(false); // Para submissão do formulário\r\n    const [isPageLoading, setIsPageLoading] = useState(true); // Para carregamento inicial dos dados\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (!perguntaId) {\r\n            setError(\"ID da Pergunta não fornecido na URL.\");\r\n            setIsPageLoading(false);\r\n            return;\r\n        }\r\n\r\n        setIsPageLoading(true);\r\n        setError(null);\r\n        api.get<PerguntaComOpcoes>(`/perguntas/${perguntaId}`)\r\n            .then((response) => {\r\n                const perguntaData = response.data;\r\n                setEnunciado(perguntaData.enunciado);\r\n                setTipos(perguntaData.tipos as 'TEXTO' ?? 'MULTIPLA_ESCOLHA'); // Cast para o tipo esperado\r\n                setOpcoes(perguntaData.opcoes?.map(opt => ({ id: opt.id, texto: opt.texto })) || []);\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"Erro ao buscar a pergunta:\", err.response?.data ?? err.message);\r\n                setError(err.response?.data?.message ?? \"Erro ao buscar os dados da pergunta para edição.\");\r\n            })\r\n            .finally(() => {\r\n                setIsPageLoading(false);\r\n            });\r\n    }, [perguntaId]);\r\n\r\n\r\n    // Funções para manipular opções de múltipla escolha (similares à página de create)\r\n    const handleAddOpcao = () => {\r\n        setOpcoes([...opcoes, { tempId: `temp-${Date.now()}`, texto: \"\" }]);\r\n    };\r\n\r\n    const handleOpcaoChange = (index: number, texto: string) => {\r\n        const novasOpcoes = [...opcoes];\r\n        novasOpcoes[index].texto = texto;\r\n        setOpcoes(novasOpcoes);\r\n    };\r\n\r\n    const handleRemoveOpcao = (index: number) => {\r\n        // Se a opção tiver um ID real (do backend), precisaremos tratar a exclusão dela\r\n        // de forma diferente na submissão se o backend não fizer cascade/gerenciamento automático.\r\n        // Por ora, apenas remove do estado local. O backend (UpdatePerguntasController)\r\n        // já deleta todas as opções antigas e recria as novas.\r\n        setOpcoes(opcoes.filter((_, i) => i !== index));\r\n    };\r\n    \r\n    const handleTipoChange = (novoTipo: 'TEXTO' | 'MULTIPLA_ESCOLHA') => {\r\n        setTipos(novoTipo);\r\n        if (novoTipo === 'TEXTO') {\r\n            setOpcoes([]);\r\n        } else if (opcoes.length === 0 && novoTipo === 'MULTIPLA_ESCOLHA') {\r\n             // Adiciona uma opção inicial se mudar para MULTIPLA_ESCOLHA e não houver opções\r\n            handleAddOpcao();\r\n        }\r\n    };\r\n\r\n\r\n    const handleUpdatePergunta = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        setError(null);\r\n        setSuccessMessage(null);\r\n\r\n        if (!enunciado.trim()) {\r\n            setError(\"O enunciado da pergunta é obrigatório.\");\r\n            return;\r\n        }\r\n        if (tipos === 'MULTIPLA_ESCOLHA' && (opcoes.length === 0 || opcoes.some(opt => !opt.texto.trim()))) {\r\n            setError(\"Para perguntas de múltipla escolha, adicione pelo menos uma opção com texto.\");\r\n            return;\r\n        }\r\n        if (!perguntaId) {\r\n            setError(\"ID da pergunta inválido para atualização.\");\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        const dataPayload = {\r\n            id: perguntaId,\r\n            enunciado: enunciado.trim(),\r\n            tipos,\r\n            // No backend, o UpdatePerguntasController espera um array de objetos { texto: string } para 'opcoes'\r\n            // Ele vai deletar as opções antigas e criar essas novas.\r\n            opcoes: tipos === 'MULTIPLA_ESCOLHA' ? opcoes.map(opt => ({ texto: opt.texto.trim() })) : [],\r\n        };\r\n\r\n        try {\r\n            await api.put(\"/perguntas\", dataPayload); // Rota PUT para /perguntas, envia ID no corpo\r\n            setSuccessMessage(\"Pergunta atualizada com sucesso! Redirecionando...\");\r\n            setTimeout(() => {\r\n                router.push(\"/perguntas\");\r\n            }, 2000);\r\n        } catch (err: any) {\r\n            console.error(\"Erro ao atualizar pergunta:\", err.response?.data ?? err.message);\r\n            setError(err.response?.data?.message ?? \"Erro ao atualizar a pergunta. Tente novamente.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    \r\n    if (isPageLoading) {\r\n        return (\r\n            <div className=\"page-container flex items-center justify-center min-h-[calc(100vh-12rem)]\">\r\n                <div className=\"flex flex-col items-center\">\r\n                    <Loader2 size={48} className=\"text-primary animate-spin mb-4\" />\r\n                    <p className=\"text-text-muted text-lg\">Carregando dados da pergunta...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error && !enunciado) { // Erro crítico ao carregar os dados iniciais\r\n        return (\r\n             <div className=\"page-container center-content text-center\">\r\n                <AlertTriangle size={48} className=\"text-error mx-auto mb-4\" />\r\n                <p className=\"text-xl font-semibold text-error mb-2\">Erro ao carregar pergunta</p>\r\n                <p className=\"text-text-muted mb-6\">{error}</p>\r\n                <Link href=\"/perguntas\" className=\"btn btn-primary\">\r\n                    Voltar para Lista de Perguntas\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <div className=\"editor-form-card\" style={{ maxWidth: '700px' }}>\r\n                <div className=\"form-header\">\r\n                    <h3>Editando Pergunta (ID: {perguntaId})</h3>\r\n                    <Link href=\"/perguntas\" className=\"btn btn-outline btn-sm\">\r\n                        Cancelar Edição\r\n                    </Link>\r\n                </div>\r\n\r\n                <form onSubmit={handleUpdatePergunta} className=\"display-section space-y-6\">\r\n                    {error && !successMessage && ( // Mostrar erro apenas se não houver mensagem de sucesso\r\n                        <div className=\"p-3 text-sm text-red-700 bg-red-100 rounded-lg border border-red-300 dark:bg-red-900/30 dark:text-red-300 dark:border-red-700 flex items-center\" role=\"alert\">\r\n                            <AlertTriangle size={18} className=\"mr-2 flex-shrink-0\" />\r\n                            <span className=\"font-medium\">Erro:</span> {error}\r\n                        </div>\r\n                    )}\r\n                    {successMessage && (\r\n                        <div className=\"p-3 text-sm text-green-700 bg-green-100 rounded-lg border border-green-300 dark:bg-green-700/30 dark:text-green-300 dark:border-green-700 flex items-center\" role=\"alert\">\r\n                            <CheckCircle2 size={18} className=\"mr-2 flex-shrink-0\" />\r\n                            {successMessage}\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"enunciado\" className=\"form-label\">Enunciado da Pergunta</label>\r\n                        <textarea\r\n                            id=\"enunciado\"\r\n                            value={enunciado}\r\n                            onChange={e => setEnunciado(e.target.value)}\r\n                            rows={3}\r\n                            className=\"input-edit-mode question-textarea\"\r\n                            placeholder=\"Digite o enunciado completo da pergunta...\"\r\n                            required\r\n                            disabled={isLoading || isPageLoading}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"tipo\" className=\"form-label\">Tipo de Pergunta</label>\r\n                        <select\r\n                            id=\"tipo\"\r\n                            value={tipos}\r\n                            onChange={(e) => handleTipoChange(e.target.value as 'TEXTO' | 'MULTIPLA_ESCOLHA')}\r\n                            className=\"input-edit-mode\"\r\n                            disabled={isLoading || isPageLoading}\r\n                        >\r\n                            <option value=\"TEXTO\">Texto Dissertativo</option>\r\n                            <option value=\"MULTIPLA_ESCOLHA\">Múltipla Escolha</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {tipos === 'MULTIPLA_ESCOLHA' && (\r\n                        <fieldset className=\"form-group border-t border-border pt-4 mt-4\">\r\n                            <legend className=\"form-label mb-2\">Opções de Resposta</legend>\r\n                            <div className=\"space-y-3\">\r\n                                {opcoes.map((opcao, index) => (\r\n                                    <div key={opcao.id ?? opcao.tempId ?? index} className=\"flex items-center space-x-2\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={opcao.texto}\r\n                                            onChange={(e) => handleOpcaoChange(index, e.target.value)}\r\n                                            placeholder={`Texto da Opção ${index + 1}`}\r\n                                            className=\"input-edit-mode flex-grow\"\r\n                                            required\r\n                                            disabled={isLoading || isPageLoading}\r\n                                        />\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={() => handleRemoveOpcao(index)}\r\n                                            className=\"btn btn-danger btn-sm p-2\"\r\n                                            title=\"Remover Opção\"\r\n                                            disabled={isLoading || isPageLoading}\r\n                                        >\r\n                                            <Trash2 size={16} />\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleAddOpcao}\r\n                                className=\"btn btn-outline btn-sm mt-3 inline-flex items-center\"\r\n                                disabled={isLoading || isPageLoading}\r\n                            >\r\n                                <PlusIcon size={16} className=\"mr-1\" /> Adicionar Opção\r\n                            </button>\r\n                        </fieldset>\r\n                    )}\r\n\r\n                    <div className=\"form-actions pt-4 border-t border-border\">\r\n                         <Link href=\"/perguntas\" className=\"btn btn-secondary\" aria-disabled={isLoading}>\r\n                            Voltar\r\n                        </Link>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary inline-flex items-center\"\r\n                            disabled={isLoading || isPageLoading}\r\n                        >\r\n                            {isLoading ? (\r\n                                <>\r\n                                    <Loader2 size={18} className=\"animate-spin mr-2\"/>\r\n                                    Salvando...\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                   <Save size={16} className=\"mr-2\"/>\r\n                                    Salvar Alterações\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default function UpdatePerguntaPage() {\r\n    return (\r\n        <Suspense fallback={\r\n            <div className=\"page-container flex items-center justify-center min-h-[calc(100vh-12rem)]\">\r\n                 <div className=\"flex flex-col items-center\">\r\n                    <Loader2 size={48} className=\"text-primary animate-spin mb-4\" />\r\n                    <p className=\"text-text-muted text-lg\">Carregando formulário de edição...</p>\r\n                </div>\r\n            </div>\r\n        }>\r\n            <AdminAuthGuard>\r\n                <UpdatePerguntaContent />\r\n            </AdminAuthGuard>\r\n        </Suspense>\r\n    );\r\n}"],"names":[],"mappings":"AAAA,qEAAqE;;;;;AAGrE;AACA;AACA;AACA;AAEA;AACA,wWAA6F,SAAS;AAAtG;AAAA;AAAA;AAAA;AAAA;AARA;;;;;;;;;AA2BA,SAAS;IACL,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,aAAa,OAAO,EAAE,GAAG,SAAS,OAAO,EAAE,IAAc;IAE/D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgC;IACjE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAExD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,+BAA+B;IAClF,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,sCAAsC;IAChG,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEpE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,CAAC,YAAY;YACb,SAAS;YACT,iBAAiB;YACjB;QACJ;QAEA,iBAAiB;QACjB,SAAS;QACT,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAoB,CAAC,WAAW,EAAE,YAAY,EAChD,IAAI,CAAC,CAAC;YACH,MAAM,eAAe,SAAS,IAAI;YAClC,aAAa,aAAa,SAAS;YACnC,SAAS,aAAa,KAAK,IAAe,qBAAqB,4BAA4B;YAC3F,UAAU,aAAa,MAAM,EAAE,IAAI,CAAA,MAAO,CAAC;oBAAE,IAAI,IAAI,EAAE;oBAAE,OAAO,IAAI,KAAK;gBAAC,CAAC,MAAM,EAAE;QACvF,GACC,KAAK,CAAC,CAAC;YACJ,QAAQ,KAAK,CAAC,8BAA8B,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;YAC7E,SAAS,IAAI,QAAQ,EAAE,MAAM,WAAW;QAC5C,GACC,OAAO,CAAC;YACL,iBAAiB;QACrB;IACR,GAAG;QAAC;KAAW;IAGf,mFAAmF;IACnF,MAAM,iBAAiB;QACnB,UAAU;eAAI;YAAQ;gBAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;gBAAE,OAAO;YAAG;SAAE;IACtE;IAEA,MAAM,oBAAoB,CAAC,OAAe;QACtC,MAAM,cAAc;eAAI;SAAO;QAC/B,WAAW,CAAC,MAAM,CAAC,KAAK,GAAG;QAC3B,UAAU;IACd;IAEA,MAAM,oBAAoB,CAAC;QACvB,gFAAgF;QAChF,2FAA2F;QAC3F,gFAAgF;QAChF,uDAAuD;QACvD,UAAU,OAAO,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IAC5C;IAEA,MAAM,mBAAmB,CAAC;QACtB,SAAS;QACT,IAAI,aAAa,SAAS;YACtB,UAAU,EAAE;QAChB,OAAO,IAAI,OAAO,MAAM,KAAK,KAAK,aAAa,oBAAoB;YAC9D,gFAAgF;YACjF;QACJ;IACJ;IAGA,MAAM,uBAAuB,OAAO;QAChC,MAAM,cAAc;QACpB,SAAS;QACT,kBAAkB;QAElB,IAAI,CAAC,UAAU,IAAI,IAAI;YACnB,SAAS;YACT;QACJ;QACA,IAAI,UAAU,sBAAsB,CAAC,OAAO,MAAM,KAAK,KAAK,OAAO,IAAI,CAAC,CAAA,MAAO,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,GAAG;YAChG,SAAS;YACT;QACJ;QACA,IAAI,CAAC,YAAY;YACb,SAAS;YACT;QACJ;QAEA,aAAa;QAEb,MAAM,cAAc;YAChB,IAAI;YACJ,WAAW,UAAU,IAAI;YACzB;YACA,qGAAqG;YACrG,yDAAyD;YACzD,QAAQ,UAAU,qBAAqB,OAAO,GAAG,CAAC,CAAA,MAAO,CAAC;oBAAE,OAAO,IAAI,KAAK,CAAC,IAAI;gBAAG,CAAC,KAAK,EAAE;QAChG;QAEA,IAAI;YACA,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAC,cAAc,cAAc,8CAA8C;YACxF,kBAAkB;YAClB,WAAW;gBACP,OAAO,IAAI,CAAC;YAChB,GAAG;QACP,EAAE,OAAO,KAAU;YACf,QAAQ,KAAK,CAAC,+BAA+B,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;YAC9E,SAAS,IAAI,QAAQ,EAAE,MAAM,WAAW;QAC5C,SAAU;YACN,aAAa;QACjB;IACJ;IAEA,IAAI,eAAe;QACf,qBACI,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,iNAAA,CAAA,UAAO;wBAAC,MAAM;wBAAI,WAAU;;;;;;kCAC7B,8OAAC;wBAAE,WAAU;kCAA0B;;;;;;;;;;;;;;;;;IAIvD;IAEA,IAAI,SAAS,CAAC,WAAW;QACrB,qBACK,8OAAC;YAAI,WAAU;;8BACZ,8OAAC,wNAAA,CAAA,gBAAa;oBAAC,MAAM;oBAAI,WAAU;;;;;;8BACnC,8OAAC;oBAAE,WAAU;8BAAwC;;;;;;8BACrD,8OAAC;oBAAE,WAAU;8BAAwB;;;;;;8BACrC,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAa,WAAU;8BAAkB;;;;;;;;;;;;IAKhE;IAGA,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;YAAmB,OAAO;gBAAE,UAAU;YAAQ;;8BACzD,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;;gCAAG;gCAAwB;gCAAW;;;;;;;sCACvC,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAa,WAAU;sCAAyB;;;;;;;;;;;;8BAK/D,8OAAC;oBAAK,UAAU;oBAAsB,WAAU;;wBAC3C,SAAS,CAAC,gCACP,8OAAC;4BAAI,WAAU;4BAAkJ,MAAK;;8CAClK,8OAAC,wNAAA,CAAA,gBAAa;oCAAC,MAAM;oCAAI,WAAU;;;;;;8CACnC,8OAAC;oCAAK,WAAU;8CAAc;;;;;;gCAAY;gCAAE;;;;;;;wBAGnD,gCACG,8OAAC;4BAAI,WAAU;4BAA8J,MAAK;;8CAC9K,8OAAC,qNAAA,CAAA,eAAY;oCAAC,MAAM;oCAAI,WAAU;;;;;;gCACjC;;;;;;;sCAIT,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAM,SAAQ;oCAAY,WAAU;8CAAa;;;;;;8CAClD,8OAAC;oCACG,IAAG;oCACH,OAAO;oCACP,UAAU,CAAA,IAAK,aAAa,EAAE,MAAM,CAAC,KAAK;oCAC1C,MAAM;oCACN,WAAU;oCACV,aAAY;oCACZ,QAAQ;oCACR,UAAU,aAAa;;;;;;;;;;;;sCAI/B,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAM,SAAQ;oCAAO,WAAU;8CAAa;;;;;;8CAC7C,8OAAC;oCACG,IAAG;oCACH,OAAO;oCACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;oCAChD,WAAU;oCACV,UAAU,aAAa;;sDAEvB,8OAAC;4CAAO,OAAM;sDAAQ;;;;;;sDACtB,8OAAC;4CAAO,OAAM;sDAAmB;;;;;;;;;;;;;;;;;;wBAIxC,UAAU,oCACP,8OAAC;4BAAS,WAAU;;8CAChB,8OAAC;oCAAO,WAAU;8CAAkB;;;;;;8CACpC,8OAAC;oCAAI,WAAU;8CACV,OAAO,GAAG,CAAC,CAAC,OAAO,sBAChB,8OAAC;4CAA4C,WAAU;;8DACnD,8OAAC;oDACG,MAAK;oDACL,OAAO,MAAM,KAAK;oDAClB,UAAU,CAAC,IAAM,kBAAkB,OAAO,EAAE,MAAM,CAAC,KAAK;oDACxD,aAAa,CAAC,eAAe,EAAE,QAAQ,GAAG;oDAC1C,WAAU;oDACV,QAAQ;oDACR,UAAU,aAAa;;;;;;8DAE3B,8OAAC;oDACG,MAAK;oDACL,SAAS,IAAM,kBAAkB;oDACjC,WAAU;oDACV,OAAM;oDACN,UAAU,aAAa;8DAEvB,cAAA,8OAAC,0MAAA,CAAA,SAAM;wDAAC,MAAM;;;;;;;;;;;;2CAjBZ,MAAM,EAAE,IAAI,MAAM,MAAM,IAAI;;;;;;;;;;8CAsB9C,8OAAC;oCACG,MAAK;oCACL,SAAS;oCACT,WAAU;oCACV,UAAU,aAAa;;sDAEvB,8OAAC,sMAAA,CAAA,WAAQ;4CAAC,MAAM;4CAAI,WAAU;;;;;;wCAAS;;;;;;;;;;;;;sCAKnD,8OAAC;4BAAI,WAAU;;8CACV,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAa,WAAU;oCAAoB,iBAAe;8CAAW;;;;;;8CAGjF,8OAAC;oCACG,MAAK;oCACL,WAAU;oCACV,UAAU,aAAa;8CAEtB,0BACG;;0DACI,8OAAC,iNAAA,CAAA,UAAO;gDAAC,MAAM;gDAAI,WAAU;;;;;;4CAAqB;;qEAItD;;0DACG,8OAAC,kMAAA,CAAA,OAAI;gDAAC,MAAM;gDAAI,WAAU;;;;;;4CAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUrE;AAGe,SAAS;IACpB,qBACI,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBACN,8OAAC;YAAI,WAAU;sBACV,cAAA,8OAAC;gBAAI,WAAU;;kCACZ,8OAAC,iNAAA,CAAA,UAAO;wBAAC,MAAM;wBAAI,WAAU;;;;;;kCAC7B,8OAAC;wBAAE,WAAU;kCAA0B;;;;;;;;;;;;;;;;;kBAI/C,cAAA,8OAAC,4IAAA,CAAA,UAAc;sBACX,cAAA,8OAAC;;;;;;;;;;;;;;;AAIjB"}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}